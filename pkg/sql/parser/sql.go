// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"math"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: tree.ComparisonOperator{
					Symbol:             tree.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case tree.BinaryOperator:

		switch op.Symbol {
		case tree.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case tree.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case tree.ComparisonOperator:
		switch op.Symbol {
		case tree.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:165

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) storageParamKeys() []tree.Name {
	if params, ok := u.val.([]tree.Name); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) relocateSubject() tree.RelocateSubject {
	return u.val.(tree.RelocateSubject)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}

func (u *sqlSymUnion) scheduleLabelSpec() *tree.ScheduleLabelSpec {
	return u.val.(*tree.ScheduleLabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}

//line sql-gen.y:888
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INCREMENTAL_STORAGE = lexbase.INCREMENTAL_STORAGE
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NOSQLLOGIN = lexbase.NOSQLLOGIN
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NONVOTERS = lexbase.NONVOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOVIEWACTIVITYREDACTED = lexbase.NOVIEWACTIVITYREDACTED
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const RELOCATE = lexbase.RELOCATE
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const SQLLOGIN = lexbase.SQLLOGIN
const START = lexbase.START
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIEWACTIVITYREDACTED = lexbase.VIEWACTIVITYREDACTED
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const INTERVAL_SIMPLE = lexbase.INTERVAL_SIMPLE
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_STORAGE",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NOSQLLOGIN",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NONVOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOVIEWACTIVITYREDACTED",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELOCATE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"SQLLOGIN",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIEWACTIVITYREDACTED",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"INTERVAL_SIMPLE",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:13946

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1622,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	263, 422,
	-2, 0,
	-1, 74,
	245, 250,
	523, 250,
	-2, 0,
	-1, 88,
	234, 1355,
	247, 1355,
	263, 418,
	396, 418,
	407, 1104,
	447, 418,
	460, 1104,
	508, 1104,
	534, 418,
	560, 1104,
	-2, 0,
	-1, 94,
	133, 1622,
	240, 1622,
	545, 1622,
	546, 1622,
	-2, 0,
	-1, 112,
	152, 1593,
	172, 1593,
	185, 1593,
	243, 1593,
	276, 1593,
	347, 1593,
	357, 1593,
	540, 1593,
	-2, 1564,
	-1, 153,
	160, 940,
	262, 940,
	399, 901,
	465, 901,
	507, 901,
	526, 940,
	528, 901,
	-2, 0,
	-1, 157,
	4, 1624,
	21, 1624,
	22, 1624,
	23, 1624,
	24, 1624,
	25, 1624,
	26, 1624,
	27, 1624,
	29, 1624,
	30, 1624,
	36, 1624,
	41, 1624,
	42, 1624,
	44, 1624,
	45, 1624,
	46, 1624,
	47, 1624,
	48, 1624,
	49, 1624,
	50, 1624,
	51, 1624,
	53, 1624,
	54, 1624,
	55, 1624,
	56, 1624,
	58, 1624,
	59, 1624,
	60, 1624,
	61, 1624,
	62, 1624,
	63, 1624,
	64, 1624,
	68, 1624,
	69, 1624,
	70, 1624,
	71, 1624,
	73, 1624,
	74, 1624,
	75, 1624,
	79, 1624,
	80, 1624,
	81, 1624,
	82, 1624,
	83, 1624,
	84, 1624,
	85, 1624,
	88, 1624,
	89, 1624,
	90, 1624,
	91, 1624,
	92, 1624,
	94, 1624,
	96, 1624,
	97, 1624,
	98, 1624,
	99, 1624,
	100, 1624,
	101, 1624,
	103, 1624,
	104, 1624,
	105, 1624,
	107, 1624,
	108, 1624,
	109, 1624,
	117, 1624,
	118, 1624,
	119, 1624,
	120, 1624,
	121, 1624,
	123, 1624,
	124, 1624,
	125, 1624,
	126, 1624,
	128, 1624,
	129, 1624,
	130, 1624,
	132, 1624,
	133, 1624,
	134, 1624,
	136, 1624,
	137, 1624,
	138, 1624,
	141, 1624,
	142, 1624,
	143, 1624,
	145, 1624,
	146, 1624,
	147, 1624,
	149, 1624,
	150, 1624,
	151, 1624,
	153, 1624,
	154, 1624,
	155, 1624,
	156, 1624,
	157, 1624,
	158, 1624,
	159, 1624,
	160, 1624,
	161, 1624,
	162, 1624,
	163, 1624,
	164, 1624,
	165, 1624,
	166, 1624,
	167, 1624,
	168, 1624,
	169, 1624,
	171, 1624,
	177, 1624,
	178, 1624,
	179, 1624,
	180, 1624,
	184, 1624,
	186, 1624,
	187, 1624,
	188, 1624,
	192, 1624,
	193, 1624,
	194, 1624,
	195, 1624,
	196, 1624,
	197, 1624,
	198, 1624,
	199, 1624,
	200, 1624,
	201, 1624,
	202, 1624,
	203, 1624,
	204, 1624,
	205, 1624,
	207, 1624,
	208, 1624,
	210, 1624,
	211, 1624,
	213, 1624,
	214, 1624,
	215, 1624,
	216, 1624,
	217, 1624,
	218, 1624,
	219, 1624,
	220, 1624,
	221, 1624,
	223, 1624,
	224, 1624,
	226, 1624,
	227, 1624,
	228, 1624,
	229, 1624,
	230, 1624,
	234, 1624,
	235, 1624,
	236, 1624,
	237, 1624,
	240, 1624,
	241, 1624,
	242, 1624,
	244, 1624,
	246, 1624,
	247, 1624,
	249, 1624,
	251, 1624,
	252, 1624,
	253, 1624,
	255, 1624,
	259, 1624,
	260, 1624,
	261, 1624,
	262, 1624,
	263, 1624,
	264, 1624,
	266, 1624,
	267, 1624,
	268, 1624,
	270, 1624,
	271, 1624,
	273, 1624,
	274, 1624,
	277, 1624,
	278, 1624,
	279, 1624,
	280, 1624,
	281, 1624,
	282, 1624,
	283, 1624,
	286, 1624,
	287, 1624,
	288, 1624,
	289, 1624,
	291, 1624,
	292, 1624,
	293, 1624,
	294, 1624,
	295, 1624,
	296, 1624,
	297, 1624,
	298, 1624,
	299, 1624,
	300, 1624,
	301, 1624,
	302, 1624,
	303, 1624,
	304, 1624,
	305, 1624,
	306, 1624,
	307, 1624,
	308, 1624,
	309, 1624,
	310, 1624,
	311, 1624,
	312, 1624,
	314, 1624,
	316, 1624,
	317, 1624,
	318, 1624,
	319, 1624,
	320, 1624,
	321, 1624,
	322, 1624,
	323, 1624,
	324, 1624,
	325, 1624,
	326, 1624,
	327, 1624,
	328, 1624,
	329, 1624,
	330, 1624,
	331, 1624,
	333, 1624,
	334, 1624,
	336, 1624,
	338, 1624,
	339, 1624,
	340, 1624,
	342, 1624,
	343, 1624,
	344, 1624,
	345, 1624,
	346, 1624,
	349, 1624,
	352, 1624,
	353, 1624,
	354, 1624,
	355, 1624,
	358, 1624,
	359, 1624,
	360, 1624,
	362, 1624,
	364, 1624,
	365, 1624,
	366, 1624,
	367, 1624,
	368, 1624,
	369, 1624,
	370, 1624,
	371, 1624,
	372, 1624,
	373, 1624,
	374, 1624,
	375, 1624,
	376, 1624,
	378, 1624,
	379, 1624,
	380, 1624,
	381, 1624,
	382, 1624,
	383, 1624,
	384, 1624,
	385, 1624,
	386, 1624,
	387, 1624,
	388, 1624,
	389, 1624,
	390, 1624,
	391, 1624,
	392, 1624,
	394, 1624,
	395, 1624,
	397, 1624,
	398, 1624,
	399, 1624,
	400, 1624,
	401, 1624,
	402, 1624,
	403, 1624,
	404, 1624,
	405, 1624,
	406, 1624,
	407, 1624,
	408, 1624,
	409, 1624,
	411, 1624,
	413, 1624,
	414, 1624,
	415, 1624,
	421, 1624,
	422, 1624,
	424, 1624,
	425, 1624,
	426, 1624,
	427, 1624,
	428, 1624,
	429, 1624,
	430, 1624,
	431, 1624,
	432, 1624,
	433, 1624,
	435, 1624,
	436, 1624,
	437, 1624,
	439, 1624,
	440, 1624,
	441, 1624,
	442, 1624,
	443, 1624,
	444, 1624,
	445, 1624,
	447, 1624,
	448, 1624,
	449, 1624,
	450, 1624,
	451, 1624,
	452, 1624,
	453, 1624,
	454, 1624,
	455, 1624,
	456, 1624,
	457, 1624,
	458, 1624,
	460, 1624,
	461, 1624,
	462, 1624,
	463, 1624,
	464, 1624,
	465, 1624,
	467, 1624,
	468, 1624,
	469, 1624,
	470, 1624,
	471, 1624,
	472, 1624,
	474, 1624,
	475, 1624,
	476, 1624,
	477, 1624,
	478, 1624,
	479, 1624,
	480, 1624,
	481, 1624,
	483, 1624,
	485, 1624,
	486, 1624,
	487, 1624,
	488, 1624,
	489, 1624,
	490, 1624,
	491, 1624,
	492, 1624,
	493, 1624,
	494, 1624,
	495, 1624,
	496, 1624,
	497, 1624,
	498, 1624,
	499, 1624,
	500, 1624,
	501, 1624,
	503, 1624,
	504, 1624,
	506, 1624,
	507, 1624,
	509, 1624,
	510, 1624,
	511, 1624,
	512, 1624,
	513, 1624,
	514, 1624,
	515, 1624,
	516, 1624,
	518, 1624,
	519, 1624,
	520, 1624,
	521, 1624,
	522, 1624,
	524, 1624,
	526, 1624,
	527, 1624,
	528, 1624,
	529, 1624,
	530, 1624,
	531, 1624,
	533, 1624,
	534, 1624,
	535, 1624,
	536, 1624,
	538, 1624,
	539, 1624,
	542, 1624,
	543, 1624,
	544, 1624,
	545, 1624,
	546, 1624,
	547, 1624,
	548, 1624,
	550, 1624,
	553, 1624,
	554, 1624,
	555, 1624,
	556, 1624,
	557, 1624,
	558, 1624,
	560, 1624,
	561, 1624,
	562, 1624,
	563, 1624,
	564, 1624,
	565, 1624,
	566, 1624,
	571, 1624,
	572, 1624,
	573, 1624,
	574, 1624,
	575, 1624,
	576, 1624,
	-2, 0,
	-1, 158,
	1, 1472,
	131, 1472,
	251, 1472,
	335, 1472,
	394, 1472,
	403, 1472,
	580, 1472,
	610, 1472,
	-2, 0,
	-1, 160,
	1, 1472,
	610, 1472,
	-2, 0,
	-1, 161,
	1, 1472,
	610, 1472,
	-2, 0,
	-1, 162,
	1, 1472,
	523, 1472,
	610, 1472,
	-2, 0,
	-1, 192,
	152, 1592,
	172, 1592,
	185, 1592,
	243, 1592,
	276, 1592,
	347, 1592,
	357, 1592,
	540, 1592,
	-2, 1567,
	-1, 239,
	4, 1631,
	5, 1631,
	6, 1631,
	7, 1631,
	8, 1631,
	9, 1631,
	10, 1631,
	21, 1631,
	22, 1631,
	23, 1631,
	24, 1631,
	25, 1631,
	26, 1631,
	27, 1631,
	29, 1631,
	30, 1631,
	36, 1631,
	37, 1631,
	41, 1631,
	42, 1631,
	43, 1631,
	44, 1631,
	45, 1631,
	46, 1631,
	47, 1631,
	48, 1631,
	49, 1631,
	50, 1631,
	51, 1631,
	53, 1631,
	54, 1631,
	55, 1631,
	56, 1631,
	58, 1631,
	59, 1631,
	60, 1631,
	61, 1631,
	62, 1631,
	63, 1631,
	64, 1631,
	65, 1631,
	66, 1631,
	67, 1631,
	68, 1631,
	69, 1631,
	70, 1631,
	71, 1631,
	73, 1631,
	74, 1631,
	75, 1631,
	77, 1631,
	79, 1631,
	80, 1631,
	81, 1631,
	82, 1631,
	83, 1631,
	84, 1631,
	85, 1631,
	88, 1631,
	89, 1631,
	90, 1631,
	91, 1631,
	92, 1631,
	94, 1631,
	96, 1631,
	97, 1631,
	98, 1631,
	99, 1631,
	100, 1631,
	101, 1631,
	103, 1631,
	104, 1631,
	105, 1631,
	106, 1631,
	107, 1631,
	108, 1631,
	109, 1631,
	110, 1631,
	111, 1631,
	112, 1631,
	113, 1631,
	114, 1631,
	115, 1631,
	116, 1631,
	117, 1631,
	118, 1631,
	119, 1631,
	120, 1631,
	121, 1631,
	122, 1631,
	123, 1631,
	124, 1631,
	125, 1631,
	126, 1631,
	127, 1631,
	128, 1631,
	129, 1631,
	130, 1631,
	132, 1631,
	133, 1631,
	134, 1631,
	136, 1631,
	137, 1631,
	138, 1631,
	141, 1631,
	142, 1631,
	143, 1631,
	145, 1631,
	146, 1631,
	147, 1631,
	149, 1631,
	150, 1631,
	151, 1631,
	153, 1631,
	154, 1631,
	155, 1631,
	156, 1631,
	157, 1631,
	158, 1631,
	159, 1631,
	160, 1631,
	161, 1631,
	162, 1631,
	163, 1631,
	164, 1631,
	165, 1631,
	166, 1631,
	167, 1631,
	168, 1631,
	169, 1631,
	170, 1631,
	171, 1631,
	177, 1631,
	178, 1631,
	179, 1631,
	180, 1631,
	184, 1631,
	186, 1631,
	187, 1631,
	188, 1631,
	191, 1631,
	192, 1631,
	193, 1631,
	194, 1631,
	195, 1631,
	196, 1631,
	197, 1631,
	198, 1631,
	199, 1631,
	200, 1631,
	201, 1631,
	202, 1631,
	203, 1631,
	204, 1631,
	205, 1631,
	207, 1631,
	208, 1631,
	210, 1631,
	211, 1631,
	213, 1631,
	214, 1631,
	215, 1631,
	216, 1631,
	217, 1631,
	218, 1631,
	219, 1631,
	220, 1631,
	221, 1631,
	222, 1631,
	223, 1631,
	224, 1631,
	226, 1631,
	227, 1631,
	228, 1631,
	229, 1631,
	230, 1631,
	234, 1631,
	235, 1631,
	236, 1631,
	237, 1631,
	239, 1631,
	240, 1631,
	241, 1631,
	242, 1631,
	244, 1631,
	246, 1631,
	247, 1631,
	248, 1631,
	249, 1631,
	250, 1631,
	251, 1631,
	252, 1631,
	253, 1631,
	254, 1631,
	255, 1631,
	259, 1631,
	260, 1631,
	261, 1631,
	262, 1631,
	263, 1631,
	264, 1631,
	266, 1631,
	267, 1631,
	268, 1631,
	270, 1631,
	271, 1631,
	272, 1631,
	273, 1631,
	274, 1631,
	275, 1631,
	277, 1631,
	278, 1631,
	279, 1631,
	280, 1631,
	281, 1631,
	282, 1631,
	283, 1631,
	284, 1631,
	285, 1631,
	286, 1631,
	287, 1631,
	288, 1631,
	289, 1631,
	291, 1631,
	292, 1631,
	293, 1631,
	294, 1631,
	295, 1631,
	296, 1631,
	297, 1631,
	298, 1631,
	299, 1631,
	300, 1631,
	301, 1631,
	302, 1631,
	303, 1631,
	304, 1631,
	305, 1631,
	306, 1631,
	307, 1631,
	308, 1631,
	309, 1631,
	310, 1631,
	311, 1631,
	312, 1631,
	314, 1631,
	315, 1631,
	316, 1631,
	317, 1631,
	318, 1631,
	319, 1631,
	320, 1631,
	321, 1631,
	322, 1631,
	323, 1631,
	324, 1631,
	325, 1631,
	326, 1631,
	327, 1631,
	328, 1631,
	329, 1631,
	330, 1631,
	331, 1631,
	332, 1631,
	333, 1631,
	334, 1631,
	335, 1631,
	336, 1631,
	337, 1631,
	338, 1631,
	339, 1631,
	340, 1631,
	341, 1631,
	342, 1631,
	343, 1631,
	344, 1631,
	345, 1631,
	346, 1631,
	349, 1631,
	353, 1631,
	354, 1631,
	355, 1631,
	358, 1631,
	359, 1631,
	360, 1631,
	361, 1631,
	362, 1631,
	363, 1631,
	364, 1631,
	365, 1631,
	366, 1631,
	367, 1631,
	368, 1631,
	369, 1631,
	370, 1631,
	371, 1631,
	372, 1631,
	373, 1631,
	374, 1631,
	375, 1631,
	376, 1631,
	378, 1631,
	379, 1631,
	380, 1631,
	381, 1631,
	382, 1631,
	383, 1631,
	384, 1631,
	385, 1631,
	386, 1631,
	387, 1631,
	388, 1631,
	389, 1631,
	390, 1631,
	391, 1631,
	392, 1631,
	394, 1631,
	395, 1631,
	397, 1631,
	398, 1631,
	399, 1631,
	400, 1631,
	401, 1631,
	402, 1631,
	403, 1631,
	404, 1631,
	405, 1631,
	406, 1631,
	407, 1631,
	408, 1631,
	409, 1631,
	411, 1631,
	413, 1631,
	414, 1631,
	415, 1631,
	421, 1631,
	422, 1631,
	424, 1631,
	425, 1631,
	426, 1631,
	427, 1631,
	428, 1631,
	429, 1631,
	430, 1631,
	431, 1631,
	432, 1631,
	433, 1631,
	435, 1631,
	436, 1631,
	437, 1631,
	438, 1631,
	439, 1631,
	440, 1631,
	441, 1631,
	442, 1631,
	443, 1631,
	444, 1631,
	445, 1631,
	447, 1631,
	448, 1631,
	449, 1631,
	450, 1631,
	451, 1631,
	452, 1631,
	453, 1631,
	454, 1631,
	455, 1631,
	456, 1631,
	457, 1631,
	458, 1631,
	460, 1631,
	461, 1631,
	462, 1631,
	463, 1631,
	464, 1631,
	465, 1631,
	466, 1631,
	467, 1631,
	468, 1631,
	469, 1631,
	470, 1631,
	471, 1631,
	472, 1631,
	473, 1631,
	474, 1631,
	475, 1631,
	476, 1631,
	477, 1631,
	478, 1631,
	479, 1631,
	480, 1631,
	481, 1631,
	483, 1631,
	485, 1631,
	486, 1631,
	487, 1631,
	488, 1631,
	489, 1631,
	490, 1631,
	491, 1631,
	492, 1631,
	493, 1631,
	494, 1631,
	495, 1631,
	496, 1631,
	497, 1631,
	498, 1631,
	499, 1631,
	500, 1631,
	501, 1631,
	503, 1631,
	504, 1631,
	505, 1631,
	506, 1631,
	507, 1631,
	509, 1631,
	510, 1631,
	511, 1631,
	512, 1631,
	513, 1631,
	514, 1631,
	515, 1631,
	516, 1631,
	518, 1631,
	519, 1631,
	520, 1631,
	521, 1631,
	522, 1631,
	524, 1631,
	526, 1631,
	527, 1631,
	528, 1631,
	529, 1631,
	530, 1631,
	531, 1631,
	532, 1631,
	533, 1631,
	534, 1631,
	535, 1631,
	536, 1631,
	538, 1631,
	539, 1631,
	541, 1631,
	542, 1631,
	543, 1631,
	544, 1631,
	545, 1631,
	546, 1631,
	547, 1631,
	548, 1631,
	549, 1631,
	550, 1631,
	553, 1631,
	554, 1631,
	555, 1631,
	556, 1631,
	557, 1631,
	558, 1631,
	560, 1631,
	561, 1631,
	562, 1631,
	563, 1631,
	564, 1631,
	565, 1631,
	566, 1631,
	571, 1631,
	572, 1631,
	573, 1631,
	574, 1631,
	575, 1631,
	576, 1631,
	577, 1631,
	590, 1631,
	597, 1631,
	598, 1631,
	599, 1631,
	607, 1631,
	611, 1631,
	-2, 0,
	-1, 758,
	4, 1353,
	21, 1353,
	22, 1353,
	23, 1353,
	24, 1353,
	25, 1353,
	26, 1353,
	27, 1353,
	29, 1353,
	30, 1353,
	36, 1353,
	41, 1353,
	42, 1353,
	44, 1353,
	45, 1353,
	46, 1353,
	47, 1353,
	48, 1353,
	49, 1353,
	50, 1353,
	51, 1353,
	53, 1353,
	54, 1353,
	55, 1353,
	56, 1353,
	58, 1353,
	59, 1353,
	60, 1353,
	61, 1353,
	62, 1353,
	63, 1353,
	64, 1353,
	68, 1353,
	69, 1353,
	70, 1353,
	71, 1353,
	73, 1353,
	74, 1353,
	75, 1353,
	79, 1353,
	80, 1353,
	81, 1353,
	82, 1353,
	83, 1353,
	84, 1353,
	85, 1353,
	88, 1353,
	89, 1353,
	90, 1353,
	91, 1353,
	92, 1353,
	94, 1353,
	96, 1353,
	97, 1353,
	98, 1353,
	99, 1353,
	100, 1353,
	101, 1353,
	103, 1353,
	104, 1353,
	105, 1353,
	107, 1353,
	108, 1353,
	109, 1353,
	117, 1353,
	118, 1353,
	119, 1353,
	120, 1353,
	121, 1353,
	123, 1353,
	124, 1353,
	125, 1353,
	126, 1353,
	128, 1353,
	129, 1353,
	130, 1353,
	132, 1353,
	133, 1353,
	134, 1353,
	136, 1353,
	137, 1353,
	138, 1353,
	141, 1353,
	142, 1353,
	143, 1353,
	145, 1353,
	146, 1353,
	147, 1353,
	149, 1353,
	150, 1353,
	151, 1353,
	153, 1353,
	154, 1353,
	155, 1353,
	156, 1353,
	157, 1353,
	158, 1353,
	159, 1353,
	160, 1353,
	161, 1353,
	162, 1353,
	163, 1353,
	164, 1353,
	165, 1353,
	166, 1353,
	167, 1353,
	168, 1353,
	169, 1353,
	171, 1353,
	177, 1353,
	178, 1353,
	179, 1353,
	180, 1353,
	184, 1353,
	186, 1353,
	187, 1353,
	188, 1353,
	192, 1353,
	193, 1353,
	194, 1353,
	195, 1353,
	196, 1353,
	197, 1353,
	198, 1353,
	199, 1353,
	200, 1353,
	201, 1353,
	202, 1353,
	203, 1353,
	204, 1353,
	205, 1353,
	207, 1353,
	208, 1353,
	210, 1353,
	211, 1353,
	213, 1353,
	214, 1353,
	215, 1353,
	216, 1353,
	217, 1353,
	218, 1353,
	219, 1353,
	220, 1353,
	221, 1353,
	223, 1353,
	224, 1353,
	226, 1353,
	227, 1353,
	228, 1353,
	229, 1353,
	230, 1353,
	234, 1353,
	235, 1353,
	236, 1353,
	237, 1353,
	240, 1353,
	241, 1353,
	242, 1353,
	244, 1353,
	246, 1353,
	247, 1353,
	249, 1353,
	251, 1353,
	252, 1353,
	253, 1353,
	255, 1353,
	259, 1353,
	260, 1353,
	261, 1353,
	262, 1353,
	263, 1353,
	264, 1353,
	266, 1353,
	267, 1353,
	268, 1353,
	270, 1353,
	271, 1353,
	273, 1353,
	274, 1353,
	277, 1353,
	278, 1353,
	279, 1353,
	280, 1353,
	281, 1353,
	282, 1353,
	283, 1353,
	286, 1353,
	287, 1353,
	288, 1353,
	289, 1353,
	291, 1353,
	292, 1353,
	293, 1353,
	294, 1353,
	295, 1353,
	296, 1353,
	297, 1353,
	298, 1353,
	299, 1353,
	300, 1353,
	301, 1353,
	302, 1353,
	303, 1353,
	304, 1353,
	305, 1353,
	306, 1353,
	307, 1353,
	308, 1353,
	309, 1353,
	310, 1353,
	311, 1353,
	312, 1353,
	314, 1353,
	316, 1353,
	317, 1353,
	318, 1353,
	319, 1353,
	320, 1353,
	321, 1353,
	322, 1353,
	323, 1353,
	324, 1353,
	325, 1353,
	326, 1353,
	327, 1353,
	328, 1353,
	329, 1353,
	330, 1353,
	331, 1353,
	333, 1353,
	334, 1353,
	336, 1353,
	338, 1353,
	339, 1353,
	340, 1353,
	342, 1353,
	343, 1353,
	344, 1353,
	345, 1353,
	346, 1353,
	349, 1353,
	353, 1353,
	354, 1353,
	355, 1353,
	358, 1353,
	359, 1353,
	360, 1353,
	362, 1353,
	364, 1353,
	365, 1353,
	366, 1353,
	367, 1353,
	368, 1353,
	369, 1353,
	370, 1353,
	371, 1353,
	372, 1353,
	373, 1353,
	374, 1353,
	375, 1353,
	376, 1353,
	378, 1353,
	379, 1353,
	380, 1353,
	381, 1353,
	382, 1353,
	383, 1353,
	384, 1353,
	385, 1353,
	386, 1353,
	387, 1353,
	388, 1353,
	389, 1353,
	390, 1353,
	391, 1353,
	392, 1353,
	394, 1353,
	395, 1353,
	397, 1353,
	398, 1353,
	399, 1353,
	400, 1353,
	401, 1353,
	402, 1353,
	403, 1353,
	404, 1353,
	405, 1353,
	406, 1353,
	407, 1353,
	408, 1353,
	409, 1353,
	411, 1353,
	413, 1353,
	414, 1353,
	415, 1353,
	421, 1353,
	422, 1353,
	424, 1353,
	425, 1353,
	426, 1353,
	427, 1353,
	428, 1353,
	429, 1353,
	430, 1353,
	431, 1353,
	432, 1353,
	433, 1353,
	435, 1353,
	436, 1353,
	437, 1353,
	439, 1353,
	440, 1353,
	441, 1353,
	442, 1353,
	443, 1353,
	444, 1353,
	445, 1353,
	447, 1353,
	448, 1353,
	449, 1353,
	450, 1353,
	451, 1353,
	452, 1353,
	453, 1353,
	454, 1353,
	455, 1353,
	456, 1353,
	457, 1353,
	458, 1353,
	460, 1353,
	461, 1353,
	462, 1353,
	463, 1353,
	464, 1353,
	465, 1353,
	467, 1353,
	468, 1353,
	469, 1353,
	470, 1353,
	471, 1353,
	472, 1353,
	474, 1353,
	475, 1353,
	476, 1353,
	477, 1353,
	478, 1353,
	479, 1353,
	480, 1353,
	481, 1353,
	483, 1353,
	485, 1353,
	486, 1353,
	487, 1353,
	488, 1353,
	489, 1353,
	490, 1353,
	491, 1353,
	492, 1353,
	493, 1353,
	494, 1353,
	495, 1353,
	496, 1353,
	497, 1353,
	498, 1353,
	499, 1353,
	500, 1353,
	501, 1353,
	503, 1353,
	504, 1353,
	506, 1353,
	507, 1353,
	509, 1353,
	510, 1353,
	511, 1353,
	512, 1353,
	513, 1353,
	514, 1353,
	515, 1353,
	516, 1353,
	518, 1353,
	519, 1353,
	520, 1353,
	521, 1353,
	522, 1353,
	524, 1353,
	526, 1353,
	527, 1353,
	528, 1353,
	529, 1353,
	530, 1353,
	531, 1353,
	533, 1353,
	534, 1353,
	535, 1353,
	536, 1353,
	538, 1353,
	539, 1353,
	542, 1353,
	543, 1353,
	544, 1353,
	545, 1353,
	546, 1353,
	547, 1353,
	548, 1353,
	550, 1353,
	553, 1353,
	554, 1353,
	555, 1353,
	556, 1353,
	557, 1353,
	558, 1353,
	560, 1353,
	561, 1353,
	562, 1353,
	563, 1353,
	564, 1353,
	565, 1353,
	566, 1353,
	571, 1353,
	572, 1353,
	573, 1353,
	574, 1353,
	575, 1353,
	576, 1353,
	-2, 0,
	-1, 777,
	190, 2423,
	523, 2423,
	589, 2423,
	609, 2423,
	-2, 0,
	-1, 778,
	190, 2410,
	523, 2410,
	589, 2410,
	609, 2410,
	-2, 0,
	-1, 780,
	190, 2677,
	523, 2677,
	589, 2677,
	609, 2677,
	-2, 0,
	-1, 783,
	190, 2535,
	523, 2535,
	589, 2535,
	609, 2535,
	-2, 0,
	-1, 784,
	190, 2719,
	523, 2719,
	589, 2719,
	609, 2719,
	-2, 0,
	-1, 792,
	190, 2562,
	523, 2562,
	589, 2562,
	609, 2562,
	-2, 722,
	-1, 827,
	609, 2359,
	612, 2359,
	-2, 1022,
	-1, 828,
	609, 2361,
	612, 2361,
	-2, 1023,
	-1, 829,
	609, 2360,
	612, 2360,
	-2, 1024,
	-1, 830,
	612, 2285,
	-2, 1025,
	-1, 855,
	185, 269,
	-2, 0,
	-1, 879,
	43, 2332,
	-2, 0,
	-1, 880,
	560, 1331,
	-2, 1105,
	-1, 896,
	4, 1765,
	21, 1765,
	22, 1765,
	23, 1765,
	24, 1765,
	25, 1765,
	26, 1765,
	27, 1765,
	29, 1765,
	30, 1765,
	36, 1765,
	41, 1765,
	42, 1765,
	44, 1765,
	45, 1765,
	46, 1765,
	47, 1765,
	48, 1765,
	49, 1765,
	50, 1765,
	51, 1765,
	53, 1765,
	54, 1765,
	55, 1765,
	56, 1765,
	58, 1765,
	59, 1765,
	60, 1765,
	61, 1765,
	62, 1765,
	63, 1765,
	64, 1765,
	68, 1765,
	69, 1765,
	70, 1765,
	71, 1765,
	73, 1765,
	74, 1765,
	75, 1765,
	79, 1765,
	80, 1765,
	81, 1765,
	82, 1765,
	83, 1765,
	84, 1765,
	85, 1765,
	88, 1765,
	89, 1765,
	90, 1765,
	91, 1765,
	92, 1765,
	94, 1765,
	96, 1765,
	97, 1765,
	98, 1765,
	99, 1765,
	100, 1765,
	101, 1765,
	103, 1765,
	104, 1765,
	105, 1765,
	107, 1765,
	108, 1765,
	109, 1765,
	117, 1765,
	118, 1765,
	119, 1765,
	120, 1765,
	121, 1765,
	123, 1765,
	124, 1765,
	125, 1765,
	126, 1765,
	128, 1765,
	129, 1765,
	130, 1765,
	132, 1765,
	133, 1765,
	134, 1765,
	136, 1765,
	137, 1765,
	138, 1765,
	141, 1765,
	142, 1765,
	143, 1765,
	145, 1765,
	146, 1765,
	147, 1765,
	149, 1765,
	150, 1765,
	151, 1765,
	153, 1765,
	154, 1765,
	155, 1765,
	156, 1765,
	157, 1765,
	158, 1765,
	159, 1765,
	160, 1765,
	161, 1765,
	162, 1765,
	163, 1765,
	164, 1765,
	165, 1765,
	166, 1765,
	167, 1765,
	168, 1765,
	169, 1765,
	171, 1765,
	177, 1765,
	178, 1765,
	179, 1765,
	180, 1765,
	184, 1765,
	186, 1765,
	187, 1765,
	188, 1765,
	192, 1765,
	193, 1765,
	194, 1765,
	195, 1765,
	196, 1765,
	197, 1765,
	198, 1765,
	199, 1765,
	200, 1765,
	201, 1765,
	202, 1765,
	203, 1765,
	204, 1765,
	205, 1765,
	207, 1765,
	208, 1765,
	210, 1765,
	211, 1765,
	213, 1765,
	214, 1765,
	215, 1765,
	216, 1765,
	217, 1765,
	218, 1765,
	219, 1765,
	220, 1765,
	221, 1765,
	223, 1765,
	224, 1765,
	226, 1765,
	227, 1765,
	228, 1765,
	229, 1765,
	230, 1765,
	234, 1765,
	235, 1765,
	236, 1765,
	237, 1765,
	240, 1765,
	241, 1765,
	242, 1765,
	244, 1765,
	246, 1765,
	247, 1765,
	249, 1765,
	251, 1765,
	252, 1765,
	253, 1765,
	255, 1765,
	259, 1765,
	260, 1765,
	261, 1765,
	262, 1765,
	263, 1765,
	264, 1765,
	266, 1765,
	267, 1765,
	268, 1765,
	270, 1765,
	271, 1765,
	273, 1765,
	274, 1765,
	277, 1765,
	278, 1765,
	279, 1765,
	280, 1765,
	281, 1765,
	282, 1765,
	283, 1765,
	286, 1765,
	287, 1765,
	288, 1765,
	289, 1765,
	291, 1765,
	292, 1765,
	293, 1765,
	294, 1765,
	295, 1765,
	296, 1765,
	297, 1765,
	298, 1765,
	299, 1765,
	300, 1765,
	301, 1765,
	302, 1765,
	303, 1765,
	304, 1765,
	305, 1765,
	306, 1765,
	307, 1765,
	308, 1765,
	309, 1765,
	310, 1765,
	311, 1765,
	312, 1765,
	314, 1765,
	316, 1765,
	317, 1765,
	318, 1765,
	319, 1765,
	320, 1765,
	321, 1765,
	322, 1765,
	323, 1765,
	324, 1765,
	325, 1765,
	326, 1765,
	327, 1765,
	328, 1765,
	329, 1765,
	330, 1765,
	331, 1765,
	333, 1765,
	334, 1765,
	336, 1765,
	338, 1765,
	339, 1765,
	340, 1765,
	342, 1765,
	343, 1765,
	344, 1765,
	345, 1765,
	346, 1765,
	349, 1765,
	353, 1765,
	354, 1765,
	355, 1765,
	358, 1765,
	359, 1765,
	360, 1765,
	362, 1765,
	364, 1765,
	365, 1765,
	366, 1765,
	367, 1765,
	368, 1765,
	369, 1765,
	370, 1765,
	371, 1765,
	372, 1765,
	373, 1765,
	374, 1765,
	375, 1765,
	376, 1765,
	378, 1765,
	379, 1765,
	380, 1765,
	381, 1765,
	382, 1765,
	383, 1765,
	384, 1765,
	385, 1765,
	386, 1765,
	387, 1765,
	388, 1765,
	389, 1765,
	390, 1765,
	391, 1765,
	392, 1765,
	394, 1765,
	395, 1765,
	397, 1765,
	398, 1765,
	399, 1765,
	400, 1765,
	401, 1765,
	402, 1765,
	403, 1765,
	404, 1765,
	405, 1765,
	406, 1765,
	407, 1765,
	408, 1765,
	409, 1765,
	411, 1765,
	413, 1765,
	414, 1765,
	415, 1765,
	421, 1765,
	422, 1765,
	424, 1765,
	425, 1765,
	426, 1765,
	427, 1765,
	428, 1765,
	429, 1765,
	430, 1765,
	431, 1765,
	432, 1765,
	433, 1765,
	435, 1765,
	436, 1765,
	437, 1765,
	439, 1765,
	440, 1765,
	441, 1765,
	442, 1765,
	443, 1765,
	444, 1765,
	445, 1765,
	447, 1765,
	448, 1765,
	449, 1765,
	450, 1765,
	451, 1765,
	452, 1765,
	453, 1765,
	454, 1765,
	455, 1765,
	456, 1765,
	457, 1765,
	458, 1765,
	460, 1765,
	461, 1765,
	462, 1765,
	463, 1765,
	464, 1765,
	465, 1765,
	467, 1765,
	468, 1765,
	469, 1765,
	470, 1765,
	471, 1765,
	472, 1765,
	474, 1765,
	475, 1765,
	476, 1765,
	477, 1765,
	478, 1765,
	479, 1765,
	480, 1765,
	481, 1765,
	483, 1765,
	485, 1765,
	486, 1765,
	487, 1765,
	488, 1765,
	489, 1765,
	490, 1765,
	491, 1765,
	492, 1765,
	493, 1765,
	494, 1765,
	495, 1765,
	496, 1765,
	497, 1765,
	498, 1765,
	499, 1765,
	500, 1765,
	501, 1765,
	503, 1765,
	504, 1765,
	506, 1765,
	507, 1765,
	509, 1765,
	510, 1765,
	511, 1765,
	512, 1765,
	513, 1765,
	514, 1765,
	515, 1765,
	516, 1765,
	518, 1765,
	519, 1765,
	520, 1765,
	521, 1765,
	522, 1765,
	524, 1765,
	526, 1765,
	527, 1765,
	528, 1765,
	529, 1765,
	530, 1765,
	531, 1765,
	533, 1765,
	534, 1765,
	535, 1765,
	536, 1765,
	538, 1765,
	539, 1765,
	542, 1765,
	543, 1765,
	544, 1765,
	545, 1765,
	546, 1765,
	547, 1765,
	548, 1765,
	550, 1765,
	553, 1765,
	554, 1765,
	555, 1765,
	556, 1765,
	557, 1765,
	558, 1765,
	560, 1765,
	561, 1765,
	562, 1765,
	563, 1765,
	564, 1765,
	565, 1765,
	566, 1765,
	571, 1765,
	572, 1765,
	573, 1765,
	574, 1765,
	575, 1765,
	576, 1765,
	-2, 0,
	-1, 906,
	263, 422,
	-2, 0,
	-1, 983,
	399, 902,
	465, 902,
	507, 902,
	528, 902,
	-2, 0,
	-1, 984,
	399, 901,
	465, 901,
	507, 901,
	528, 901,
	-2, 833,
	-1, 988,
	1, 954,
	606, 954,
	608, 954,
	610, 954,
	-2, 0,
	-1, 990,
	1, 876,
	606, 876,
	608, 876,
	610, 876,
	-2, 0,
	-1, 991,
	1, 880,
	606, 880,
	608, 880,
	610, 880,
	-2, 0,
	-1, 992,
	1, 1021,
	185, 1021,
	606, 1021,
	608, 1021,
	610, 1021,
	-2, 0,
	-1, 1000,
	1, 907,
	606, 907,
	608, 907,
	610, 907,
	-2, 0,
	-1, 1007,
	1, 954,
	606, 954,
	608, 954,
	610, 954,
	-2, 0,
	-1, 1008,
	1, 956,
	606, 956,
	608, 956,
	610, 956,
	-2, 0,
	-1, 1009,
	1, 959,
	606, 959,
	608, 959,
	610, 959,
	-2, 0,
	-1, 1015,
	1, 985,
	606, 985,
	608, 985,
	610, 985,
	-2, 0,
	-1, 1016,
	1, 987,
	606, 987,
	608, 987,
	610, 987,
	-2, 0,
	-1, 1021,
	1, 1015,
	606, 1015,
	608, 1015,
	610, 1015,
	-2, 0,
	-1, 1073,
	172, 1635,
	185, 1635,
	276, 1635,
	347, 1635,
	-2, 1571,
	-1, 1089,
	172, 1634,
	185, 1634,
	276, 1634,
	347, 1634,
	-2, 1568,
	-1, 1116,
	609, 2358,
	-2, 730,
	-1, 1145,
	5, 2350,
	607, 2348,
	-2, 2339,
	-1, 1153,
	5, 2371,
	607, 2368,
	-2, 2359,
	-1, 1154,
	5, 2372,
	607, 2369,
	-2, 2360,
	-1, 1162,
	609, 2356,
	-2, 2338,
	-1, 1163,
	607, 2804,
	-2, 2357,
	-1, 1186,
	607, 2803,
	-2, 2373,
	-1, 1187,
	5, 1840,
	-2, 2774,
	-1, 1188,
	5, 1841,
	-2, 2775,
	-1, 1189,
	5, 1842,
	-2, 2789,
	-1, 1190,
	5, 1843,
	-2, 2753,
	-1, 1191,
	5, 1844,
	-2, 2787,
	-1, 1192,
	5, 1852,
	-2, 2766,
	-1, 1193,
	5, 1839,
	-2, 2762,
	-1, 1194,
	5, 1839,
	-2, 2761,
	-1, 1195,
	5, 1839,
	-2, 2780,
	-1, 1196,
	5, 1850,
	-2, 2755,
	-1, 1197,
	5, 1855,
	-2, 2754,
	-1, 1198,
	5, 1857,
	-2, 2799,
	-1, 1201,
	5, 1879,
	-2, 2792,
	-1, 1202,
	5, 1871,
	-2, 2793,
	-1, 1203,
	5, 1879,
	-2, 2794,
	-1, 1204,
	5, 1875,
	-2, 2795,
	-1, 1205,
	5, 1825,
	-2, 2767,
	-1, 1206,
	5, 1826,
	-2, 2768,
	-1, 1207,
	5, 1827,
	-2, 2756,
	-1, 1235,
	5, 1862,
	-2, 2800,
	-1, 1236,
	5, 1863,
	-2, 2790,
	-1, 1237,
	5, 1864,
	561, 1864,
	-2, 2757,
	-1, 1238,
	5, 1865,
	561, 1865,
	-2, 2758,
	-1, 1275,
	607, 2368,
	-2, 2359,
	-1, 1276,
	607, 2369,
	-2, 2360,
	-1, 1374,
	190, 2719,
	523, 2719,
	589, 2719,
	609, 2719,
	-2, 0,
	-1, 1379,
	1, 706,
	610, 706,
	-2, 1480,
	-1, 1509,
	366, 2333,
	424, 2333,
	467, 2333,
	599, 2333,
	-2, 2323,
	-1, 1515,
	190, 129,
	270, 129,
	333, 129,
	566, 129,
	-2, 2715,
	-1, 1516,
	190, 130,
	270, 130,
	333, 130,
	566, 130,
	-2, 2468,
	-1, 1517,
	190, 131,
	270, 131,
	333, 131,
	566, 131,
	-2, 2639,
	-1, 1523,
	611, 2333,
	-2, 2335,
	-1, 1531,
	1, 1328,
	429, 1285,
	467, 1285,
	583, 1285,
	606, 1328,
	608, 1328,
	610, 1328,
	-2, 1620,
	-1, 1537,
	206, 1425,
	225, 1425,
	437, 1425,
	-2, 0,
	-1, 1593,
	407, 1104,
	560, 1104,
	-2, 417,
	-1, 1610,
	43, 2331,
	-2, 1067,
	-1, 1617,
	1, 1328,
	606, 1328,
	608, 1328,
	610, 1328,
	-2, 1620,
	-1, 1625,
	4, 1353,
	21, 1353,
	22, 1353,
	23, 1353,
	24, 1353,
	25, 1353,
	26, 1353,
	27, 1353,
	29, 1353,
	30, 1353,
	36, 1353,
	41, 1353,
	42, 1353,
	44, 1353,
	45, 1353,
	46, 1353,
	47, 1353,
	48, 1353,
	49, 1353,
	50, 1353,
	51, 1353,
	53, 1353,
	54, 1353,
	55, 1353,
	56, 1353,
	58, 1353,
	59, 1353,
	60, 1353,
	61, 1353,
	62, 1353,
	63, 1353,
	64, 1353,
	68, 1353,
	69, 1353,
	70, 1353,
	71, 1353,
	73, 1353,
	74, 1353,
	75, 1353,
	79, 1353,
	80, 1353,
	81, 1353,
	82, 1353,
	83, 1353,
	84, 1353,
	85, 1353,
	88, 1353,
	89, 1353,
	90, 1353,
	91, 1353,
	92, 1353,
	94, 1353,
	96, 1353,
	97, 1353,
	98, 1353,
	99, 1353,
	100, 1353,
	101, 1353,
	103, 1353,
	104, 1353,
	105, 1353,
	107, 1353,
	108, 1353,
	109, 1353,
	117, 1353,
	118, 1353,
	119, 1353,
	120, 1353,
	121, 1353,
	123, 1353,
	124, 1353,
	125, 1353,
	126, 1353,
	128, 1353,
	129, 1353,
	130, 1353,
	132, 1353,
	133, 1353,
	134, 1353,
	136, 1353,
	137, 1353,
	138, 1353,
	141, 1353,
	142, 1353,
	143, 1353,
	145, 1353,
	146, 1353,
	147, 1353,
	149, 1353,
	150, 1353,
	151, 1353,
	153, 1353,
	154, 1353,
	155, 1353,
	156, 1353,
	157, 1353,
	158, 1353,
	159, 1353,
	160, 1353,
	161, 1353,
	162, 1353,
	163, 1353,
	164, 1353,
	165, 1353,
	166, 1353,
	167, 1353,
	168, 1353,
	169, 1353,
	177, 1353,
	178, 1353,
	179, 1353,
	180, 1353,
	184, 1353,
	186, 1353,
	187, 1353,
	188, 1353,
	192, 1353,
	193, 1353,
	194, 1353,
	195, 1353,
	196, 1353,
	197, 1353,
	198, 1353,
	199, 1353,
	200, 1353,
	201, 1353,
	202, 1353,
	203, 1353,
	204, 1353,
	205, 1353,
	207, 1353,
	208, 1353,
	210, 1353,
	211, 1353,
	213, 1353,
	214, 1353,
	215, 1353,
	216, 1353,
	217, 1353,
	218, 1353,
	219, 1353,
	220, 1353,
	221, 1353,
	223, 1353,
	224, 1353,
	226, 1353,
	227, 1353,
	228, 1353,
	229, 1353,
	230, 1353,
	235, 1353,
	236, 1353,
	237, 1353,
	240, 1353,
	241, 1353,
	242, 1353,
	244, 1353,
	246, 1353,
	247, 1353,
	249, 1353,
	251, 1353,
	252, 1353,
	253, 1353,
	255, 1353,
	259, 1353,
	260, 1353,
	261, 1353,
	262, 1353,
	263, 1353,
	264, 1353,
	266, 1353,
	267, 1353,
	268, 1353,
	270, 1353,
	271, 1353,
	273, 1353,
	274, 1353,
	277, 1353,
	278, 1353,
	279, 1353,
	280, 1353,
	281, 1353,
	282, 1353,
	283, 1353,
	286, 1353,
	287, 1353,
	288, 1353,
	289, 1353,
	291, 1353,
	292, 1353,
	293, 1353,
	294, 1353,
	295, 1353,
	296, 1353,
	297, 1353,
	298, 1353,
	299, 1353,
	300, 1353,
	301, 1353,
	302, 1353,
	303, 1353,
	304, 1353,
	305, 1353,
	306, 1353,
	307, 1353,
	308, 1353,
	309, 1353,
	310, 1353,
	311, 1353,
	312, 1353,
	314, 1353,
	316, 1353,
	317, 1353,
	318, 1353,
	319, 1353,
	320, 1353,
	321, 1353,
	322, 1353,
	323, 1353,
	324, 1353,
	325, 1353,
	326, 1353,
	327, 1353,
	328, 1353,
	329, 1353,
	330, 1353,
	331, 1353,
	333, 1353,
	334, 1353,
	338, 1353,
	339, 1353,
	340, 1353,
	342, 1353,
	343, 1353,
	344, 1353,
	345, 1353,
	346, 1353,
	349, 1353,
	351, 1353,
	353, 1353,
	354, 1353,
	355, 1353,
	358, 1353,
	359, 1353,
	360, 1353,
	362, 1353,
	364, 1353,
	365, 1353,
	366, 1353,
	367, 1353,
	368, 1353,
	369, 1353,
	370, 1353,
	371, 1353,
	372, 1353,
	373, 1353,
	374, 1353,
	375, 1353,
	376, 1353,
	378, 1353,
	379, 1353,
	380, 1353,
	381, 1353,
	382, 1353,
	383, 1353,
	384, 1353,
	385, 1353,
	386, 1353,
	387, 1353,
	388, 1353,
	389, 1353,
	390, 1353,
	391, 1353,
	392, 1353,
	394, 1353,
	395, 1353,
	397, 1353,
	398, 1353,
	399, 1353,
	400, 1353,
	401, 1353,
	402, 1353,
	403, 1353,
	404, 1353,
	405, 1353,
	406, 1353,
	407, 1353,
	408, 1353,
	409, 1353,
	411, 1353,
	413, 1353,
	414, 1353,
	415, 1353,
	421, 1353,
	422, 1353,
	424, 1353,
	425, 1353,
	426, 1353,
	427, 1353,
	428, 1353,
	429, 1353,
	430, 1353,
	431, 1353,
	432, 1353,
	433, 1353,
	435, 1353,
	436, 1353,
	437, 1353,
	439, 1353,
	440, 1353,
	441, 1353,
	442, 1353,
	443, 1353,
	444, 1353,
	445, 1353,
	447, 1353,
	448, 1353,
	449, 1353,
	450, 1353,
	451, 1353,
	452, 1353,
	453, 1353,
	454, 1353,
	455, 1353,
	456, 1353,
	457, 1353,
	458, 1353,
	460, 1353,
	461, 1353,
	462, 1353,
	463, 1353,
	464, 1353,
	465, 1353,
	467, 1353,
	468, 1353,
	469, 1353,
	470, 1353,
	471, 1353,
	472, 1353,
	474, 1353,
	475, 1353,
	476, 1353,
	477, 1353,
	478, 1353,
	479, 1353,
	480, 1353,
	481, 1353,
	483, 1353,
	485, 1353,
	486, 1353,
	487, 1353,
	488, 1353,
	489, 1353,
	490, 1353,
	491, 1353,
	492, 1353,
	493, 1353,
	494, 1353,
	495, 1353,
	496, 1353,
	497, 1353,
	498, 1353,
	499, 1353,
	500, 1353,
	501, 1353,
	503, 1353,
	504, 1353,
	506, 1353,
	507, 1353,
	509, 1353,
	510, 1353,
	511, 1353,
	512, 1353,
	513, 1353,
	514, 1353,
	515, 1353,
	516, 1353,
	518, 1353,
	519, 1353,
	520, 1353,
	521, 1353,
	522, 1353,
	524, 1353,
	526, 1353,
	527, 1353,
	528, 1353,
	529, 1353,
	530, 1353,
	531, 1353,
	533, 1353,
	534, 1353,
	535, 1353,
	536, 1353,
	538, 1353,
	539, 1353,
	542, 1353,
	543, 1353,
	544, 1353,
	545, 1353,
	546, 1353,
	547, 1353,
	548, 1353,
	550, 1353,
	553, 1353,
	554, 1353,
	555, 1353,
	556, 1353,
	557, 1353,
	558, 1353,
	560, 1353,
	561, 1353,
	562, 1353,
	563, 1353,
	564, 1353,
	565, 1353,
	566, 1353,
	571, 1353,
	572, 1353,
	573, 1353,
	574, 1353,
	575, 1353,
	576, 1353,
	-2, 0,
	-1, 1648,
	1, 562,
	606, 562,
	608, 562,
	610, 562,
	-2, 1591,
	-1, 1651,
	4, 2798,
	11, 2798,
	12, 2798,
	14, 2798,
	15, 2798,
	16, 2798,
	17, 2798,
	18, 2798,
	19, 2798,
	21, 2798,
	22, 2798,
	23, 2798,
	24, 2798,
	25, 2798,
	26, 2798,
	27, 2798,
	29, 2798,
	30, 2798,
	33, 2798,
	34, 2798,
	36, 2798,
	38, 2798,
	41, 2798,
	42, 2798,
	44, 2798,
	45, 2798,
	46, 2798,
	47, 2798,
	48, 2798,
	49, 2798,
	50, 2798,
	51, 2798,
	53, 2798,
	54, 2798,
	55, 2798,
	56, 2798,
	58, 2798,
	59, 2798,
	60, 2798,
	61, 2798,
	62, 2798,
	63, 2798,
	64, 2798,
	67, 2798,
	68, 2798,
	69, 2798,
	70, 2798,
	71, 2798,
	73, 2798,
	74, 2798,
	75, 2798,
	76, 2798,
	79, 2798,
	80, 2798,
	81, 2798,
	82, 2798,
	83, 2798,
	84, 2798,
	85, 2798,
	86, 2798,
	88, 2798,
	89, 2798,
	90, 2798,
	91, 2798,
	92, 2798,
	94, 2798,
	95, 2798,
	96, 2798,
	97, 2798,
	98, 2798,
	99, 2798,
	100, 2798,
	101, 2798,
	103, 2798,
	104, 2798,
	105, 2798,
	106, 2798,
	107, 2798,
	108, 2798,
	109, 2798,
	117, 2798,
	118, 2798,
	119, 2798,
	120, 2798,
	121, 2798,
	123, 2798,
	124, 2798,
	125, 2798,
	126, 2798,
	128, 2798,
	129, 2798,
	130, 2798,
	132, 2798,
	133, 2798,
	134, 2798,
	136, 2798,
	137, 2798,
	138, 2798,
	141, 2798,
	142, 2798,
	143, 2798,
	145, 2798,
	146, 2798,
	147, 2798,
	149, 2798,
	150, 2798,
	151, 2798,
	153, 2798,
	154, 2798,
	155, 2798,
	156, 2798,
	157, 2798,
	158, 2798,
	159, 2798,
	160, 2798,
	161, 2798,
	162, 2798,
	163, 2798,
	164, 2798,
	165, 2798,
	166, 2798,
	167, 2798,
	168, 2798,
	169, 2798,
	173, 2798,
	174, 2798,
	175, 2798,
	176, 2798,
	177, 2798,
	178, 2798,
	179, 2798,
	180, 2798,
	183, 2798,
	184, 2798,
	186, 2798,
	187, 2798,
	188, 2798,
	191, 2798,
	192, 2798,
	193, 2798,
	194, 2798,
	195, 2798,
	196, 2798,
	197, 2798,
	198, 2798,
	199, 2798,
	200, 2798,
	201, 2798,
	202, 2798,
	203, 2798,
	204, 2798,
	205, 2798,
	207, 2798,
	208, 2798,
	210, 2798,
	211, 2798,
	213, 2798,
	214, 2798,
	215, 2798,
	216, 2798,
	217, 2798,
	218, 2798,
	219, 2798,
	220, 2798,
	221, 2798,
	222, 2798,
	223, 2798,
	224, 2798,
	225, 2798,
	226, 2798,
	227, 2798,
	228, 2798,
	229, 2798,
	230, 2798,
	232, 2798,
	233, 2798,
	235, 2798,
	236, 2798,
	237, 2798,
	239, 2798,
	240, 2798,
	241, 2798,
	242, 2798,
	244, 2798,
	246, 2798,
	247, 2798,
	248, 2798,
	249, 2798,
	250, 2798,
	251, 2798,
	252, 2798,
	253, 2798,
	254, 2798,
	255, 2798,
	257, 2798,
	258, 2798,
	259, 2798,
	260, 2798,
	261, 2798,
	262, 2798,
	263, 2798,
	264, 2798,
	266, 2798,
	267, 2798,
	268, 2798,
	270, 2798,
	271, 2798,
	272, 2798,
	273, 2798,
	274, 2798,
	275, 2798,
	277, 2798,
	278, 2798,
	279, 2798,
	280, 2798,
	281, 2798,
	282, 2798,
	283, 2798,
	286, 2798,
	287, 2798,
	288, 2798,
	289, 2798,
	290, 2798,
	291, 2798,
	292, 2798,
	293, 2798,
	294, 2798,
	295, 2798,
	296, 2798,
	297, 2798,
	298, 2798,
	299, 2798,
	300, 2798,
	301, 2798,
	302, 2798,
	303, 2798,
	304, 2798,
	305, 2798,
	306, 2798,
	307, 2798,
	308, 2798,
	309, 2798,
	310, 2798,
	311, 2798,
	312, 2798,
	314, 2798,
	315, 2798,
	316, 2798,
	317, 2798,
	318, 2798,
	319, 2798,
	320, 2798,
	321, 2798,
	322, 2798,
	323, 2798,
	324, 2798,
	325, 2798,
	326, 2798,
	327, 2798,
	328, 2798,
	329, 2798,
	330, 2798,
	331, 2798,
	333, 2798,
	334, 2798,
	337, 2798,
	338, 2798,
	339, 2798,
	340, 2798,
	342, 2798,
	343, 2798,
	344, 2798,
	345, 2798,
	346, 2798,
	349, 2798,
	353, 2798,
	354, 2798,
	355, 2798,
	356, 2798,
	358, 2798,
	359, 2798,
	360, 2798,
	362, 2798,
	364, 2798,
	365, 2798,
	366, 2798,
	367, 2798,
	368, 2798,
	369, 2798,
	370, 2798,
	371, 2798,
	372, 2798,
	373, 2798,
	374, 2798,
	375, 2798,
	376, 2798,
	378, 2798,
	379, 2798,
	380, 2798,
	381, 2798,
	382, 2798,
	383, 2798,
	384, 2798,
	385, 2798,
	386, 2798,
	387, 2798,
	388, 2798,
	389, 2798,
	390, 2798,
	391, 2798,
	392, 2798,
	394, 2798,
	395, 2798,
	397, 2798,
	398, 2798,
	399, 2798,
	400, 2798,
	401, 2798,
	402, 2798,
	403, 2798,
	404, 2798,
	405, 2798,
	406, 2798,
	407, 2798,
	408, 2798,
	409, 2798,
	411, 2798,
	413, 2798,
	414, 2798,
	415, 2798,
	421, 2798,
	422, 2798,
	423, 2798,
	424, 2798,
	425, 2798,
	426, 2798,
	427, 2798,
	428, 2798,
	429, 2798,
	430, 2798,
	431, 2798,
	432, 2798,
	433, 2798,
	435, 2798,
	436, 2798,
	437, 2798,
	438, 2798,
	439, 2798,
	440, 2798,
	441, 2798,
	442, 2798,
	443, 2798,
	444, 2798,
	445, 2798,
	446, 2798,
	447, 2798,
	448, 2798,
	449, 2798,
	450, 2798,
	451, 2798,
	452, 2798,
	453, 2798,
	454, 2798,
	455, 2798,
	456, 2798,
	457, 2798,
	458, 2798,
	460, 2798,
	461, 2798,
	462, 2798,
	463, 2798,
	464, 2798,
	465, 2798,
	467, 2798,
	468, 2798,
	469, 2798,
	470, 2798,
	471, 2798,
	472, 2798,
	473, 2798,
	474, 2798,
	475, 2798,
	476, 2798,
	477, 2798,
	478, 2798,
	479, 2798,
	480, 2798,
	481, 2798,
	483, 2798,
	485, 2798,
	486, 2798,
	487, 2798,
	488, 2798,
	489, 2798,
	490, 2798,
	491, 2798,
	492, 2798,
	493, 2798,
	494, 2798,
	495, 2798,
	496, 2798,
	497, 2798,
	498, 2798,
	499, 2798,
	500, 2798,
	501, 2798,
	503, 2798,
	504, 2798,
	505, 2798,
	506, 2798,
	507, 2798,
	509, 2798,
	510, 2798,
	511, 2798,
	512, 2798,
	513, 2798,
	514, 2798,
	515, 2798,
	516, 2798,
	518, 2798,
	519, 2798,
	520, 2798,
	521, 2798,
	522, 2798,
	524, 2798,
	526, 2798,
	527, 2798,
	528, 2798,
	529, 2798,
	530, 2798,
	531, 2798,
	533, 2798,
	534, 2798,
	535, 2798,
	536, 2798,
	538, 2798,
	539, 2798,
	542, 2798,
	543, 2798,
	544, 2798,
	545, 2798,
	546, 2798,
	547, 2798,
	548, 2798,
	550, 2798,
	553, 2798,
	554, 2798,
	555, 2798,
	556, 2798,
	557, 2798,
	558, 2798,
	560, 2798,
	561, 2798,
	562, 2798,
	563, 2798,
	564, 2798,
	565, 2798,
	566, 2798,
	571, 2798,
	572, 2798,
	573, 2798,
	574, 2798,
	575, 2798,
	576, 2798,
	577, 2798,
	579, 2798,
	587, 2798,
	588, 2798,
	589, 2798,
	590, 2798,
	591, 2798,
	592, 2798,
	594, 2798,
	595, 2798,
	596, 2798,
	597, 2798,
	598, 2798,
	599, 2798,
	600, 2798,
	601, 2798,
	602, 2798,
	605, 2798,
	608, 2798,
	609, 2798,
	611, 2798,
	612, 2798,
	-2, 0,
	-1, 1656,
	190, 2677,
	523, 2677,
	589, 2677,
	609, 2677,
	-2, 0,
	-1, 1709,
	399, 902,
	465, 902,
	507, 902,
	528, 902,
	-2, 0,
	-1, 1720,
	1, 1425,
	606, 1425,
	608, 1425,
	610, 1425,
	-2, 0,
	-1, 1737,
	1, 897,
	606, 897,
	608, 897,
	610, 897,
	-2, 0,
	-1, 1738,
	1, 941,
	606, 941,
	608, 941,
	610, 941,
	-2, 0,
	-1, 1739,
	1, 949,
	606, 949,
	608, 949,
	610, 949,
	-2, 0,
	-1, 1742,
	1, 906,
	606, 906,
	608, 906,
	610, 906,
	-2, 0,
	-1, 1744,
	1, 912,
	606, 912,
	608, 912,
	610, 912,
	-2, 0,
	-1, 1747,
	1, 908,
	606, 908,
	608, 908,
	610, 908,
	-2, 0,
	-1, 1752,
	1, 922,
	606, 922,
	608, 922,
	610, 922,
	-2, 0,
	-1, 1783,
	1, 2660,
	606, 2660,
	608, 2660,
	609, 2660,
	610, 2660,
	-2, 0,
	-1, 1787,
	1, 996,
	606, 996,
	608, 996,
	610, 996,
	-2, 0,
	-1, 1804,
	1, 1475,
	610, 1475,
	-2, 1480,
	-1, 1807,
	172, 1634,
	185, 1634,
	276, 1634,
	347, 1634,
	-2, 1572,
	-1, 1907,
	152, 1593,
	172, 1593,
	185, 1593,
	243, 1593,
	276, 1593,
	347, 1593,
	357, 1593,
	540, 1593,
	-2, 2044,
	-1, 1968,
	608, 2219,
	-2, 0,
	-1, 2003,
	152, 1593,
	172, 1593,
	185, 1593,
	243, 1593,
	276, 1593,
	347, 1593,
	357, 1593,
	540, 1593,
	-2, 1726,
	-1, 2043,
	523, 2674,
	609, 2674,
	612, 2674,
	-2, 0,
	-1, 2060,
	607, 1867,
	-2, 1855,
	-1, 2092,
	190, 2674,
	609, 2674,
	612, 2674,
	-2, 0,
	-1, 2135,
	1, 708,
	610, 708,
	-2, 1480,
	-1, 2281,
	225, 264,
	-2, 2367,
	-1, 2282,
	225, 265,
	-2, 317,
	-1, 2392,
	1, 899,
	606, 899,
	608, 899,
	610, 899,
	-2, 0,
	-1, 2393,
	1, 943,
	606, 943,
	608, 943,
	610, 943,
	-2, 0,
	-1, 2394,
	1, 951,
	606, 951,
	608, 951,
	610, 951,
	-2, 0,
	-1, 2395,
	1, 998,
	606, 998,
	608, 998,
	610, 998,
	-2, 0,
	-1, 2436,
	1, 924,
	606, 924,
	608, 924,
	610, 924,
	-2, 0,
	-1, 2456,
	1, 981,
	606, 981,
	608, 981,
	610, 981,
	-2, 0,
	-1, 2503,
	444, 1661,
	445, 1661,
	-2, 1900,
	-1, 2534,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 1920,
	-1, 2535,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 1921,
	-1, 2536,
	95, 0,
	257, 0,
	258, 0,
	591, 0,
	592, 0,
	-2, 1922,
	-1, 2537,
	95, 0,
	257, 0,
	258, 0,
	591, 0,
	592, 0,
	-2, 1923,
	-1, 2538,
	95, 0,
	257, 0,
	258, 0,
	591, 0,
	592, 0,
	-2, 1924,
	-1, 2539,
	95, 0,
	257, 0,
	258, 0,
	591, 0,
	592, 0,
	-2, 1925,
	-1, 2540,
	95, 0,
	257, 0,
	258, 0,
	591, 0,
	592, 0,
	-2, 1926,
	-1, 2541,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 1927,
	-1, 2553,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 1939,
	-1, 2554,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 1940,
	-1, 2555,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 1941,
	-1, 2559,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1948,
	-1, 2565,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1952,
	-1, 2567,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1960,
	-1, 2568,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1961,
	-1, 2569,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1962,
	-1, 2570,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1963,
	-1, 2744,
	5, 2371,
	190, 2230,
	607, 2368,
	-2, 2359,
	-1, 2745,
	190, 2231,
	-2, 2749,
	-1, 2746,
	190, 2232,
	-2, 2561,
	-1, 2747,
	190, 2233,
	-2, 2441,
	-1, 2748,
	190, 2234,
	-2, 2499,
	-1, 2749,
	190, 2235,
	-2, 2546,
	-1, 2750,
	190, 2236,
	-2, 2672,
	-1, 2751,
	190, 2237,
	-2, 2027,
	-1, 2822,
	1, 1727,
	2, 1727,
	106, 1727,
	152, 1727,
	172, 1727,
	185, 1727,
	191, 1727,
	209, 1727,
	212, 1727,
	239, 1727,
	243, 1727,
	254, 1727,
	272, 1727,
	276, 1727,
	315, 1727,
	347, 1727,
	351, 1727,
	357, 1727,
	434, 1727,
	438, 1727,
	540, 1727,
	551, 1727,
	568, 1727,
	569, 1727,
	570, 1727,
	580, 1727,
	606, 1727,
	608, 1727,
	610, 1727,
	612, 1727,
	-2, 1726,
	-1, 2835,
	607, 2340,
	-2, 2354,
	-1, 2837,
	1, 334,
	568, 334,
	-2, 1620,
	-1, 2867,
	607, 1866,
	-2, 1856,
	-1, 3062,
	1, 1328,
	429, 1285,
	467, 1285,
	583, 1285,
	606, 1328,
	608, 1328,
	610, 1328,
	-2, 1620,
	-1, 3238,
	352, 1664,
	-2, 2788,
	-1, 3239,
	352, 1665,
	-2, 2657,
	-1, 3243,
	444, 2296,
	445, 2296,
	-2, 2025,
	-1, 3244,
	444, 2300,
	445, 2300,
	-2, 2026,
	-1, 3245,
	444, 2297,
	445, 2297,
	-2, 2025,
	-1, 3246,
	444, 2301,
	445, 2301,
	-2, 2026,
	-1, 3259,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1950,
	-1, 3260,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1954,
	-1, 3266,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1956,
	-1, 3493,
	1, 703,
	606, 703,
	608, 703,
	610, 703,
	-2, 1480,
	-1, 3678,
	43, 2331,
	-2, 1068,
	-1, 3683,
	1, 1328,
	606, 1328,
	608, 1328,
	610, 1328,
	-2, 1620,
	-1, 3788,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1958,
	-1, 3795,
	248, 0,
	250, 0,
	337, 0,
	-2, 1977,
	-1, 3863,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 2006,
	-1, 3864,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 2007,
	-1, 3865,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 2008,
	-1, 3869,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 2012,
	-1, 3870,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 2013,
	-1, 3871,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 2014,
	-1, 3919,
	607, 2341,
	-2, 2355,
	-1, 4118,
	609, 2905,
	-2, 1546,
	-1, 4173,
	248, 0,
	250, 0,
	337, 0,
	-2, 1978,
	-1, 4176,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1981,
	-1, 4177,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1983,
	-1, 4288,
	609, 2356,
	-2, 1363,
	-1, 4446,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1982,
	-1, 4447,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1984,
	-1, 4458,
	248, 0,
	-2, 2017,
	-1, 4643,
	248, 0,
	-2, 2018,
	-1, 4861,
	50, 0,
	222, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 2752,
}

const sqlPrivate = 57344

const sqlLast = 137676

var sqlAct = [...]int{
	275, 4923, 4797, 4796, 5052, 3148, 4979, 3397, 4514, 4691,
	4847, 4683, 3001, 4907, 4873, 4993, 4734, 3135, 4860, 4753,
	3667, 3666, 2278, 1546, 4811, 4829, 4874, 4787, 4932, 4808,
	4875, 4590, 1355, 1352, 4284, 2976, 4613, 4561, 4577, 3828,
	2356, 4871, 4496, 4647, 4156, 4407, 3929, 4396, 2184, 4859,
	1268, 4363, 4337, 3517, 1347, 4519, 4402, 3780, 2513, 4467,
	3520, 1573, 4435, 4110, 4102, 3700, 4387, 2368, 4389, 4596,
	3252, 3105, 4719, 1099, 717, 829, 1345, 2366, 4030, 4285,
	2104, 4265, 2582, 2934, 1279, 1816, 4076, 2117, 3651, 3580,
	3016, 4412, 2933, 3640, 2777, 4057, 3694, 2047, 3523, 4059,
	2009, 1090, 3656, 829, 4463, 3160, 2521, 3733, 1674, 3731,
	1338, 2027, 2193, 1413, 3124, 3094, 3655, 789, 3507, 3505,
	3658, 3119, 3633, 2514, 3632, 3506, 3922, 3443, 4155, 728,
	3420, 2849, 3412, 4212, 1098, 182, 904, 4, 908, 2364,
	3121, 1506, 3450, 3155, 3380, 3150, 3136, 2265, 3069, 3401,
	2267, 1978, 3544, 4908, 2205, 2815, 826, 3889, 3403, 2662,
	4648, 269, 2518, 1954, 2221, 1915, 3379, 1885, 2595, 3236,
	3154, 3098, 2266, 2660, 785, 1612, 1145, 1259, 824, 1350,
	2817, 268, 2261, 2242, 2814, 2249, 899, 3033, 1156, 3106,
	1717, 2172, 2975, 1394, 2048, 2329, 1154, 1804, 2176, 1149,
	2115, 2651, 2579, 2162, 2502, 1979, 1324, 2485, 2850, 1672,
	2483, 2795, 1649, 762, 3129, 2316, 1615, 830, 1575, 2958,
	831, 2959, 2774, 4754, 1381, 977, 1998, 2878, 1262, 182,
	704, 1949, 3659, 2919, 726, 2654, 835, 1995, 2804, 1241,
	2740, 2706, 1276, 1899, 1988, 1817, 2632, 770, 2484, 192,
	1818, 193, 1752, 2785, 1335, 2486, 838, 2315, 2275, 925,
	1647, 781, 1640, 1737, 835, 1258, 1541, 1514, 2342, 2507,
	4924, 4980, 1130, 721, 1264, 44, 43, 41, 32, 30,
	718, 28, 730, 1239, 838, 880, 1823, 819, 3289, 745,
	1803, 1552, 998, 3903, 3283, 3904, 3399, 5063, 2106, 3930,
	2106, 2794, 881, 2106, 5055, 2106, 111, 1545, 3719, 5043,
	2106, 2106, 5042, 2794, 5012, 5010, 2794, 4953, 4518, 4518,
	4909, 2287, 4899, 4897, 4910, 4894, 2794, 2794, 4891, 4895,
	4869, 4857, 4892, 4856, 4855, 2287, 4481, 2287, 3165, 4845,
	3709, 2127, 4843, 4518, 1152, 4838, 4518, 4487, 4833, 4599,
	4832, 1743, 4518, 4806, 4518, 4773, 4766, 4518, 4765, 2858,
	2794, 4758, 2794, 4733, 4730, 2287, 4712, 2287, 4518, 900,
	4353, 4645, 4627, 4592, 4537, 2858, 4139, 3960, 2287, 4536,
	4239, 4525, 4524, 2287, 1199, 2287, 4518, 4517, 4484, 4474,
	4448, 4518, 1390, 2287, 2858, 1094, 73, 4423, 903, 902,
	1256, 3165, 4420, 4332, 4312, 4175, 3719, 2794, 2794, 2858,
	3710, 3460, 1390, 74, 1242, 1242, 1083, 4126, 1274, 4120,
	3478, 3726, 2127, 3726, 2365, 2124, 4073, 3991, 3475, 79,
	4074, 3992, 1074, 3959, 1073, 3914, 3912, 3960, 1094, 3915,
	3913, 2880, 1831, 1832, 3893, 1864, 1865, 1866, 1875, 1876,
	1877, 3896, 3812, 3808, 3725, 2794, 2287, 2794, 3726, 2787,
	1294, 1302, 3396, 94, 1868, 1862, 2794, 3391, 3719, 88,
	3390, 2794, 1834, 2854, 2794, 3341, 3339, 3350, 3351, 3342,
	3340, 1881, 1089, 3331, 3329, 3300, 3298, 3332, 2794, 2794,
	3164, 3146, 3299, 3145, 3165, 2352, 2287, 2352, 1887, 2903,
	2124, 1095, 2857, 2794, 2847, 2839, 2858, 1833, 2794, 2287,
	906, 1245, 2793, 1246, 2127, 2127, 2794, 1853, 1243, 3251,
	2351, 2794, 4774, 49, 2352, 110, 1850, 4649, 239, 4640,
	2127, 94, 107, 4628, 1554, 4599, 3165, 3893, 2786, 4400,
	3350, 3351, 4353, 3368, 3369, 3370, 2124, 4313, 4139, 1295,
	4075, 3008, 3365, 2198, 2918, 2141, 2105, 2121, 3100, 1295,
	2286, 3026, 4171, 2916, 1974, 3350, 3351, 1540, 3368, 3369,
	3370, 4009, 3783, 3756, 1996, 2254, 3711, 241, 1719, 2831,
	2830, 2829, 3350, 3351, 2828, 2827, 1271, 4170, 1247, 1244,
	1082, 95, 1081, 239, 1080, 1079, 3712, 2689, 1078, 1077,
	1076, 1831, 1832, 1072, 1856, 1857, 1858, 1859, 1071, 1070,
	1069, 1068, 1067, 1066, 1839, 3365, 1065, 3209, 1545, 1064,
	1063, 1062, 1061, 1060, 1862, 240, 1059, 1058, 1057, 1683,
	1056, 1834, 1055, 1037, 975, 974, 973, 972, 971, 233,
	3365, 970, 241, 969, 968, 967, 966, 965, 234, 3356,
	2794, 964, 963, 1872, 962, 961, 1882, 1887, 1665, 960,
	959, 958, 957, 1861, 1863, 2107, 1833, 2107, 1831, 1832,
	2107, 956, 2107, 955, 954, 953, 194, 2107, 2107, 1878,
	952, 1879, 951, 950, 949, 948, 947, 946, 1848, 1849,
	240, 2687, 945, 3288, 944, 943, 942, 941, 1834, 3350,
	3351, 940, 929, 928, 927, 923, 1870, 922, 915, 914,
	913, 898, 3356, 897, 854, 853, 852, 851, 842, 841,
	840, 1854, 839, 805, 796, 795, 794, 776, 263, 262,
	261, 3350, 3351, 1833, 3368, 3369, 3370, 3356, 260, 259,
	99, 194, 258, 257, 4414, 256, 255, 254, 253, 252,
	1917, 251, 2124, 3798, 3356, 250, 3366, 249, 239, 248,
	247, 246, 245, 1357, 1154, 244, 243, 4230, 1880, 2124,
	242, 153, 4187, 1839, 3939, 3908, 2926, 3372, 3727, 3446,
	3311, 3394, 3294, 3285, 3189, 3079, 2862, 1869, 3114, 2836,
	2821, 1154, 1154, 1154, 2475, 2170, 190, 102, 1884, 2673,
	106, 1999, 3372, 2671, 2126, 2022, 3365, 241, 239, 1416,
	2124, 1926, 1554, 1154, 1798, 2926, 1548, 1402, 1278, 3366,
	1357, 4884, 1861, 1863, 3395, 4883, 239, 4880, 1957, 1151,
	1830, 4858, 3709, 1884, 907, 1956, 4842, 4738, 4652, 153,
	1839, 1554, 1295, 4637, 3366, 1154, 2127, 1154, 2890, 1154,
	2124, 2105, 1531, 2124, 1860, 240, 1578, 241, 2121, 2478,
	1957, 3366, 1385, 1960, 1398, 1399, 1400, 1956, 4631, 233,
	4629, 3356, 2657, 4509, 4462, 241, 4421, 1855, 234, 4086,
	1854, 2786, 1357, 1295, 4399, 4245, 4210, 4209, 4203, 4202,
	4201, 1524, 4194, 4193, 4191, 1955, 1884, 4186, 4183, 4182,
	157, 1519, 1578, 3356, 1873, 240, 194, 2332, 4072, 1578,
	3943, 1918, 3367, 1916, 1617, 195, 1745, 3942, 1154, 233,
	1154, 1884, 1511, 240, 3941, 1578, 3350, 3351, 234, 3368,
	3369, 3370, 3918, 1154, 1544, 1154, 1886, 233, 1884, 3884,
	3883, 3882, 3350, 3351, 3804, 3799, 234, 3997, 3797, 3441,
	191, 3387, 3378, 3349, 3346, 4416, 194, 1884, 1377, 3345,
	1621, 1624, 3343, 1329, 1332, 2658, 3338, 3337, 3372, 1342,
	3336, 3333, 3330, 3310, 901, 3367, 3293, 1919, 3366, 3286,
	3284, 3147, 1379, 1578, 1924, 1409, 2924, 1503, 1508, 2822,
	2644, 3132, 1830, 1255, 835, 1917, 2294, 1627, 1529, 1566,
	3367, 3365, 2292, 1154, 1831, 1832, 1154, 1829, 1871, 5058,
	3366, 5001, 1553, 5000, 838, 4922, 4920, 3367, 1845, 1846,
	1852, 1874, 1851, 1847, 1280, 1844, 1842, 1843, 1835, 1836,
	1837, 1838, 1840, 1841, 1834, 3830, 1855, 182, 182, 4197,
	3116, 4798, 1371, 4196, 4087, 4717, 2659, 4703, 2656, 4699,
	1543, 3350, 3351, 1542, 4698, 1884, 4697, 4677, 4676, 1610,
	3361, 3359, 3360, 3352, 3353, 3354, 3355, 3357, 3358, 1833,
	3467, 1270, 4674, 4654, 4007, 1688, 4651, 4650, 4625, 2585,
	4611, 4608, 4607, 4600, 4588, 4587, 239, 1884, 4533, 1652,
	1654, 4504, 4460, 4443, 4442, 1886, 3392, 4383, 3356, 4379,
	2923, 2428, 4376, 4354, 4229, 1154, 1154, 1154, 1154, 1154,
	1154, 1154, 1154, 4208, 3356, 239, 3362, 3363, 3364, 1385,
	1650, 4140, 1385, 3361, 3359, 3360, 3352, 3353, 3354, 3355,
	3357, 3358, 3995, 3994, 3367, 241, 1646, 4087, 1154, 2923,
	3975, 3362, 3363, 3364, 1154, 3974, 3972, 2923, 3361, 3359,
	3360, 3352, 3353, 3354, 3355, 3357, 3358, 3899, 2591, 3887,
	3794, 1687, 1643, 3372, 241, 1904, 3367, 3360, 3352, 3353,
	3354, 3355, 3357, 3358, 3728, 1808, 1839, 3720, 2860, 3686,
	1560, 3350, 3351, 240, 1844, 1842, 1843, 1835, 1836, 1837,
	1838, 1840, 1841, 3599, 3555, 1554, 3522, 233, 1761, 1128,
	3469, 3315, 4653, 2688, 1693, 3366, 234, 2661, 1095, 3314,
	1664, 4415, 240, 3309, 3275, 1565, 1802, 4386, 3438, 3093,
	2951, 3366, 1963, 3356, 1962, 1682, 233, 3350, 3351, 1961,
	3368, 3369, 3370, 1958, 194, 234, 1906, 1950, 1948, 2869,
	2868, 2833, 2826, 2792, 2669, 1903, 3115, 2021, 1977, 1154,
	1154, 1154, 1972, 1971, 1970, 1154, 1837, 1838, 1840, 1841,
	1969, 1968, 1276, 194, 1276, 1967, 1966, 1965, 1964, 1945,
	1944, 1943, 1942, 1941, 1940, 1939, 1938, 1710, 1937, 1416,
	1936, 1935, 1884, 3359, 3360, 3352, 3353, 3354, 3355, 3357,
	3358, 1154, 1746, 1934, 829, 1357, 4241, 2686, 1884, 1933,
	2065, 829, 3365, 1357, 2025, 1357, 1932, 3362, 3363, 3364,
	1809, 1931, 1930, 1919, 3361, 3359, 3360, 3352, 3353, 3354,
	3355, 3357, 3358, 239, 2655, 1905, 1902, 1976, 2044, 1897,
	1370, 1299, 1290, 4179, 3938, 1805, 2094, 3911, 2096, 1813,
	3902, 3297, 2824, 4482, 4243, 3937, 1812, 2033, 1074, 1985,
	1073, 1918, 3465, 3356, 4315, 1900, 2871, 3715, 3350, 3351,
	1884, 3367, 1807, 2161, 2017, 1357, 2161, 1959, 2161, 1397,
	3002, 1154, 241, 2032, 1641, 3558, 1395, 3367, 4992, 1826,
	1827, 4700, 4601, 4419, 4357, 2038, 4876, 4356, 4355, 1645,
	4597, 4314, 2026, 4232, 4146, 1154, 1559, 4145, 2129, 3356,
	182, 1982, 1983, 1416, 4144, 2672, 4143, 1831, 1832, 2670,
	2111, 4142, 2187, 2113, 4141, 3961, 3906, 3905, 2980, 2118,
	240, 1242, 2006, 2120, 3730, 3729, 1951, 1952, 2123, 2159,
	4872, 4949, 3722, 3721, 233, 1396, 4947, 1834, 1274, 1390,
	1274, 1272, 1669, 234, 1095, 2232, 1390, 4632, 1940, 4630,
	2039, 1957, 1385, 4090, 1940, 835, 239, 2088, 1956, 2657,
	3366, 2031, 835, 1390, 3372, 2133, 1999, 3781, 2168, 239,
	1800, 3131, 1833, 1709, 4021, 838, 2333, 3335, 4508, 3334,
	3257, 1363, 838, 3031, 2030, 2962, 2132, 1393, 2059, 2147,
	3990, 2007, 2004, 3669, 3524, 3668, 1928, 1997, 4670, 2357,
	1053, 4669, 3362, 3363, 3364, 241, 3366, 4591, 4905, 3361,
	3359, 3360, 3352, 3353, 3354, 3355, 3357, 3358, 241, 3589,
	4670, 1718, 2251, 4397, 1975, 3361, 3359, 3360, 3352, 3353,
	3354, 3355, 3357, 3358, 3641, 2109, 2001, 1884, 1762, 1578,
	1578, 2016, 2015, 2014, 2012, 2011, 1054, 2010, 2268, 1416,
	2153, 2152, 2658, 240, 2161, 2163, 4080, 3161, 239, 1719,
	2269, 3303, 4094, 4464, 2384, 4069, 240, 233, 4027, 2045,
	1095, 4018, 2135, 4000, 3753, 3491, 234, 2362, 2300, 1097,
	233, 3399, 3832, 1884, 2652, 4528, 1925, 2867, 1973, 234,
	1835, 1836, 1837, 1838, 1840, 1841, 1953, 4500, 1254, 2231,
	3023, 3649, 2960, 4881, 194, 2326, 1271, 241, 1271, 1620,
	1536, 1366, 1328, 4896, 4893, 3705, 3367, 194, 239, 3004,
	3966, 2131, 3020, 3018, 2228, 1697, 2236, 2238, 4692, 4403,
	4805, 3527, 2246, 2659, 3985, 2656, 3128, 239, 3624, 3354,
	3355, 3357, 3358, 893, 4040, 4950, 4531, 2279, 2284, 4527,
	4506, 4557, 3775, 3495, 1578, 240, 1578, 4951, 1578, 3350,
	3351, 4301, 3367, 2164, 1595, 2241, 2154, 241, 3466, 233,
	4882, 1759, 2456, 2156, 2453, 1587, 1578, 1578, 234, 2192,
	4984, 1033, 2241, 1051, 2062, 2904, 241, 5054, 4707, 1578,
	2241, 4550, 4539, 4250, 4346, 1049, 2204, 4345, 4038, 4037,
	3497, 1578, 835, 1578, 1578, 1578, 194, 2271, 2272, 1397,
	2936, 2148, 4039, 4029, 2273, 240, 1047, 2493, 2442, 1045,
	4015, 4929, 838, 1538, 1646, 2922, 1760, 829, 2454, 233,
	2440, 1042, 4014, 4012, 240, 2226, 2239, 4011, 234, 3125,
	2920, 3999, 2383, 3958, 2922, 3957, 2861, 3630, 233, 1154,
	894, 1596, 3629, 3591, 3459, 2455, 2322, 234, 1543, 2920,
	1397, 1542, 2136, 3308, 3307, 2327, 194, 3352, 3353, 3354,
	3355, 3357, 3358, 1758, 3306, 1396, 1391, 2491, 2339, 2702,
	3188, 2237, 2225, 2222, 1154, 194, 3305, 2245, 3557, 3261,
	2158, 3969, 4299, 1380, 2661, 3029, 3028, 3025, 3014, 2360,
	4296, 3006, 2376, 3362, 3363, 3364, 2996, 2285, 1695, 4529,
	3361, 3359, 3360, 3352, 3353, 3354, 3355, 3357, 3358, 2995,
	1154, 4501, 1154, 2347, 2388, 2990, 1396, 2939, 2157, 1154,
	2989, 3356, 2065, 2065, 1416, 2988, 1154, 1154, 1154, 1154,
	1154, 1154, 1154, 1154, 1154, 1154, 1154, 1154, 1154, 1154,
	1154, 1154, 1154, 1154, 1154, 1154, 1154, 1154, 1154, 1154,
	1154, 1154, 1154, 1154, 1154, 1154, 1154, 1154, 1154, 1154,
	1154, 1154, 1650, 1154, 1650, 1154, 1154, 1154, 1154, 2307,
	2336, 2349, 2477, 2413, 2308, 1093, 2370, 3587, 835, 4985,
	2967, 1391, 2966, 2269, 3524, 2701, 1387, 2341, 2240, 239,
	1643, 1154, 2344, 2495, 2344, 1154, 1154, 2345, 838, 2357,
	2927, 2655, 2848, 1154, 2353, 2240, 2354, 1154, 1371, 1154,
	1154, 2198, 1391, 2240, 3071, 2984, 2493, 1416, 2482, 2492,
	4930, 2566, 1806, 1154, 1154, 1154, 1154, 2523, 239, 1154,
	1154, 1154, 1154, 1154, 1154, 1154, 1154, 2375, 241, 3358,
	2875, 4316, 2977, 2978, 2852, 2977, 2978, 2977, 2978, 4441,
	1095, 768, 1095, 1591, 1690, 1154, 1154, 1154, 1154, 1154,
	1154, 1154, 1154, 1154, 2392, 1711, 1092, 1645, 1154, 2403,
	1392, 2306, 4257, 1633, 2652, 1632, 2491, 241, 1039, 4566,
	1276, 2964, 2465, 2196, 4987, 1314, 240, 1416, 1841, 2633,
	2634, 1539, 1631, 2490, 1630, 3754, 1276, 2436, 4295, 1147,
	233, 1387, 2473, 2633, 2649, 1884, 2380, 1741, 2911, 234,
	2059, 2059, 1154, 1416, 4297, 2506, 2519, 2520, 1796, 1604,
	2581, 2938, 4685, 2234, 2581, 240, 239, 1757, 2838, 1388,
	2697, 3168, 1387, 1609, 1799, 3204, 4256, 194, 1389, 233,
	3588, 1771, 2950, 2468, 2479, 896, 895, 2481, 234, 2743,
	2743, 2757, 2494, 2633, 2480, 2487, 2778, 2780, 1741, 4950,
	2489, 2597, 2784, 1074, 2400, 2510, 1074, 1074, 2511, 2512,
	1775, 3022, 1691, 2393, 2648, 241, 194, 2809, 2446, 1719,
	1094, 1270, 2589, 1270, 4988, 1392, 2851, 3350, 3351, 2587,
	3368, 3369, 3370, 2434, 3234, 768, 1719, 2206, 1707, 3494,
	2699, 2563, 2661, 3021, 3763, 2700, 2834, 3249, 2703, 5016,
	2704, 2705, 4986, 2949, 2346, 1740, 1392, 1811, 1357, 1357,
	2210, 1369, 3762, 240, 1738, 3019, 3017, 4660, 2492, 3206,
	2397, 2198, 2593, 2165, 2166, 2874, 2394, 233, 2801, 4293,
	1616, 2391, 3821, 803, 1388, 1242, 234, 4687, 3982, 938,
	2898, 4344, 2899, 1389, 2006, 2646, 1274, 2467, 2877, 4013,
	3996, 1416, 3365, 4010, 1696, 3215, 1740, 1987, 3946, 2937,
	2896, 182, 1274, 2855, 194, 1388, 3933, 2207, 2401, 2921,
	2885, 767, 2823, 3636, 1389, 3628, 2889, 1739, 2893, 3585,
	2800, 3024, 4878, 1614, 4990, 2739, 2752, 2065, 1043, 1095,
	2900, 2863, 2490, 2196, 2782, 2769, 2062, 2062, 1385, 1095,
	1043, 2873, 2808, 1095, 2813, 1390, 2987, 2819, 2820, 2965,
	2892, 2806, 2807, 4440, 2004, 2802, 2790, 2791, 4298, 4567,
	1754, 1043, 2441, 1959, 1044, 3352, 3353, 3354, 3355, 3357,
	3358, 4565, 3248, 2197, 2439, 1416, 1043, 4563, 2223, 716,
	2291, 2290, 1991, 4962, 843, 2963, 2464, 801, 2474, 3356,
	3818, 1357, 4971, 1091, 3241, 3242, 5018, 3980, 4970, 2846,
	2928, 4049, 2194, 2561, 4937, 711, 2564, 4996, 3757, 3218,
	850, 3574, 1154, 1154, 4161, 1154, 4160, 2211, 3566, 2870,
	891, 769, 890, 3062, 2895, 4562, 1951, 1952, 3637, 3702,
	1994, 3272, 1095, 2661, 3634, 2884, 2190, 3703, 2812, 2887,
	829, 2888, 1357, 2879, 2198, 1989, 2902, 2901, 2925, 1772,
	4770, 2894, 4564, 2229, 1271, 767, 2560, 3212, 3097, 4050,
	1390, 3015, 3270, 1992, 3000, 2106, 2195, 1593, 2577, 3575,
	1271, 3819, 1590, 1578, 3104, 4782, 3567, 4291, 2985, 2969,
	4849, 4491, 4850, 2212, 2213, 2905, 1578, 2954, 1578, 2255,
	3003, 1390, 2992, 4294, 2262, 2191, 3366, 2224, 2252, 2575,
	4879, 2968, 4048, 2991, 1313, 1578, 1990, 3511, 2208, 2264,
	4693, 4714, 3573, 3159, 2986, 2059, 1616, 3066, 2907, 3565,
	3702, 2970, 2994, 4989, 2979, 2981, 2982, 2983, 3158, 1357,
	2931, 1357, 2941, 2944, 3112, 3169, 3170, 3496, 1769, 3074,
	2909, 2252, 3414, 3539, 3076, 3217, 3176, 3177, 3178, 4686,
	2017, 3030, 3602, 1154, 2209, 273, 3063, 3064, 3545, 3139,
	766, 2466, 3190, 930, 3191, 769, 2235, 2263, 835, 4373,
	2218, 2993, 3156, 1884, 1720, 3067, 3214, 2910, 2998, 3005,
	1537, 1272, 2399, 1272, 2922, 3012, 3192, 1297, 838, 931,
	1692, 4936, 1773, 2197, 3162, 2248, 3102, 1946, 2908, 2942,
	3538, 835, 2201, 3463, 3267, 4877, 182, 802, 2256, 3186,
	3072, 2233, 3263, 3547, 1040, 2177, 2580, 3153, 3065, 1154,
	2178, 838, 2247, 4437, 1543, 1154, 1154, 3077, 2219, 1993,
	3166, 3185, 2661, 3268, 844, 845, 3171, 3273, 3172, 4292,
	4768, 2571, 3108, 2283, 3091, 3621, 3195, 2837, 3197, 3141,
	3199, 2252, 3367, 3101, 2562, 4280, 2243, 804, 3143, 1770,
	2202, 800, 4994, 2435, 2572, 3635, 4157, 939, 2588, 4915,
	2573, 2217, 2188, 3220, 2578, 3222, 4453, 2214, 3546, 4916,
	3134, 1154, 1154, 3216, 4769, 3144, 2195, 1154, 1774, 4273,
	4960, 1650, 4816, 4266, 4326, 1706, 1708, 3163, 1991, 3223,
	1154, 1154, 3225, 2200, 5014, 735, 1154, 1154, 3142, 3183,
	4264, 2062, 1154, 3123, 1810, 2244, 1896, 3512, 1368, 4268,
	2220, 3981, 1694, 3313, 1025, 3194, 4062, 3196, 2396, 3198,
	2233, 3200, 3201, 2805, 2179, 2643, 4060, 5019, 3072, 2390,
	4062, 3193, 3413, 2818, 4274, 1094, 1994, 2235, 1087, 3834,
	4060, 1116, 2183, 2215, 3210, 5003, 712, 1154, 1154, 1154,
	4390, 2803, 4479, 1154, 4436, 4385, 4151, 3264, 4349, 2999,
	3934, 1303, 1301, 1154, 4995, 4162, 3229, 4728, 2230, 1992,
	4391, 847, 846, 2232, 1284, 1112, 3777, 3296, 4267, 3232,
	1154, 4374, 3240, 3362, 3363, 3364, 4935, 4735, 4821, 1286,
	3361, 3359, 3360, 3352, 3353, 3354, 3355, 3357, 3358, 3231,
	4997, 3230, 1725, 932, 933, 1987, 4158, 4752, 4610, 4064,
	4348, 2227, 2506, 3235, 3269, 4347, 1281, 2180, 2185, 4108,
	4720, 2259, 2107, 4064, 3271, 3690, 3250, 3477, 713, 2845,
	1026, 2314, 2759, 4721, 1984, 1300, 848, 849, 1293, 703,
	4063, 4085, 3291, 3292, 2234, 3873, 3287, 3295, 1821, 2509,
	1820, 2574, 4206, 1820, 4063, 2199, 2149, 5024, 3451, 4526,
	4619, 2576, 1287, 1815, 3518, 2146, 4667, 4722, 4109, 4033,
	4016, 3967, 1154, 1154, 1154, 1154, 3262, 3965, 714, 2257,
	715, 3691, 1154, 1154, 1154, 3924, 3817, 1154, 1288, 2943,
	1991, 3682, 3514, 3113, 3107, 4438, 3095, 1154, 1276, 1416,
	2181, 2340, 2334, 1154, 2328, 1154, 2320, 2299, 3406, 3407,
	2298, 4736, 1584, 2499, 1276, 916, 1305, 775, 4914, 3888,
	4788, 3778, 2258, 2926, 4755, 4111, 1820, 2231, 2447, 1270,
	1285, 2796, 1416, 4724, 4058, 1993, 2142, 4408, 1994, 3925,
	2144, 921, 4269, 3092, 1276, 1270, 1316, 1416, 4270, 4163,
	4583, 2188, 4604, 1989, 1819, 3954, 4723, 1819, 4275, 1357,
	4581, 4503, 3302, 3530, 3526, 2799, 3926, 3525, 3923, 2065,
	3255, 1992, 2381, 1416, 4725, 3233, 3901, 1031, 1030, 3411,
	3410, 3389, 2373, 1357, 2363, 2145, 2296, 4068, 4388, 1748,
	1747, 1357, 3458, 1742, 3444, 3928, 1025, 3408, 2971, 2844,
	4272, 2843, 1095, 934, 935, 3500, 2798, 2842, 2841, 2840,
	2186, 2797, 3431, 1154, 1990, 4061, 3473, 4276, 3099, 1625,
	1087, 3418, 1639, 3479, 1027, 1821, 1637, 1154, 1821, 4061,
	1819, 2187, 1626, 1092, 4164, 4515, 937, 3440, 1357, 4680,
	4364, 3874, 2947, 4081, 2065, 3973, 3445, 2338, 3501, 3644,
	1896, 3875, 2500, 3962, 4585, 4957, 4489, 3603, 4207, 4488,
	3070, 1154, 3476, 3461, 3167, 3075, 3073, 2187, 2367, 2268,
	3513, 5023, 3416, 1700, 1274, 3481, 4794, 1357, 3483, 3484,
	4681, 4511, 4498, 3487, 4510, 3488, 3492, 3489, 3485, 4802,
	1274, 3437, 1385, 4213, 3453, 3454, 3455, 3456, 3449, 1357,
	3498, 1357, 3400, 3417, 3384, 3385, 3386, 3430, 3429, 3563,
	4785, 4737, 1026, 3529, 3432, 3433, 3534, 1154, 1154, 3536,
	1274, 2251, 3502, 3503, 3415, 1416, 3590, 4584, 2251, 4499,
	3890, 3577, 2668, 3579, 4236, 2182, 1357, 1993, 3470, 3471,
	1357, 3472, 4516, 3515, 3528, 4480, 3510, 3532, 4271, 1028,
	1282, 1726, 4603, 4823, 1792, 3955, 2460, 2059, 4961, 3435,
	1794, 3436, 3560, 3464, 1791, 917, 918, 4795, 3613, 1789,
	1578, 4682, 3619, 3927, 2972, 2973, 1029, 4959, 4898, 1766,
	3542, 4710, 1764, 1357, 1578, 4701, 1578, 3562, 4281, 4282,
	1416, 1736, 3583, 1734, 3452, 1732, 4486, 829, 1578, 1730,
	4459, 4247, 3486, 3482, 1283, 4205, 4067, 774, 1728, 3576,
	1578, 3381, 3493, 1722, 1716, 3600, 3638, 3586, 3963, 1714,
	1635, 3605, 1357, 3607, 4569, 3793, 3611, 3499, 4726, 1032,
	3617, 3751, 2059, 3750, 4727, 3592, 3474, 1414, 3521, 1276,
	3344, 3578, 1271, 3274, 3096, 3698, 3612, 3013, 3696, 3674,
	3618, 3007, 2961, 2872, 3683, 2469, 3548, 2358, 1271, 1031,
	1030, 2031, 2024, 2020, 1578, 1638, 3556, 1795, 1676, 1636,
	3604, 3382, 3773, 3564, 3772, 1815, 1578, 2438, 1578, 936,
	3208, 3207, 3625, 3570, 3569, 3572, 3174, 3571, 1271, 2488,
	1753, 2408, 3639, 2319, 3642, 2297, 3654, 2095, 3718, 1272,
	2093, 1929, 1689, 3681, 3595, 3689, 1027, 1608, 3422, 3601,
	3707, 2667, 2405, 4870, 2277, 1272, 2994, 4327, 4020, 3614,
	3626, 4019, 4331, 4311, 4784, 1416, 3755, 4406, 1416, 4336,
	3620, 4324, 4933, 4262, 3156, 3695, 1116, 1116, 1116, 2462,
	4261, 4107, 4098, 3156, 2461, 3627, 3765, 3697, 1793, 4236,
	4036, 1041, 1790, 2062, 1500, 3692, 3631, 1788, 835, 4017,
	3988, 3814, 1154, 3986, 3964, 919, 920, 1765, 1154, 1154,
	1763, 2969, 1154, 1154, 1154, 3646, 1154, 3685, 838, 1735,
	3680, 1733, 3748, 1731, 3677, 1154, 2065, 1729, 3699, 3679,
	182, 182, 3670, 3678, 1154, 3126, 1727, 3118, 3111, 1154,
	3103, 1721, 1715, 3088, 3423, 1416, 3087, 1713, 1634, 3068,
	2891, 2886, 3704, 3746, 1154, 1274, 3771, 2295, 2293, 2053,
	2270, 3713, 1416, 2253, 3706, 2216, 2203, 2189, 2062, 2128,
	4401, 1028, 2065, 2065, 1154, 1154, 3768, 1154, 1154, 1154,
	2125, 3770, 3716, 3717, 2122, 3774, 2119, 2114, 2112, 2108,
	2099, 4928, 2037, 4854, 1824, 1154, 3421, 3428, 1029, 1154,
	2437, 2065, 2065, 1154, 1154, 1154, 1154, 1154, 1154, 1154,
	1154, 1154, 1154, 1154, 1154, 1154, 1154, 1154, 1154, 1154,
	1154, 1154, 1154, 3796, 1154, 3779, 3846, 3749, 3847, 1571,
	3427, 1251, 1154, 1154, 2065, 2404, 3759, 2276, 3760, 1154,
	3761, 3253, 3806, 3807, 4951, 2150, 4390, 2138, 2139, 4679,
	1154, 1032, 1046, 1048, 1050, 3776, 3226, 1252, 2472, 3615,
	3224, 1276, 1276, 3061, 2262, 1154, 4391, 4835, 4746, 4422,
	4343, 4251, 3157, 2169, 1589, 2922, 2922, 4621, 2948, 4614,
	4119, 2198, 1658, 1786, 1787, 2395, 2337, 1336, 1095, 2177,
	2920, 2945, 1337, 2432, 2178, 2427, 4834, 1416, 1673, 2402,
	4302, 4338, 3801, 3803, 2470, 1825, 3920, 1712, 4639, 2952,
	1357, 1357, 4513, 4214, 2059, 3813, 1831, 1832, 4192, 3824,
	3543, 1831, 1832, 1271, 3829, 1357, 1357, 2953, 829, 1357,
	3820, 3822, 3823, 3885, 3836, 2974, 1828, 3254, 3424, 3425,
	3426, 2953, 3843, 3931, 3932, 4945, 1834, 3844, 1154, 1364,
	2471, 3845, 1304, 4032, 264, 4095, 1701, 4906, 3944, 3945,
	2059, 2059, 3951, 3851, 3849, 3907, 2519, 3837, 1253, 3086,
	2137, 1337, 1337, 1154, 3877, 4031, 2321, 182, 3616, 3886,
	1375, 1833, 3020, 3018, 3027, 3011, 1833, 2957, 3009, 2059,
	2059, 3892, 2955, 4793, 4775, 2519, 3852, 3878, 3010, 4745,
	2956, 700, 4739, 4678, 4605, 1103, 1154, 1154, 2179, 4576,
	4490, 4105, 4097, 3952, 3894, 3895, 4084, 3953, 3917, 3897,
	3898, 3684, 2059, 3133, 2783, 2134, 2183, 2046, 3881, 4991,
	4825, 4512, 2997, 3743, 1535, 4826, 1534, 1274, 1274, 1088,
	1162, 3909, 1154, 1154, 3462, 5022, 3741, 2023, 3350, 3351,
	1154, 1831, 1832, 4825, 3968, 4964, 3734, 1545, 4826, 2914,
	2915, 2912, 2913, 3987, 4741, 3989, 4184, 1270, 1699, 2663,
	3936, 3910, 1578, 2914, 1698, 1578, 2912, 2698, 1768, 3940,
	1357, 1767, 4104, 1270, 3947, 4606, 271, 271, 271, 835,
	706, 707, 4551, 722, 706, 722, 733, 4340, 4335, 773,
	4001, 2180, 2185, 793, 4334, 2065, 4180, 3935, 799, 838,
	2062, 3825, 4046, 1270, 3609, 271, 3606, 1923, 1922, 3228,
	2476, 5007, 4006, 4008, 4972, 4005, 4840, 4779, 4778, 4777,
	4022, 4709, 4034, 4708, 4656, 4579, 912, 4543, 4035, 3745,
	4483, 4054, 4477, 271, 4028, 4381, 3993, 1578, 4361, 4300,
	4242, 4135, 4125, 1154, 3998, 3736, 2062, 2062, 4112, 4051,
	4052, 1276, 1154, 4077, 1500, 4071, 4121, 3984, 3976, 3688,
	3735, 2171, 1578, 1578, 1578, 3687, 4128, 2969, 3535, 1578,
	1578, 1578, 3480, 3213, 2181, 2062, 2062, 4066, 3205, 3182,
	4045, 3181, 3180, 3179, 3117, 3090, 3089, 2946, 2882, 4091,
	2876, 1578, 2865, 2864, 2853, 1271, 1271, 1416, 4113, 2592,
	2463, 2433, 2426, 2425, 2424, 4132, 2423, 4116, 2062, 2422,
	2335, 2309, 2305, 2304, 4092, 2303, 3744, 2302, 2301, 4056,
	2102, 3551, 4065, 4079, 1416, 2188, 4055, 1154, 1154, 2101,
	2100, 2098, 4044, 1154, 1154, 2065, 4136, 2036, 1154, 1154,
	4115, 1154, 3139, 1909, 2035, 4083, 1154, 1914, 1785, 1784,
	1723, 1603, 1602, 1601, 3732, 1600, 1599, 1154, 1598, 3156,
	1597, 1592, 4096, 1588, 706, 706, 4047, 1586, 1585, 1528,
	1116, 4099, 271, 1154, 1527, 1526, 1407, 1406, 1500, 3549,
	1405, 2053, 2053, 2059, 2186, 4070, 1404, 1403, 4114, 3521,
	1367, 1323, 4147, 4165, 4117, 1322, 4122, 1321, 1320, 4149,
	4123, 1319, 1318, 1317, 4133, 4127, 1315, 2288, 1310, 1309,
	4134, 1308, 1307, 1085, 4166, 1025, 1306, 905, 8, 1234,
	2140, 4101, 3550, 1052, 1038, 4684, 4279, 1274, 4278, 4148,
	4277, 2459, 4174, 93, 1276, 4178, 1594, 867, 87, 1087,
	4159, 2260, 1276, 3983, 1004, 4822, 1416, 1416, 4713, 1416,
	1569, 875, 4804, 4093, 3537, 3032, 1276, 2407, 1724, 2409,
	3439, 2825, 4767, 4219, 4188, 3312, 4646, 1578, 1578, 4452,
	2666, 1927, 3393, 89, 1138, 3742, 3737, 3738, 3739, 3740,
	1416, 1184, 4372, 4371, 4263, 1086, 3970, 3657, 4368, 4367,
	2050, 2052, 1102, 1419, 4848, 4154, 2151, 5013, 1270, 1144,
	2167, 2160, 1154, 2866, 2742, 1161, 3444, 1158, 2054, 2182,
	2056, 1160, 1159, 1276, 2055, 1276, 1947, 1157, 4237, 4238,
	2049, 4103, 3137, 2059, 1500, 3714, 1644, 1272, 4240, 1642,
	1006, 1026, 2155, 2586, 4204, 2650, 4222, 4224, 3301, 4290,
	1357, 4246, 1920, 1272, 4249, 1118, 1140, 2647, 1298, 4289,
	1416, 1129, 1357, 1117, 4227, 1357, 3419, 3398, 4306, 4307,
	3701, 3916, 182, 4286, 4211, 4286, 2498, 1154, 4216, 4217,
	1416, 4218, 4310, 1272, 4221, 4255, 885, 3347, 2653, 2062,
	1289, 2766, 2758, 4228, 4319, 2754, 3490, 4322, 4231, 4304,
	4252, 4253, 4215, 4258, 3127, 1271, 1801, 4466, 1898, 3138,
	4220, 1797, 1401, 1122, 2584, 1911, 3279, 4260, 1578, 1578,
	1274, 4235, 2508, 3708, 3442, 2859, 4828, 3833, 1274, 4303,
	4248, 3211, 2313, 1250, 1249, 1296, 4254, 1248, 4810, 4807,
	2250, 4375, 1274, 3652, 3653, 2143, 1357, 2906, 2596, 3671,
	1134, 1522, 2451, 3766, 3404, 4082, 1605, 4325, 1416, 4309,
	798, 4305, 4520, 1578, 1146, 1883, 4342, 3057, 3056, 4673,
	4333, 1386, 4318, 1384, 4409, 4321, 1383, 1382, 4392, 4339,
	4981, 4341, 3979, 3978, 3977, 4359, 238, 3247, 1031, 1030,
	1822, 1814, 1578, 1578, 1578, 1578, 1578, 1578, 235, 1274,
	4352, 1274, 2522, 237, 236, 4362, 3541, 4323, 1416, 4358,
	3921, 3448, 4904, 4003, 3643, 23, 22, 4365, 4393, 21,
	1154, 1154, 1154, 116, 4410, 42, 20, 4360, 4351, 2062,
	4350, 2355, 155, 133, 152, 1027, 4398, 151, 1416, 125,
	150, 149, 4370, 1154, 148, 4366, 1154, 1154, 4404, 2369,
	2371, 4413, 4377, 147, 4384, 154, 1154, 4382, 4320, 2065,
	146, 145, 2374, 140, 1154, 1154, 2053, 144, 143, 142,
	141, 139, 4378, 4418, 2382, 137, 2385, 2386, 2387, 4411,
	138, 1416, 132, 1578, 136, 135, 134, 4444, 1271, 131,
	1270, 1270, 130, 129, 128, 2664, 1271, 4424, 1357, 127,
	4425, 4427, 126, 4280, 4432, 4431, 124, 156, 123, 122,
	1271, 121, 120, 119, 118, 117, 786, 1416, 787, 1500,
	61, 4439, 60, 115, 113, 1154, 114, 19, 40, 14,
	65, 4485, 66, 4449, 18, 13, 35, 4273, 1154, 4433,
	92, 105, 104, 103, 4395, 36, 101, 1154, 100, 1291,
	34, 17, 2065, 16, 15, 98, 4461, 97, 96, 33,
	1028, 31, 1154, 11, 9, 1154, 4455, 1271, 37, 1271,
	2008, 4472, 4473, 4493, 4475, 4494, 4476, 12, 1272, 1154,
	5, 187, 1154, 1312, 186, 1084, 189, 1029, 185, 1416,
	188, 2835, 4274, 91, 4523, 271, 1357, 271, 271, 184,
	1341, 271, 1351, 183, 90, 29, 1578, 1578, 1578, 10,
	179, 4595, 1500, 1365, 4492, 4089, 2187, 82, 181, 180,
	4502, 793, 178, 4495, 793, 177, 176, 1276, 4559, 83,
	80, 175, 86, 174, 4534, 4535, 4568, 81, 4542, 85,
	1032, 84, 27, 6, 39, 4556, 64, 2059, 271, 7,
	271, 271, 1341, 4589, 271, 271, 4594, 1416, 4434, 1351,
	1578, 4586, 4578, 3752, 4545, 108, 4582, 109, 4552, 38,
	4554, 4615, 4555, 271, 78, 1547, 77, 4286, 76, 75,
	4544, 4540, 1500, 26, 63, 25, 173, 4546, 219, 4620,
	218, 1567, 217, 1154, 1154, 4553, 216, 215, 1582, 214,
	4571, 213, 4580, 4570, 4575, 212, 4558, 207, 1500, 211,
	1154, 2065, 4624, 4598, 4626, 4573, 4574, 1607, 209, 208,
	1351, 4616, 4593, 210, 271, 271, 3654, 1341, 4618, 206,
	4602, 229, 1357, 228, 222, 1357, 221, 1357, 1357, 2917,
	2059, 227, 226, 225, 224, 223, 4532, 4612, 793, 220,
	271, 271, 4623, 232, 4413, 1154, 205, 1154, 4617, 1154,
	4622, 204, 1670, 203, 201, 4655, 197, 200, 4657, 1276,
	4658, 4659, 1677, 202, 4668, 199, 198, 912, 196, 4634,
	231, 230, 1154, 72, 1276, 171, 172, 4635, 4636, 71,
	1270, 4666, 4560, 170, 169, 168, 167, 166, 165, 164,
	4269, 70, 24, 1274, 4638, 2, 4270, 1, 4644, 0,
	0, 0, 2590, 0, 0, 0, 4275, 0, 4696, 4286,
	0, 0, 0, 0, 0, 0, 4665, 4664, 1909, 4661,
	0, 0, 0, 0, 4286, 4695, 0, 0, 1276, 1276,
	0, 4689, 0, 2062, 0, 0, 0, 0, 4688, 4716,
	0, 0, 1154, 0, 4718, 271, 1500, 0, 4272, 1276,
	1272, 1272, 1276, 0, 0, 0, 1578, 0, 0, 0,
	0, 0, 4731, 4732, 0, 4276, 1578, 0, 0, 271,
	4704, 0, 0, 2765, 4706, 0, 0, 4705, 4286, 4286,
	1154, 1154, 0, 4749, 4711, 0, 4751, 0, 0, 2059,
	1154, 0, 0, 0, 4763, 0, 4764, 0, 4729, 4286,
	0, 0, 4286, 0, 0, 4740, 0, 4743, 4742, 0,
	0, 0, 4748, 4598, 0, 0, 0, 4756, 0, 0,
	0, 4757, 4759, 0, 0, 0, 2062, 0, 4760, 0,
	1500, 4762, 0, 4761, 0, 1274, 0, 0, 0, 4772,
	1154, 1154, 4780, 0, 1154, 0, 0, 0, 1357, 4776,
	1274, 1357, 4801, 0, 0, 4781, 0, 0, 4783, 0,
	0, 1271, 0, 1270, 0, 0, 0, 0, 0, 0,
	0, 1270, 0, 4827, 4771, 0, 0, 4824, 0, 0,
	4831, 4819, 4809, 4812, 4820, 1270, 4800, 4799, 4791, 4792,
	0, 0, 0, 0, 0, 0, 4271, 0, 0, 4818,
	0, 0, 0, 0, 1274, 1274, 4853, 0, 4851, 1154,
	1154, 1154, 0, 0, 4814, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1274, 0, 0, 1274, 0,
	4836, 0, 0, 0, 4813, 4841, 4281, 4282, 4817, 0,
	0, 0, 1270, 4852, 1270, 4885, 1154, 4844, 0, 0,
	4830, 0, 0, 0, 0, 4868, 4890, 0, 4867, 4865,
	4866, 0, 4886, 0, 0, 0, 0, 0, 0, 0,
	0, 706, 0, 0, 0, 0, 0, 4913, 0, 2187,
	0, 0, 4912, 4911, 4887, 2062, 0, 0, 0, 0,
	0, 0, 271, 4919, 271, 0, 0, 4921, 271, 4903,
	0, 4925, 1154, 1271, 0, 0, 4901, 0, 2053, 4918,
	1357, 1547, 1341, 2028, 271, 4917, 271, 2034, 1271, 0,
	4934, 0, 0, 0, 271, 4578, 722, 4926, 4888, 4927,
	0, 271, 4944, 4952, 4940, 4941, 4931, 0, 0, 4900,
	0, 4902, 4948, 4942, 0, 4946, 0, 2103, 3175, 0,
	1272, 4955, 0, 4943, 0, 4967, 4954, 0, 0, 271,
	4958, 1276, 4956, 1276, 4968, 4977, 271, 0, 0, 4963,
	4965, 4975, 1271, 1271, 4969, 4974, 4966, 4809, 0, 4973,
	4812, 0, 0, 2053, 0, 0, 0, 4983, 0, 4982,
	0, 0, 0, 1271, 0, 4976, 1271, 4978, 0, 793,
	0, 0, 1357, 0, 0, 0, 0, 4998, 0, 4999,
	0, 4286, 5005, 4286, 0, 0, 0, 5006, 0, 5009,
	0, 0, 0, 0, 0, 0, 0, 0, 5004, 0,
	5008, 2177, 1154, 1154, 5015, 5002, 2178, 0, 5011, 0,
	0, 1154, 1154, 4830, 5017, 0, 0, 0, 5025, 5029,
	5020, 0, 5031, 0, 0, 0, 0, 5039, 0, 5036,
	5035, 73, 5033, 0, 5037, 5041, 5032, 5038, 0, 0,
	5034, 0, 0, 0, 5040, 0, 5044, 0, 74, 1357,
	5045, 5048, 5046, 0, 0, 5053, 5050, 5047, 5051, 0,
	0, 5056, 0, 0, 79, 0, 0, 3743, 0, 1154,
	0, 0, 0, 0, 0, 5060, 5053, 5062, 5064, 5057,
	3741, 5049, 0, 0, 0, 0, 0, 5059, 0, 3139,
	3734, 0, 0, 5028, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1272, 88, 5026, 5027, 1274, 0, 1274,
	0, 1272, 0, 0, 0, 0, 0, 3405, 0, 3139,
	2179, 0, 0, 0, 0, 1272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 2183, 0,
	0, 271, 0, 0, 0, 906, 0, 0, 0, 0,
	3434, 0, 0, 0, 0, 0, 0, 0, 49, 0,
	110, 0, 0, 5061, 0, 3447, 94, 107, 0, 1362,
	0, 0, 0, 3745, 2765, 0, 0, 0, 0, 0,
	0, 0, 1272, 0, 1272, 0, 0, 0, 0, 3736,
	0, 3468, 0, 0, 0, 0, 0, 0, 0, 1109,
	0, 0, 0, 0, 3735, 271, 0, 0, 0, 271,
	0, 0, 0, 2180, 2185, 271, 1270, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 95, 0, 0, 0,
	0, 0, 0, 0, 1500, 0, 0, 271, 0, 271,
	0, 0, 0, 706, 0, 271, 0, 0, 0, 0,
	1551, 0, 1558, 0, 1564, 2765, 2765, 793, 0, 0,
	3744, 912, 0, 0, 0, 0, 0, 1500, 0, 0,
	0, 0, 0, 0, 0, 1271, 0, 1271, 0, 0,
	0, 0, 1500, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 1341, 271, 0, 2053, 2181, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 793, 1500, 0,
	0, 0, 3276, 3277, 271, 0, 0, 0, 0, 0,
	0, 0, 2406, 1663, 0, 1668, 0, 271, 271, 0,
	271, 0, 271, 0, 271, 0, 271, 0, 1681, 0,
	1686, 2053, 2053, 2175, 0, 0, 0, 2188, 1116, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1270, 0,
	0, 2443, 1116, 0, 2444, 0, 2445, 0, 0, 0,
	2053, 2053, 0, 1270, 0, 99, 0, 0, 271, 271,
	271, 271, 0, 0, 0, 0, 0, 2503, 0, 0,
	0, 0, 2608, 2609, 2610, 2627, 2628, 2629, 0, 0,
	0, 2173, 0, 2053, 0, 1744, 2186, 773, 3447, 0,
	0, 793, 2630, 0, 0, 0, 0, 0, 0, 3742,
	3737, 3738, 3739, 3740, 0, 0, 0, 1270, 1270, 0,
	0, 190, 102, 0, 0, 106, 0, 2765, 2765, 2765,
	2765, 0, 0, 0, 2174, 1887, 0, 0, 1270, 0,
	0, 1270, 0, 0, 0, 0, 0, 0, 0, 0,
	1500, 239, 0, 0, 2620, 0, 0, 0, 0, 907,
	0, 0, 0, 2616, 153, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3374, 3375, 3376, 3377, 0, 0,
	0, 0, 0, 0, 2598, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1500, 0, 0, 0, 0,
	0, 2182, 0, 2760, 0, 157, 0, 0, 0, 0,
	0, 0, 0, 3767, 0, 0, 1414, 0, 0, 0,
	195, 2621, 2622, 2623, 2624, 0, 0, 0, 240, 0,
	0, 2615, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 0, 706, 0, 0, 0, 0,
	0, 234, 0, 0, 0, 191, 1272, 1831, 1832, 0,
	271, 0, 0, 3622, 0, 0, 0, 0, 0, 706,
	0, 0, 0, 0, 0, 0, 271, 0, 706, 194,
	1862, 0, 0, 0, 0, 0, 0, 1834, 0, 0,
	271, 3647, 0, 3810, 0, 0, 0, 3350, 3351, 0,
	3368, 3369, 3370, 3675, 0, 2625, 2626, 0, 0, 0,
	3826, 271, 1351, 1887, 0, 0, 0, 0, 0, 0,
	0, 0, 1833, 0, 0, 0, 0, 0, 0, 0,
	1500, 0, 1853, 1500, 0, 0, 0, 0, 2618, 0,
	2013, 1850, 0, 0, 2053, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3724, 0, 0,
	271, 1351, 0, 0, 722, 0, 722, 0, 0, 3747,
	2881, 0, 3365, 0, 0, 0, 271, 1831, 1832, 271,
	0, 0, 0, 271, 0, 271, 0, 0, 0, 0,
	1341, 0, 271, 271, 0, 1351, 1351, 2897, 1272, 0,
	1862, 0, 271, 0, 0, 0, 0, 1834, 0, 0,
	1500, 0, 0, 1272, 0, 0, 0, 0, 0, 1856,
	1857, 1858, 1859, 0, 0, 0, 0, 1500, 0, 1839,
	1270, 0, 1270, 1887, 0, 0, 0, 0, 0, 0,
	0, 0, 1833, 0, 0, 3919, 0, 0, 2935, 0,
	0, 0, 1853, 0, 0, 0, 0, 0, 0, 0,
	271, 1850, 0, 0, 0, 0, 0, 1272, 1272, 3356,
	0, 0, 0, 0, 271, 0, 0, 0, 1861, 1863,
	0, 0, 0, 0, 2053, 0, 0, 271, 1272, 0,
	0, 1272, 0, 0, 2619, 0, 0, 0, 793, 0,
	0, 0, 0, 1848, 1849, 0, 0, 0, 0, 0,
	0, 3373, 0, 0, 0, 0, 0, 4169, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3372, 0, 1854, 0, 0, 1856,
	1857, 1858, 1859, 0, 0, 0, 0, 0, 0, 1839,
	0, 0, 0, 1886, 0, 0, 0, 271, 3078, 0,
	0, 0, 1500, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3366, 0, 0, 0,
	0, 0, 0, 0, 0, 1547, 0, 0, 271, 0,
	271, 0, 0, 0, 0, 0, 0, 271, 1861, 1863,
	0, 0, 0, 0, 0, 0, 0, 3122, 2765, 2765,
	0, 0, 0, 1884, 0, 0, 0, 2935, 0, 706,
	0, 0, 0, 1848, 1849, 0, 0, 0, 3151, 912,
	2935, 0, 0, 0, 0, 2605, 2606, 2607, 2631, 2617,
	2611, 0, 2613, 2614, 2612, 2599, 2600, 2601, 2602, 2603,
	2604, 271, 0, 1884, 0, 0, 1854, 0, 0, 0,
	806, 0, 0, 0, 0, 3789, 3790, 0, 0, 1860,
	271, 1341, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1351, 271, 0, 817, 1341, 0, 1341, 0,
	1341, 0, 1855, 0, 0, 0, 0, 0, 2765, 2765,
	2765, 2765, 2765, 2765, 2765, 2765, 2765, 2765, 2765, 2765,
	2765, 2765, 2765, 2765, 2765, 2765, 2765, 2765, 0, 2765,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3367, 1884, 3237, 271, 271, 271, 271, 1341,
	0, 0, 1341, 0, 271, 0, 0, 0, 0, 271,
	0, 1886, 0, 0, 0, 3853, 3854, 3855, 3856, 3857,
	3858, 3859, 3860, 3861, 3862, 3863, 3864, 3865, 3866, 3867,
	3868, 3869, 3870, 3871, 3872, 0, 3876, 0, 811, 0,
	271, 0, 0, 0, 0, 823, 0, 0, 271, 1860,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 816,
	1272, 0, 1272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1855, 0, 0, 2760, 2760, 0, 0, 0,
	0, 0, 2429, 0, 0, 4041, 0, 0, 4042, 0,
	0, 0, 0, 0, 0, 0, 0, 1851, 1847, 0,
	1844, 1842, 1843, 1835, 1836, 1837, 1838, 1840, 1841, 0,
	815, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 768, 0, 0,
	0, 1886, 1500, 3362, 3363, 3364, 3050, 0, 0, 0,
	3361, 3359, 3360, 3352, 3353, 3354, 3355, 3357, 3358, 0,
	0, 0, 813, 0, 0, 0, 0, 0, 2053, 1500,
	0, 0, 0, 0, 0, 0, 0, 4226, 0, 3040,
	3038, 0, 0, 0, 1547, 0, 3042, 3044, 3034, 0,
	0, 0, 0, 0, 0, 4129, 4130, 4131, 0, 0,
	0, 0, 2369, 4137, 4138, 0, 0, 0, 4244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	822, 0, 0, 0, 0, 0, 0, 1851, 1847, 3058,
	1844, 1842, 1843, 1835, 1836, 1837, 1838, 1840, 1841, 0,
	0, 1867, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 73, 0, 0, 0, 0, 0,
	0, 2053, 0, 0, 0, 0, 0, 2760, 2760, 2760,
	2760, 74, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 79, 0, 0,
	0, 1500, 1500, 0, 1500, 0, 0, 0, 808, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1500, 0, 88, 271, 812,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 1116, 0, 706,
	0, 0, 0, 0, 706, 0, 0, 706, 0, 0,
	706, 706, 0, 0, 0, 0, 706, 767, 906, 0,
	3036, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 3052, 818, 110, 0, 0, 271, 0, 810, 94,
	107, 0, 0, 0, 0, 1500, 0, 0, 0, 0,
	4233, 4234, 0, 3051, 3041, 3039, 3043, 3045, 3035, 3037,
	3053, 3055, 0, 0, 0, 1500, 0, 0, 0, 0,
	2053, 3047, 3049, 0, 0, 0, 1414, 271, 0, 0,
	0, 271, 271, 0, 0, 0, 807, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 95,
	0, 0, 0, 0, 0, 3059, 4450, 0, 0, 0,
	2935, 2935, 271, 814, 3508, 2028, 0, 0, 0, 0,
	0, 2935, 0, 2034, 0, 0, 0, 769, 0, 0,
	0, 0, 2935, 2034, 0, 2935, 2034, 0, 809, 2034,
	0, 0, 3508, 1500, 0, 0, 0, 0, 0, 4450,
	1867, 267, 0, 0, 271, 271, 2028, 0, 271, 0,
	0, 0, 820, 821, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2028, 0,
	271, 0, 3582, 3582, 0, 2522, 0, 1341, 0, 0,
	0, 2369, 0, 1500, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2935,
	0, 2935, 0, 3610, 2935, 2028, 0, 0, 2935, 2028,
	3054, 0, 793, 1500, 0, 0, 0, 0, 2856, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 99, 0,
	0, 0, 1341, 0, 0, 0, 0, 2522, 0, 271,
	0, 0, 0, 0, 0, 4426, 1500, 4428, 4429, 4430,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 3648,
	0, 0, 0, 3650, 2935, 3080, 3060, 271, 3083, 0,
	3085, 271, 0, 0, 1351, 3046, 3048, 0, 0, 0,
	0, 0, 1500, 1867, 190, 102, 0, 0, 106, 271,
	0, 0, 0, 0, 3122, 0, 0, 1341, 0, 271,
	0, 0, 2935, 0, 706, 0, 0, 0, 0, 0,
	0, 2935, 0, 0, 239, 0, 0, 3130, 0, 1867,
	3130, 0, 907, 0, 0, 1867, 0, 153, 0, 0,
	1116, 1867, 0, 0, 0, 0, 4478, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1500, 0, 0, 0, 0, 0,
	3758, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1831, 1832, 0,
	3764, 0, 0, 1547, 0, 0, 1341, 271, 157, 271,
	1831, 1832, 0, 0, 0, 1341, 0, 0, 2760, 2760,
	1862, 0, 3202, 195, 0, 0, 0, 1834, 0, 0,
	0, 240, 0, 1862, 0, 0, 0, 1831, 1832, 0,
	1834, 0, 1500, 0, 0, 233, 271, 0, 0, 0,
	0, 1867, 0, 1887, 234, 0, 1867, 0, 191, 0,
	1862, 0, 1833, 0, 0, 0, 1887, 1834, 0, 1867,
	0, 2765, 1853, 0, 1867, 1833, 0, 0, 0, 4572,
	0, 1850, 194, 0, 0, 1853, 0, 0, 0, 0,
	0, 0, 0, 1887, 1850, 0, 0, 0, 0, 0,
	0, 0, 1833, 0, 3831, 0, 0, 0, 2760, 2760,
	2760, 2760, 2760, 2760, 2760, 2760, 2760, 2760, 2760, 2760,
	2760, 2760, 2760, 2760, 2760, 2760, 2760, 2760, 4458, 2760,
	0, 0, 0, 0, 0, 0, 0, 3792, 0, 1867,
	2765, 0, 0, 0, 0, 1867, 0, 0, 0, 0,
	3787, 0, 0, 0, 0, 0, 0, 0, 0, 1856,
	1857, 1858, 1859, 0, 0, 0, 0, 0, 0, 1839,
	0, 0, 1856, 1857, 1858, 1859, 0, 0, 0, 0,
	0, 0, 1839, 1831, 1832, 0, 0, 1986, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4505, 0, 0,
	0, 271, 271, 0, 0, 0, 1862, 0, 0, 1839,
	0, 0, 0, 1834, 0, 0, 0, 0, 1861, 1863,
	0, 0, 0, 0, 0, 0, 706, 706, 0, 0,
	0, 1861, 1863, 0, 0, 0, 0, 0, 0, 1887,
	0, 0, 0, 1848, 1849, 0, 0, 0, 1833, 0,
	0, 0, 0, 0, 0, 0, 1848, 1849, 1861, 1863,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 1854, 0, 1867, 1867,
	1867, 1867, 1867, 1867, 1867, 1867, 0, 0, 0, 1854,
	0, 0, 0, 0, 0, 0, 0, 0, 1867, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1867, 0, 0, 73, 0, 1854, 0, 0, 0,
	0, 0, 0, 0, 0, 2765, 0, 0, 0, 0,
	0, 74, 0, 0, 0, 0, 1116, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 79, 793, 2369,
	0, 0, 0, 1884, 0, 1839, 0, 2764, 0, 0,
	0, 0, 0, 0, 0, 0, 1884, 0, 0, 0,
	1867, 0, 2765, 0, 0, 0, 1867, 0, 0, 0,
	0, 3582, 4643, 1101, 0, 0, 0, 88, 0, 0,
	0, 0, 0, 1884, 0, 0, 271, 2765, 0, 0,
	0, 0, 0, 0, 1861, 1863, 0, 0, 0, 1860,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2028,
	0, 271, 1860, 0, 0, 722, 722, 1351, 906, 4672,
	0, 0, 1855, 0, 0, 0, 0, 0, 0, 0,
	271, 49, 0, 110, 0, 1855, 0, 0, 0, 94,
	107, 271, 3122, 0, 4694, 3122, 2034, 0, 0, 1831,
	1832, 271, 1854, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 1855, 0, 0, 0, 271, 0, 0, 0,
	0, 271, 1862, 0, 0, 0, 0, 0, 0, 1834,
	0, 1886, 0, 0, 0, 0, 0, 0, 0, 0,
	2935, 271, 0, 0, 1886, 0, 0, 0, 0, 95,
	3151, 3151, 1346, 0, 0, 1887, 912, 2935, 0, 0,
	0, 0, 0, 0, 1833, 0, 0, 0, 0, 0,
	0, 1886, 0, 0, 0, 0, 0, 0, 0, 1884,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	3552, 3553, 0, 3554, 0, 0, 0, 0, 0, 0,
	0, 0, 1509, 0, 0, 1523, 1346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1851, 1847, 0,
	1844, 1842, 1843, 1835, 1836, 1837, 1838, 1840, 1841, 0,
	1851, 1847, 0, 1844, 1842, 1843, 1835, 1836, 1837, 1838,
	1840, 1841, 0, 0, 3596, 3597, 0, 3598, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1855, 0,
	0, 4189, 1843, 1835, 1836, 1837, 1838, 1840, 1841, 0,
	0, 1839, 0, 0, 0, 1346, 1346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 99, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1266, 0, 1886, 0, 0,
	1861, 1863, 0, 0, 271, 0, 0, 0, 0, 0,
	1547, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 190, 102, 0, 0, 106, 0,
	0, 266, 266, 702, 1351, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1351, 1854, 271,
	1351, 0, 0, 0, 239, 0, 0, 0, 2935, 2935,
	0, 3508, 907, 0, 3582, 2935, 0, 153, 0, 0,
	0, 0, 0, 4288, 0, 4288, 1547, 1842, 1843, 1835,
	1836, 1837, 1838, 1840, 1841, 0, 0, 2935, 0, 2034,
	0, 0, 0, 3508, 0, 1547, 1547, 271, 2028, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 2028, 0, 271, 2028, 0, 271, 0, 3582, 0,
	0, 0, 0, 0, 0, 1884, 0, 0, 157, 0,
	1867, 0, 0, 0, 0, 0, 0, 2935, 0, 2935,
	271, 0, 0, 195, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 1867, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 2935, 2935, 0, 191, 0,
	0, 3122, 3122, 0, 0, 0, 0, 0, 3508, 0,
	0, 0, 0, 0, 0, 0, 0, 1867, 0, 271,
	0, 1867, 1655, 0, 1855, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 0, 1867, 0, 0, 0, 0,
	0, 0, 0, 0, 1867, 1867, 1867, 1867, 1867, 1867,
	1867, 1867, 1867, 1867, 1867, 1867, 1867, 1867, 1867, 1867,
	1867, 1867, 1867, 1867, 1867, 1867, 1867, 1867, 1867, 1867,
	1867, 1867, 1867, 1867, 1867, 1867, 1867, 1867, 1867, 1867,
	0, 1360, 0, 1886, 0, 1867, 0, 1867, 1867, 1867,
	1867, 2760, 0, 0, 0, 0, 0, 0, 0, 2764,
	2764, 0, 0, 0, 0, 0, 0, 0, 1101, 1101,
	1101, 0, 0, 0, 1867, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 73, 0, 0, 0,
	1513, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 74, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 79,
	2760, 0, 1549, 0, 1555, 1867, 1561, 1523, 0, 0,
	0, 0, 0, 0, 0, 1835, 1836, 1837, 1838, 1840,
	1841, 0, 2935, 2034, 0, 2034, 0, 0, 4497, 0,
	0, 0, 0, 0, 0, 1867, 0, 271, 1867, 88,
	0, 1867, 0, 0, 1867, 0, 0, 4521, 0, 4521,
	1867, 1867, 1867, 1867, 1867, 1867, 1867, 1523, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 793, 1661, 0, 1666, 0, 0,
	906, 0, 0, 0, 0, 3582, 0, 1341, 0, 0,
	1679, 0, 1684, 49, 0, 110, 0, 0, 0, 0,
	0, 94, 107, 0, 0, 2028, 0, 271, 0, 0,
	0, 0, 0, 1831, 1832, 0, 1867, 0, 0, 3371,
	0, 2764, 2764, 2764, 2764, 0, 0, 0, 1867, 0,
	1867, 0, 0, 0, 4497, 1867, 1862, 4288, 0, 0,
	1547, 0, 0, 1834, 2935, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1749, 95, 0, 1755, 4609, 0, 0, 0, 0, 1887,
	0, 0, 0, 0, 0, 0, 1547, 0, 1833, 0,
	0, 0, 0, 0, 0, 2760, 0, 0, 1853, 0,
	0, 0, 0, 0, 0, 0, 0, 1850, 0, 0,
	0, 271, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1831, 1832, 0, 1864,
	1865, 1866, 1875, 1876, 1877, 3831, 0, 0, 0, 0,
	0, 0, 2760, 0, 0, 0, 0, 0, 0, 1862,
	0, 0, 0, 0, 0, 0, 1834, 0, 0, 4100,
	3582, 4663, 0, 3786, 0, 1881, 0, 2760, 0, 4497,
	0, 0, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895,
	0, 0, 1887, 0, 0, 1856, 1857, 1858, 1859, 4288,
	0, 1833, 0, 0, 0, 1839, 0, 0, 0, 0,
	0, 1853, 0, 0, 4288, 1908, 0, 0, 0, 0,
	1850, 1921, 0, 0, 0, 0, 0, 0, 0, 0,
	99, 0, 0, 0, 0, 0, 4150, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	722, 0, 0, 0, 1861, 1863, 2325, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4288, 4288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1848,
	1849, 0, 0, 0, 0, 0, 190, 102, 0, 4288,
	106, 271, 4288, 0, 0, 0, 0, 0, 1856, 1857,
	1858, 1859, 2034, 0, 0, 0, 0, 0, 1839, 0,
	0, 1547, 1854, 1547, 0, 0, 239, 0, 0, 0,
	1327, 0, 1327, 1327, 907, 0, 1980, 1980, 1980, 153,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1351, 0, 0, 0, 0, 0, 1872, 0, 0,
	1882, 0, 0, 0, 0, 4789, 0, 1861, 1863, 0,
	0, 1867, 1867, 0, 1867, 241, 0, 0, 0, 0,
	0, 4521, 0, 1411, 271, 0, 0, 0, 0, 1521,
	0, 0, 1848, 1849, 0, 0, 0, 0, 0, 1884,
	157, 0, 0, 0, 0, 0, 0, 0, 2935, 0,
	1870, 0, 0, 0, 0, 195, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 1854, 0, 0, 0, 0,
	0, 0, 2452, 0, 0, 0, 0, 233, 0, 0,
	0, 0, 0, 271, 0, 0, 234, 0, 0, 0,
	191, 0, 0, 0, 0, 1860, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3831, 0, 0, 0, 0,
	0, 0, 0, 0, 1653, 0, 0, 0, 1855, 0,
	0, 0, 1101, 0, 0, 1659, 1660, 0, 0, 1547,
	0, 0, 0, 1867, 0, 0, 0, 0, 0, 0,
	0, 0, 1884, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1150, 0, 0, 0,
	4329, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1886, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1867,
	1867, 0, 2764, 2764, 0, 0, 1867, 0, 1860, 0,
	0, 4497, 270, 270, 270, 0, 3371, 3371, 0, 0,
	1867, 1867, 0, 0, 0, 0, 0, 0, 0, 4380,
	1867, 1855, 0, 0, 0, 0, 0, 0, 0, 0,
	1776, 836, 4394, 0, 1867, 0, 0, 0, 0, 0,
	0, 2935, 0, 0, 0, 0, 1867, 0, 1873, 0,
	0, 4288, 0, 4288, 0, 4417, 1547, 0, 0, 836,
	0, 0, 0, 1851, 1847, 0, 1844, 1842, 1843, 1835,
	1836, 1837, 1838, 1840, 1841, 0, 0, 0, 0, 0,
	1886, 0, 2764, 2764, 2764, 2764, 2764, 2764, 2764, 2764,
	2764, 2764, 2764, 2764, 2764, 2764, 2764, 2764, 2764, 2764,
	2764, 2764, 0, 2764, 3371, 3371, 3371, 3371, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2935, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1346, 0, 3151, 0, 0, 0, 0, 1867,
	0, 0, 0, 0, 0, 0, 0, 2935, 0, 0,
	0, 0, 1871, 0, 0, 0, 0, 0, 0, 0,
	0, 3151, 1845, 1846, 1852, 1874, 1851, 1847, 0, 1844,
	1842, 1843, 1835, 1836, 1837, 1838, 1840, 1841, 0, 0,
	0, 1346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1346, 1346, 0, 0, 0, 0, 0,
	0, 0, 2735, 2736, 2737, 2738, 2731, 2732, 2733, 2734,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1867, 0, 0, 0, 0, 0, 2430, 0, 0, 0,
	0, 0, 0, 2018, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2029,
	0, 1521, 0, 2711, 2712, 2713, 2714, 0, 1509, 0,
	0, 2457, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1867, 1867, 0, 2723, 2724, 2725, 2726,
	2719, 2720, 2721, 2722, 2727, 2728, 2729, 2730, 0, 0,
	0, 0, 0, 0, 1327, 1523, 0, 2497, 0, 2501,
	0, 1521, 0, 0, 0, 0, 2515, 0, 0, 0,
	0, 0, 0, 2524, 2525, 2526, 2527, 2528, 2529, 2530,
	2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540,
	2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550,
	2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559, 0,
	2565, 0, 2567, 2568, 2569, 2570, 2707, 2708, 2709, 2710,
	2715, 2716, 2717, 2718, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2594, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1908, 0, 0, 0, 2645, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2675, 2678, 2681, 2684, 0, 0, 2690, 2691, 2692, 2693,
	2694, 2695, 2696, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4702, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1523, 2756, 0, 2768, 2770, 2775, 0,
	0, 0, 0, 0, 1346, 0, 0, 0, 0, 0,
	0, 4715, 0, 0, 1867, 1867, 0, 0, 1867, 3371,
	3371, 1867, 0, 0, 0, 1867, 0, 0, 0, 0,
	0, 0, 1867, 0, 0, 0, 0, 0, 0, 0,
	4747, 0, 0, 0, 0, 1867, 0, 0, 0, 73,
	0, 0, 0, 0, 0, 0, 0, 1523, 0, 1523,
	0, 0, 0, 0, 0, 0, 74, 0, 1867, 1867,
	1867, 1867, 1867, 0, 0, 0, 0, 0, 1867, 0,
	1867, 0, 79, 3371, 3371, 3371, 3371, 3371, 3371, 3371,
	3371, 3371, 3371, 3371, 3371, 3371, 3371, 3371, 3371, 3371,
	3371, 3371, 3371, 0, 0, 0, 3371, 0, 0, 1867,
	1867, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2311, 1867, 88, 0, 2318, 0, 0, 0, 0, 0,
	1867, 0, 0, 0, 0, 0, 2331, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2343, 0, 2343, 0, 0, 0, 0, 0,
	2350, 0, 0, 906, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4837, 0, 0, 0, 110, 0,
	4839, 0, 0, 0, 94, 107, 1867, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1867, 0, 0, 0, 2318, 0, 0, 2378, 0,
	0, 270, 0, 270, 270, 0, 0, 270, 0, 0,
	0, 0, 1139, 112, 0, 0, 0, 0, 0, 2398,
	0, 0, 1867, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2414, 95, 2416, 0, 2418, 0, 2420,
	0, 2421, 0, 1867, 1867, 1186, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 270, 270, 0, 0,
	270, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 836,
	0, 0, 0, 2448, 2449, 2450, 0, 0, 0, 0,
	0, 0, 0, 1831, 1832, 0, 1864, 1865, 1866, 1875,
	1876, 1877, 0, 0, 0, 0, 0, 112, 0, 3081,
	3082, 0, 3084, 0, 0, 1868, 1862, 0, 0, 0,
	0, 0, 0, 1834, 0, 0, 0, 0, 0, 0,
	270, 270, 1881, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1867, 0, 0, 0, 0, 1887,
	0, 0, 0, 0, 0, 0, 270, 270, 1833, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1853, 0,
	0, 0, 0, 0, 0, 0, 0, 1850, 0, 0,
	0, 0, 0, 99, 0, 0, 0, 1867, 1867, 0,
	0, 0, 1867, 1867, 0, 1075, 1867, 1867, 0, 0,
	0, 1867, 0, 0, 0, 1867, 0, 1096, 0, 0,
	1867, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1831, 1832, 2764, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 190,
	102, 0, 0, 106, 0, 0, 1862, 0, 0, 0,
	3203, 0, 0, 1834, 1260, 1856, 1857, 1858, 1859, 0,
	0, 270, 0, 0, 0, 1839, 0, 0, 0, 239,
	0, 0, 1523, 1523, 0, 0, 0, 907, 0, 1887,
	0, 0, 153, 0, 0, 270, 0, 1277, 1833, 0,
	0, 0, 0, 0, 2764, 0, 0, 0, 1853, 0,
	0, 0, 0, 0, 1872, 0, 0, 1882, 0, 0,
	0, 0, 0, 0, 1861, 1863, 0, 0, 241, 0,
	0, 0, 1888, 1889, 0, 2832, 0, 0, 0, 0,
	1878, 0, 1879, 0, 0, 0, 0, 0, 0, 1848,
	1849, 0, 0, 157, 0, 0, 1523, 0, 0, 0,
	1867, 0, 0, 0, 0, 0, 0, 1870, 195, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 0,
	0, 2325, 1854, 0, 0, 0, 0, 0, 3259, 3260,
	233, 0, 0, 0, 3266, 1856, 1857, 1858, 1859, 234,
	0, 0, 0, 191, 0, 1839, 0, 0, 0, 0,
	0, 0, 0, 3280, 3281, 0, 0, 0, 0, 2645,
	0, 2883, 0, 0, 1327, 0, 0, 194, 1327, 1880,
	1327, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2331, 1869, 0,
	0, 0, 0, 0, 1861, 1863, 0, 0, 0, 1884,
	0, 0, 0, 0, 3290, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1867, 1867, 1867, 0, 0,
	3304, 0, 0, 0, 0, 0, 1867, 1867, 3371, 2764,
	0, 0, 0, 0, 0, 1867, 0, 3316, 1867, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1346, 0, 1854, 0, 0, 1860, 0, 0, 2002, 0,
	1273, 0, 0, 0, 270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3371, 2764, 0, 1855, 0,
	270, 2002, 270, 0, 0, 0, 0, 0, 0, 0,
	836, 0, 1867, 0, 0, 0, 0, 836, 0, 0,
	1867, 2764, 0, 0, 0, 1873, 0, 0, 1867, 1521,
	0, 0, 0, 0, 0, 0, 0, 1867, 0, 1867,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 1884,
	0, 0, 270, 0, 0, 0, 0, 1886, 0, 2775,
	2775, 2775, 0, 0, 0, 0, 0, 0, 0, 0,
	1523, 0, 0, 0, 1980, 0, 0, 0, 0, 0,
	0, 0, 3409, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2318, 0, 0, 0, 0, 0, 0,
	0, 0, 2331, 0, 0, 1860, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1855, 1871,
	0, 0, 0, 3371, 0, 0, 0, 0, 0, 1845,
	1846, 1852, 1874, 1851, 1847, 0, 1844, 1842, 1843, 1835,
	1836, 1837, 1838, 1840, 1841, 0, 3173, 0, 0, 0,
	3325, 1867, 3371, 0, 3326, 1867, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3184, 0, 3187, 0, 0,
	0, 0, 0, 0, 3371, 0, 0, 1886, 0, 0,
	1101, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1101, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1867, 0, 0, 0, 3540, 0,
	3219, 1521, 3221, 1521, 0, 0, 0, 112, 0, 3227,
	0, 0, 0, 270, 0, 0, 0, 836, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1844, 1842, 1843, 1835,
	1836, 1837, 1838, 1840, 1841, 1327, 0, 0, 0, 0,
	0, 0, 0, 3256, 3593, 3594, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 1277, 270, 0, 0, 112, 0,
	112, 270, 112, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 1867, 270, 0, 0, 1831, 1832,
	0, 270, 0, 0, 1875, 1876, 1877, 0, 0, 0,
	0, 1277, 1831, 1832, 0, 0, 0, 0, 0, 1867,
	0, 1862, 0, 0, 1096, 112, 112, 0, 1834, 0,
	0, 0, 0, 0, 0, 1862, 0, 1881, 0, 0,
	0, 112, 1834, 112, 0, 0, 270, 0, 0, 270,
	0, 0, 0, 0, 1887, 0, 112, 1277, 112, 0,
	0, 0, 0, 1833, 1277, 0, 0, 0, 1887, 0,
	270, 0, 0, 1853, 0, 0, 0, 1833, 0, 0,
	1277, 0, 1850, 836, 270, 0, 270, 1853, 270, 0,
	270, 0, 270, 0, 0, 0, 1850, 1346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 112, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 270, 270, 270, 1277, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1867, 3265, 0, 0, 0, 0, 0, 0, 0,
	1856, 1857, 1858, 1859, 0, 0, 0, 0, 0, 0,
	1839, 0, 2325, 0, 1856, 1857, 1858, 1859, 0, 2515,
	0, 0, 0, 0, 1839, 3784, 3785, 0, 0, 3788,
	0, 0, 0, 3791, 0, 0, 0, 0, 0, 0,
	0, 0, 3795, 0, 0, 0, 0, 0, 0, 1872,
	0, 3802, 1882, 0, 0, 0, 3409, 0, 0, 1861,
	1863, 1075, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3815, 0, 1861, 1863, 0, 0, 0, 0, 0,
	0, 0, 1901, 0, 1848, 1849, 0, 0, 0, 0,
	0, 3838, 3839, 0, 3840, 3841, 3842, 0, 1848, 1849,
	1907, 3457, 1870, 0, 1913, 0, 0, 0, 0, 0,
	0, 0, 3848, 0, 0, 0, 3850, 1854, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1854, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1327, 0, 0, 0, 1521, 1521, 0, 3879,
	3880, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3891, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3504, 0, 0,
	0, 0, 3900, 0, 0, 0, 1273, 0, 0, 0,
	0, 0, 0, 0, 1884, 0, 0, 0, 0, 0,
	0, 0, 1273, 0, 0, 0, 0, 0, 1884, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 3559,
	3561, 0, 0, 2331, 2000, 0, 2003, 0, 112, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1860, 0, 0, 0, 0, 0, 0, 1277, 0, 1277,
	0, 0, 0, 0, 1860, 3956, 0, 0, 0, 0,
	0, 0, 0, 1855, 1277, 0, 0, 0, 0, 0,
	1346, 0, 0, 0, 0, 0, 270, 1855, 0, 0,
	3971, 0, 0, 0, 0, 2066, 0, 0, 0, 0,
	1873, 0, 270, 0, 0, 270, 0, 0, 0, 270,
	0, 270, 0, 0, 0, 0, 0, 0, 270, 270,
	0, 0, 0, 0, 4002, 0, 0, 0, 270, 0,
	0, 0, 1886, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1886, 2325, 0, 0,
	0, 0, 3672, 0, 0, 0, 3676, 0, 0, 4023,
	4024, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1277, 0,
	270, 0, 0, 0, 1871, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 1874, 1851, 1847,
	0, 1844, 1842, 1843, 1835, 1836, 1837, 1838, 1840, 1841,
	0, 0, 1851, 1847, 0, 1844, 1842, 1843, 1835, 1836,
	1837, 1838, 1840, 1841, 0, 0, 0, 0, 0, 0,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1980, 0, 3769, 0, 1521, 0, 0, 0, 0, 4124,
	0, 0, 0, 836, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3782, 0, 0, 270, 0, 836, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1277, 1277, 0, 0, 0, 0,
	0, 0, 0, 0, 1277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4167, 4168, 0, 0, 0, 0,
	4172, 4173, 0, 0, 0, 4176, 4177, 0, 0, 0,
	0, 0, 0, 4181, 0, 0, 0, 270, 0, 0,
	0, 0, 0, 0, 4185, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 270, 0,
	4190, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	0, 0, 0, 0, 0, 0, 1096, 0, 1096, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1277,
	0, 1277, 0, 1277, 0, 0, 0, 0, 0, 0,
	0, 270, 270, 270, 270, 0, 0, 0, 0, 0,
	270, 1277, 1277, 0, 0, 270, 0, 0, 0, 0,
	0, 0, 0, 0, 1277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1277, 0, 1277, 1277,
	1277, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	112, 0, 0, 0, 270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 163, 0, 0, 0, 0, 1101,
	0, 0, 73, 0, 46, 45, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 74,
	0, 0, 158, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 79, 0, 0, 0, 0,
	0, 0, 0, 1523, 0, 0, 67, 0, 0, 0,
	0, 0, 0, 48, 0, 160, 1075, 0, 0, 1075,
	1075, 0, 0, 0, 4330, 0, 0, 0, 0, 0,
	0, 0, 0, 47, 0, 88, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2066, 2066, 1277,
	0, 0, 50, 68, 0, 0, 0, 0, 0, 0,
	0, 51, 0, 0, 0, 2583, 57, 0, 0, 0,
	0, 161, 0, 0, 0, 0, 0, 0, 0, 49,
	0, 110, 0, 0, 0, 1096, 0, 94, 107, 0,
	0, 0, 0, 0, 0, 1907, 0, 0, 0, 1907,
	0, 0, 0, 0, 0, 0, 2331, 0, 0, 1346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2331, 0, 0, 0, 52,
	0, 0, 0, 0, 0, 0, 4078, 0, 0, 0,
	0, 0, 1277, 0, 0, 0, 4088, 95, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4445, 4446, 4447,
	0, 2331, 0, 0, 0, 0, 4106, 0, 0, 0,
	0, 0, 1260, 0, 0, 0, 0, 0, 0, 0,
	2515, 0, 0, 4456, 4457, 0, 0, 0, 2003, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4465, 4468, 0, 1273, 1277, 0, 0, 0, 0,
	0, 0, 1277, 0, 0, 0, 0, 0, 0, 0,
	1273, 1277, 0, 0, 0, 0, 0, 0, 0, 112,
	4152, 0, 0, 0, 0, 0, 0, 0, 1277, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2002, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4522, 0, 0, 0, 0,
	0, 0, 0, 0, 4530, 0, 0, 0, 0, 0,
	1831, 1832, 0, 0, 0, 0, 99, 0, 0, 4538,
	0, 0, 1101, 270, 0, 0, 0, 270, 270, 0,
	0, 0, 0, 1862, 53, 0, 4547, 0, 0, 4549,
	1834, 0, 0, 0, 0, 0, 0, 0, 0, 56,
	0, 0, 0, 0, 59, 0, 0, 0, 270, 0,
	0, 0, 0, 0, 69, 0, 1887, 0, 0, 0,
	0, 58, 190, 102, 0, 1833, 106, 0, 0, 0,
	54, 0, 0, 0, 162, 1853, 0, 0, 0, 0,
	0, 0, 55, 0, 1850, 0, 0, 0, 0, 0,
	270, 270, 239, 0, 270, 0, 1277, 0, 0, 0,
	62, 2002, 0, 0, 0, 153, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 159, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2066, 0, 0, 0, 0, 0, 0, 0,
	3258, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1856, 1857, 1858, 1859, 157, 0, 0, 0,
	0, 0, 1839, 0, 0, 0, 0, 0, 0, 0,
	1277, 195, 4308, 112, 0, 0, 112, 0, 112, 240,
	0, 0, 0, 0, 0, 270, 0, 0, 2331, 0,
	0, 0, 4671, 233, 0, 0, 4675, 0, 0, 0,
	0, 0, 234, 836, 0, 0, 191, 0, 0, 0,
	0, 1861, 1863, 270, 0, 0, 0, 270, 0, 0,
	0, 0, 0, 0, 0, 112, 0, 0, 112, 0,
	194, 0, 0, 3, 112, 270, 1848, 1849, 0, 0,
	0, 0, 0, 0, 0, 1273, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1163, 0, 0, 1277, 1854,
	0, 0, 0, 0, 2331, 0, 0, 0, 0, 0,
	0, 1277, 0, 1277, 4405, 0, 0, 0, 0, 4744,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1277, 0, 0, 0, 0, 0, 0, 0, 0, 856,
	112, 272, 272, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2515, 858,
	0, 0, 0, 270, 859, 270, 0, 4468, 0, 0,
	272, 0, 0, 0, 0, 0, 1884, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 270, 860, 0, 877, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1101, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	861, 0, 1860, 0, 0, 862, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1855, 0, 886, 0, 0,
	0, 0, 0, 0, 863, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2583, 884, 0,
	0, 0, 4507, 0, 0, 0, 4864, 4864, 4864, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1907, 0,
	0, 0, 0, 857, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1886, 0, 0, 0, 0, 0,
	0, 0, 0, 4889, 0, 0, 864, 0, 0, 865,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 888, 0, 0, 0, 0, 768, 0, 976, 0,
	1025, 0, 2331, 0, 0, 0, 0, 1273, 1273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 984, 0, 0, 0, 0, 4864,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	999, 0, 982, 981, 0, 0, 0, 0, 0, 0,
	1851, 1847, 0, 1844, 1842, 1843, 1835, 1836, 1837, 1838,
	1840, 1841, 0, 0, 1001, 0, 0, 0, 0, 887,
	983, 0, 0, 0, 836, 986, 0, 0, 0, 882,
	1036, 0, 0, 0, 0, 0, 0, 0, 0, 996,
	997, 0, 0, 0, 0, 0, 4633, 1521, 1014, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1026, 988, 0, 0,
	0, 0, 0, 989, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 866, 0, 0, 990, 0, 0, 0,
	1260, 0, 0, 0, 868, 1023, 0, 0, 0, 4864,
	5021, 0, 0, 0, 0, 0, 1260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1277, 1277, 869, 0, 1024, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1277,
	0, 0, 270, 992, 0, 0, 0, 0, 0, 0,
	0, 980, 0, 0, 878, 0, 0, 1277, 0, 0,
	0, 0, 0, 0, 0, 0, 767, 270, 0, 1277,
	993, 994, 1277, 0, 0, 0, 0, 0, 0, 855,
	0, 879, 0, 0, 0, 0, 270, 0, 1002, 1000,
	870, 0, 0, 0, 2066, 0, 995, 270, 1277, 0,
	1011, 0, 0, 1031, 1030, 0, 4750, 270, 0, 0,
	0, 0, 0, 0, 0, 0, 876, 270, 1033, 1022,
	0, 0, 270, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 0, 871, 0, 0, 0, 872, 891, 0,
	890, 0, 0, 873, 0, 0, 0, 1273, 0, 0,
	1027, 0, 0, 0, 0, 0, 0, 874, 112, 112,
	0, 112, 883, 0, 0, 0, 0, 0, 892, 2066,
	889, 0, 0, 0, 0, 0, 769, 0, 0, 0,
	0, 0, 0, 753, 0, 0, 0, 0, 0, 4803,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 736, 0, 0, 0, 987, 737, 0,
	1035, 0, 112, 112, 0, 112, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 985, 0, 0, 0, 1018, 1019, 0,
	0, 0, 0, 0, 0, 0, 0, 738, 4846, 0,
	1277, 1021, 0, 0, 0, 0, 0, 276, 739, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1028, 1016, 0, 0, 740,
	0, 0, 0, 0, 1034, 1012, 0, 0, 1005, 1003,
	0, 1008, 753, 0, 0, 1277, 0, 1009, 0, 0,
	978, 759, 1029, 0, 0, 0, 0, 0, 0, 1277,
	0, 1277, 736, 0, 0, 1277, 0, 737, 0, 0,
	0, 0, 741, 1277, 0, 979, 0, 0, 0, 0,
	1273, 1260, 828, 0, 1096, 1277, 0, 1020, 1273, 1010,
	272, 0, 272, 272, 0, 1007, 272, 742, 112, 112,
	0, 0, 2002, 0, 0, 1032, 738, 0, 0, 0,
	828, 0, 0, 1013, 1277, 0, 0, 739, 0, 0,
	743, 0, 991, 744, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 1015, 0, 740, 1277,
	768, 0, 0, 272, 1420, 272, 272, 0, 0, 272,
	272, 1277, 0, 1277, 0, 0, 0, 0, 0, 2002,
	759, 2002, 1017, 0, 0, 758, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 741, 0, 270, 0, 0, 0, 0, 0, 0,
	0, 1420, 0, 0, 0, 0, 0, 0, 0, 270,
	1277, 0, 270, 1277, 0, 0, 742, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	272, 0, 0, 755, 0, 0, 270, 0, 0, 743,
	0, 0, 744, 0, 0, 0, 0, 1420, 0, 0,
	0, 0, 0, 0, 1420, 272, 272, 0, 0, 768,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1420, 2066, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 758, 0, 0, 0, 0, 0,
	1277, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 765, 1277, 746, 0,
	0, 0, 0, 0, 0, 0, 0, 2066, 2066, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1420, 0,
	0, 0, 0, 0, 0, 0, 0, 766, 0, 747,
	0, 0, 755, 0, 0, 0, 2066, 2066, 0, 0,
	0, 0, 1155, 0, 0, 112, 0, 0, 0, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1260, 1260, 0, 0, 0, 0, 2066,
	767, 0, 0, 0, 272, 0, 0, 0, 748, 0,
	0, 0, 0, 763, 764, 761, 0, 0, 0, 0,
	0, 756, 0, 0, 749, 0, 1277, 1277, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 746, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1277, 0, 0, 0, 766, 750, 747, 757,
	0, 0, 0, 0, 0, 0, 0, 751, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 752, 0, 270, 0, 0, 760, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 767,
	769, 0, 0, 0, 0, 0, 0, 748, 0, 0,
	0, 754, 763, 764, 761, 0, 0, 0, 0, 0,
	756, 0, 0, 749, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 750, 0, 757, 0,
	0, 0, 0, 0, 0, 0, 751, 0, 0, 0,
	0, 0, 0, 2002, 0, 0, 0, 0, 0, 0,
	752, 0, 0, 0, 0, 760, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 769,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	754, 0, 0, 272, 0, 0, 0, 1277, 0, 0,
	1277, 0, 0, 0, 1420, 0, 0, 0, 0, 272,
	272, 272, 0, 0, 0, 0, 0, 270, 270, 272,
	0, 0, 0, 0, 0, 0, 272, 112, 0, 0,
	2066, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1260, 272, 0, 0, 0, 0, 0,
	0, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1277, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1277, 0, 0, 0,
	0, 0, 0, 0, 112, 2002, 0, 1277, 1277, 1277,
	0, 0, 0, 0, 1277, 1277, 1277, 0, 0, 0,
	2002, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1277, 0, 1420, 0,
	0, 0, 1277, 0, 270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1277,
	0, 0, 0, 0, 2002, 2002, 0, 0, 0, 0,
	2066, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2002, 0, 270, 2002, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1417, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	112, 0, 0, 0, 0, 0, 1260, 0, 0, 0,
	0, 0, 0, 0, 1260, 0, 0, 0, 0, 0,
	0, 0, 0, 1579, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 1420, 1420, 272, 0, 0, 1277,
	270, 0, 0, 0, 1420, 0, 0, 1277, 0, 0,
	0, 1277, 1277, 0, 1277, 0, 0, 0, 0, 0,
	0, 1277, 0, 0, 0, 0, 0, 0, 0, 1579,
	0, 0, 1277, 1277, 0, 0, 1579, 0, 0, 0,
	0, 0, 0, 0, 0, 1277, 0, 0, 0, 0,
	0, 0, 1579, 0, 0, 0, 0, 0, 0, 270,
	272, 0, 0, 0, 272, 0, 0, 0, 0, 0,
	272, 0, 0, 0, 0, 0, 272, 0, 1277, 0,
	1277, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 272, 0, 0, 0, 112, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 1420,
	1579, 1420, 0, 1420, 0, 1277, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1420, 1420, 0, 0, 1277, 0, 0, 0, 0,
	0, 0, 0, 0, 1420, 272, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 1420, 112, 1420, 1420,
	1420, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	112, 0, 0, 1277, 1277, 0, 0, 0, 0, 0,
	0, 0, 272, 272, 0, 272, 0, 272, 0, 272,
	0, 272, 0, 112, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1277, 0, 0, 0, 0, 1277, 0,
	0, 0, 0, 0, 0, 0, 0, 2002, 0, 2002,
	0, 0, 0, 272, 272, 272, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1277, 1277, 1277,
	1277, 1277, 1277, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1277, 0, 0, 0, 0, 0, 0,
	0, 1418, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1420,
	0, 0, 0, 1277, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2066, 0, 0, 0, 1580, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1277, 0, 1277, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1580, 0, 0, 0, 0, 0,
	0, 1580, 1277, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1420, 0, 0, 0, 0, 1580, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1417, 2066, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 828, 0, 0, 0, 0, 0, 0, 828, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1277, 1580, 0, 0, 0, 0,
	0, 0, 1420, 0, 0, 0, 0, 0, 0, 0,
	0, 1277, 1277, 1277, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 0, 0, 1420, 0,
	0, 0, 1277, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2583, 0, 0, 0, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1277, 0, 0, 1277, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1417, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 0, 0, 272, 0, 2066, 0, 272, 0,
	272, 0, 0, 0, 0, 0, 0, 272, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 112, 0, 0, 1277, 0, 1420, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1277,
	0, 0, 0, 0, 0, 272, 0, 0, 0, 112,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 0, 1579, 1579, 0, 0,
	0, 0, 272, 0, 0, 0, 1417, 0, 112, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1277, 1277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	1420, 0, 0, 0, 1277, 0, 0, 1277, 0, 0,
	0, 1277, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1277, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1418, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 272, 0, 0, 0, 0,
	0, 1579, 272, 1579, 0, 1579, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1579, 1579, 0, 0, 0, 1420, 0,
	0, 0, 112, 0, 0, 0, 1579, 0, 112, 0,
	0, 1420, 0, 1420, 0, 0, 0, 0, 1579, 0,
	1579, 1579, 1579, 0, 0, 0, 272, 0, 0, 0,
	1420, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 828, 272, 0, 272, 0, 0,
	0, 0, 0, 0, 0, 1418, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	272, 272, 272, 272, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1417, 0, 0, 0, 272, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 1831, 1832, 0, 1864, 1865, 1866, 1875, 1876,
	1877, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1580, 1580, 0, 1868, 1862, 0, 0, 0, 0,
	0, 1418, 1834, 0, 0, 0, 0, 0, 0, 0,
	0, 1881, 0, 0, 0, 0, 1277, 0, 1277, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1887, 0,
	0, 0, 0, 0, 0, 0, 0, 1833, 0, 0,
	0, 0, 0, 0, 1417, 0, 0, 1853, 0, 0,
	0, 0, 0, 0, 0, 0, 1850, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1580, 0, 1580, 0,
	1580, 0, 0, 0, 1417, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1580, 1580,
	0, 0, 0, 0, 1856, 1857, 1858, 1859, 0, 0,
	1417, 1580, 0, 0, 1839, 0, 0, 0, 0, 0,
	0, 0, 0, 1580, 0, 1580, 1580, 1580, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1872, 1831, 1832, 1882, 1864, 1865, 1866,
	1875, 1876, 1877, 1861, 1863, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1868, 1862, 0, 1878,
	0, 1879, 0, 0, 1834, 0, 0, 0, 1848, 1849,
	0, 0, 0, 1881, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1420, 0, 1870, 0, 0, 0,
	1887, 0, 0, 0, 0, 0, 0, 0, 0, 1833,
	0, 1854, 0, 0, 0, 0, 0, 0, 0, 1853,
	0, 0, 0, 0, 0, 0, 0, 1420, 1850, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1420, 0, 0, 0, 1418, 0, 1417, 0,
	0, 272, 0, 0, 0, 0, 0, 0, 1880, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1420, 0,
	0, 0, 0, 0, 0, 0, 0, 1869, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1884, 0,
	0, 0, 272, 0, 0, 0, 272, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 1856, 1857, 1858, 1859,
	0, 0, 0, 0, 0, 0, 1839, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 0, 0,
	0, 0, 1417, 0, 0, 0, 0, 0, 0, 1418,
	0, 0, 0, 0, 1860, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1872, 0, 0, 1882, 0,
	0, 0, 0, 0, 0, 1861, 1863, 1855, 0, 272,
	272, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	272, 1878, 0, 1879, 0, 0, 0, 0, 0, 0,
	1848, 1849, 0, 0, 1873, 272, 0, 828, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1870, 1418,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1420, 0, 0, 1854, 0, 0, 1886, 0, 0, 0,
	1579, 0, 0, 0, 0, 1418, 0, 0, 0, 0,
	0, 0, 0, 1579, 0, 1579, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1579, 0, 0, 1420, 0, 0, 0, 0,
	1880, 0, 0, 0, 272, 0, 0, 0, 0, 1420,
	0, 1420, 0, 0, 0, 1420, 0, 0, 0, 1869,
	0, 0, 272, 1420, 0, 0, 0, 0, 1871, 0,
	1884, 0, 272, 0, 0, 1420, 272, 0, 1845, 1846,
	1852, 1874, 1851, 1847, 0, 1844, 1842, 1843, 1835, 1836,
	1837, 1838, 1840, 1841, 272, 0, 0, 0, 0, 2641,
	0, 0, 0, 2642, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1860, 0, 0, 1420,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1420, 0, 1420, 0, 0, 0, 0, 0, 1855,
	0, 0, 0, 1418, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1873, 1831, 1832, 0,
	1864, 1865, 1866, 1875, 1876, 1877, 0, 0, 0, 0,
	1420, 0, 272, 1420, 272, 0, 0, 0, 0, 1868,
	1862, 0, 0, 0, 0, 0, 0, 1834, 1886, 0,
	0, 0, 0, 0, 0, 0, 1881, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 0, 1887, 0, 0, 0, 1418, 0, 0,
	0, 0, 1833, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1853, 0, 0, 0, 0, 0, 0, 0,
	0, 1850, 0, 0, 0, 0, 0, 0, 0, 0,
	1420, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1871, 0, 0, 0, 0, 0, 0, 1420, 0, 0,
	1845, 1846, 1852, 1874, 1851, 1847, 0, 1844, 1842, 1843,
	1835, 1836, 1837, 1838, 1840, 1841, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1580, 0, 0, 0, 1856,
	1857, 1858, 1859, 0, 0, 0, 0, 0, 1580, 1839,
	1580, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1580, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1872, 0,
	0, 1882, 0, 0, 0, 0, 0, 0, 1861, 1863,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1878, 0, 1879, 0, 0, 0,
	0, 0, 1420, 1848, 1849, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1417, 0, 0, 0,
	0, 1870, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 1854, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1417,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1417, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1880, 0, 0, 0, 0, 0, 0,
	1417, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1869, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1884, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 0, 0, 0, 0, 0, 0, 0, 1860,
	0, 0, 0, 0, 0, 0, 0, 1420, 0, 0,
	1420, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	0, 0, 1855, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 0, 0, 1873,
	0, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	0, 272, 1417, 0, 0, 0, 272, 0, 0, 0,
	0, 1886, 1420, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1420, 1420, 1420,
	0, 0, 0, 0, 1420, 1420, 1420, 1579, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1579, 0, 1579, 0, 0, 1420, 1417, 0, 0,
	272, 0, 1420, 0, 828, 1579, 0, 0, 0, 0,
	0, 0, 0, 1871, 0, 0, 0, 1579, 0, 0,
	0, 0, 0, 1845, 1846, 1852, 1874, 1851, 1847, 1420,
	1844, 1842, 1843, 1835, 1836, 1837, 1838, 1840, 1841, 0,
	0, 1418, 0, 0, 0, 0, 0, 0, 3800, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1579, 0, 0, 1418, 0, 0, 0, 0, 0,
	0, 0, 0, 1579, 0, 1579, 0, 0, 0, 1418,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1418, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1417, 0, 0, 1417, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1420, 1420, 0, 1420, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1420, 1420, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1420, 0, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1417, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1417,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1420, 0, 0, 272, 0,
	0, 272, 0, 0, 0, 0, 0, 1418, 0, 0,
	0, 0, 0, 0, 0, 1420, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1580, 1420, 1420, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1580, 0, 1580, 0,
	0, 0, 1418, 0, 0, 0, 0, 0, 0, 0,
	1580, 0, 0, 0, 272, 0, 0, 0, 0, 0,
	0, 0, 1580, 1420, 272, 0, 0, 0, 1420, 0,
	0, 0, 0, 0, 1417, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1420, 1420, 1420,
	1420, 1420, 1420, 0, 0, 828, 0, 0, 0, 0,
	0, 0, 0, 1420, 0, 0, 1580, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1580, 0,
	1580, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1420, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1418, 0, 0,
	1418, 0, 0, 0, 0, 0, 1420, 0, 1420, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1420, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1579,
	0, 0, 1579, 0, 0, 0, 0, 1418, 0, 0,
	0, 0, 1831, 1832, 0, 1864, 1865, 1866, 1875, 1876,
	1877, 0, 0, 0, 1418, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1868, 1862, 0, 0, 0, 0,
	0, 0, 1834, 0, 1420, 0, 0, 0, 0, 0,
	0, 1881, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 1420, 1420, 1420, 0, 0, 0, 0, 1887, 0,
	0, 0, 0, 0, 1579, 0, 0, 1833, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1853, 0, 0,
	0, 0, 0, 0, 0, 0, 1850, 0, 0, 1579,
	1579, 1579, 0, 0, 0, 0, 1579, 1579, 1579, 0,
	0, 0, 1420, 0, 0, 1420, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1579, 0,
	0, 0, 0, 0, 1417, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1418,
	0, 1417, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1856, 1857, 1858, 1859, 0, 0,
	0, 0, 0, 0, 1839, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1872, 0, 0, 1882, 0, 0, 0,
	0, 0, 0, 1861, 1863, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1878,
	0, 1879, 0, 0, 0, 0, 0, 0, 1848, 1849,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1870, 0, 0, 0,
	0, 0, 0, 1417, 1417, 0, 1417, 0, 0, 0,
	0, 1854, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1579, 1579, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 1417, 0, 0,
	0, 1420, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1420, 0, 0, 1580, 0, 0, 1580, 1880, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1869, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1884, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1417, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 0, 0, 1417, 0, 1580,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1860, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1580, 1580, 1580, 0, 0, 0,
	0, 1580, 1580, 1580, 0, 1579, 1579, 1855, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 1580, 0, 0, 0, 0, 0, 1418,
	0, 0, 0, 0, 1873, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1417, 0, 0, 0, 0,
	1579, 0, 0, 0, 0, 0, 1418, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1886, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1579,
	1579, 1579, 1579, 1579, 1579, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1417, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1417, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1871, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1845, 1846,
	1852, 1874, 1851, 1847, 0, 1844, 1842, 1843, 1835, 1836,
	1837, 1838, 1840, 1841, 0, 0, 0, 0, 1417, 0,
	1579, 0, 0, 3328, 0, 0, 0, 0, 1418, 1418,
	0, 1418, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1580,
	1580, 0, 0, 0, 1417, 0, 0, 0, 0, 0,
	0, 0, 1418, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1417, 0, 0, 0,
	0, 0, 1418, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1579, 1579, 1579, 0, 0, 0, 0,
	0, 0, 1418, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1580, 1580, 0, 0, 1417, 0, 0, 1579, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1418, 0, 0, 0, 0, 1580, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1580, 1580, 1580, 1580, 1580, 1580,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1418, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1418, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1418, 0, 1580, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1418,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1579, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1579, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1418, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1580, 1580,
	1580, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1418,
	0, 0, 1580, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1415,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 1421, 287, 288, 1422, 1423, 1424, 0,
	1425, 648, 1426, 1427, 1428, 1429, 289, 290, 1217, 291,
	292, 293, 294, 295, 296, 649, 650, 0, 297, 651,
	298, 652, 1430, 653, 299, 300, 301, 302, 303, 304,
	1431, 1432, 0, 305, 654, 655, 656, 1433, 306, 307,
	657, 1434, 1501, 1435, 308, 309, 310, 311, 312, 313,
	314, 0, 1436, 316, 317, 318, 315, 319, 1437, 320,
	0, 321, 322, 323, 324, 325, 326, 1438, 327, 328,
	329, 1218, 330, 331, 332, 1439, 1440, 1442, 1441, 1443,
	1444, 1445, 333, 334, 335, 336, 337, 0, 338, 340,
	658, 659, 1446, 343, 339, 341, 1447, 344, 342, 345,
	1448, 346, 347, 348, 1449, 1450, 349, 350, 351, 1451,
	352, 353, 354, 1452, 355, 356, 357, 1453, 358, 359,
	660, 360, 361, 362, 364, 366, 363, 365, 367, 368,
	369, 370, 661, 662, 371, 1454, 277, 1455, 1580, 0,
	0, 0, 372, 373, 374, 663, 0, 0, 1580, 375,
	1456, 376, 377, 378, 1457, 1458, 1219, 379, 380, 381,
	664, 665, 382, 383, 384, 385, 386, 387, 388, 389,
	390, 1459, 391, 666, 1460, 667, 392, 1461, 393, 394,
	395, 396, 397, 668, 669, 670, 483, 1221, 398, 399,
	1462, 400, 401, 402, 403, 404, 0, 0, 0, 278,
	405, 406, 407, 1463, 1220, 408, 671, 672, 1464, 673,
	1465, 409, 410, 1222, 674, 1223, 411, 412, 413, 1224,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	1466, 421, 423, 422, 1467, 424, 675, 1225, 425, 426,
	1226, 1468, 427, 428, 429, 430, 431, 432, 435, 1469,
	1470, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1227, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 478, 466, 467, 468, 1228, 477, 465,
	1471, 279, 1229, 479, 480, 481, 1472, 676, 482, 677,
	484, 485, 1473, 0, 486, 0, 1474, 1475, 488, 489,
	490, 1476, 1477, 491, 492, 678, 1230, 493, 1231, 679,
	494, 495, 487, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 1478, 505, 506, 680, 507, 508, 509, 681,
	510, 511, 512, 682, 513, 683, 514, 515, 1479, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 524, 684,
	525, 526, 528, 527, 529, 1480, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 536, 0, 537,
	538, 539, 540, 535, 541, 542, 543, 544, 545, 1481,
	546, 547, 548, 1232, 549, 550, 551, 552, 553, 685,
	554, 0, 555, 556, 562, 563, 564, 557, 558, 565,
	566, 567, 568, 569, 1482, 571, 572, 570, 573, 574,
	575, 1483, 576, 577, 559, 560, 578, 579, 1233, 580,
	581, 582, 583, 584, 585, 586, 686, 0, 587, 1484,
	588, 589, 590, 591, 593, 561, 594, 599, 600, 687,
	595, 596, 597, 598, 688, 602, 603, 1485, 604, 605,
	0, 601, 592, 1486, 606, 607, 608, 609, 610, 611,
	612, 613, 1487, 614, 689, 690, 691, 692, 1488, 623,
	1489, 615, 616, 617, 693, 618, 694, 1490, 619, 620,
	621, 622, 0, 624, 625, 1491, 1492, 626, 627, 628,
	630, 631, 629, 632, 1493, 633, 1494, 0, 634, 635,
	636, 695, 696, 697, 1495, 638, 637, 639, 640, 698,
	641, 642, 1496, 1497, 1498, 1499, 643, 644, 699, 645,
	646, 647, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1415, 0, 0, 0, 0, 0, 0, 0,
	2810, 0, 0, 0, 0, 0, 0, 0, 2811, 280,
	282, 281, 283, 284, 285, 286, 1421, 287, 288, 1422,
	1423, 1424, 0, 1425, 648, 1426, 1427, 1428, 1429, 289,
	290, 1217, 291, 292, 293, 294, 295, 296, 649, 650,
	0, 297, 651, 298, 652, 1430, 653, 299, 300, 301,
	302, 303, 304, 1431, 1432, 0, 305, 654, 655, 656,
	1433, 306, 307, 657, 1434, 1501, 1435, 308, 309, 310,
	311, 312, 313, 314, 0, 1436, 316, 317, 318, 315,
	319, 1437, 320, 0, 321, 322, 323, 324, 325, 326,
	1438, 327, 328, 329, 1218, 330, 331, 332, 1439, 1440,
	1442, 1441, 1443, 1444, 1445, 333, 334, 335, 336, 337,
	0, 338, 340, 658, 659, 1446, 343, 339, 341, 1447,
	344, 342, 345, 1448, 346, 347, 348, 1449, 1450, 349,
	350, 351, 1451, 352, 353, 354, 1452, 355, 356, 357,
	1453, 358, 359, 660, 360, 361, 362, 364, 366, 363,
	365, 367, 368, 369, 370, 661, 662, 371, 1454, 277,
	1455, 0, 0, 0, 0, 372, 373, 374, 663, 0,
	0, 0, 375, 1456, 376, 377, 378, 1457, 1458, 1219,
	379, 380, 381, 664, 665, 382, 383, 384, 385, 386,
	387, 388, 389, 390, 1459, 391, 666, 1460, 667, 392,
	1461, 393, 394, 395, 396, 397, 668, 669, 670, 483,
	1221, 398, 399, 1462, 400, 401, 402, 403, 404, 0,
	0, 0, 278, 405, 406, 407, 1463, 1220, 408, 671,
	672, 1464, 673, 1465, 409, 410, 1222, 674, 1223, 411,
	412, 413, 1224, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 1466, 421, 423, 422, 1467, 424, 675,
	1225, 425, 426, 1226, 1468, 427, 428, 429, 430, 431,
	432, 435, 1469, 1470, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1227, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 478, 466, 467, 468,
	1228, 477, 465, 1471, 279, 1229, 479, 480, 481, 1472,
	676, 482, 677, 484, 485, 1473, 0, 486, 0, 1474,
	1475, 488, 489, 490, 1476, 1477, 491, 492, 678, 1230,
	493, 1231, 679, 494, 495, 487, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 1478, 505, 506, 680, 507,
	508, 509, 681, 510, 511, 512, 682, 513, 683, 514,
	515, 1479, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 524, 684, 525, 526, 528, 527, 529, 1480, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	536, 0, 537, 538, 539, 540, 535, 541, 542, 543,
	544, 545, 1481, 546, 547, 548, 1232, 549, 550, 551,
	552, 553, 685, 554, 0, 555, 556, 562, 563, 564,
	557, 558, 565, 566, 567, 568, 569, 1482, 571, 572,
	570, 573, 574, 575, 1483, 576, 577, 559, 560, 578,
	579, 1233, 580, 581, 582, 583, 584, 585, 586, 686,
	0, 587, 1484, 588, 589, 590, 591, 593, 561, 594,
	599, 600, 687, 595, 596, 597, 598, 688, 602, 603,
	1485, 604, 605, 0, 601, 592, 1486, 606, 607, 608,
	609, 610, 611, 612, 613, 1487, 614, 689, 690, 691,
	692, 1488, 623, 1489, 615, 616, 617, 693, 618, 694,
	1490, 619, 620, 621, 622, 0, 624, 625, 1491, 1492,
	626, 627, 628, 630, 631, 629, 632, 1493, 633, 1494,
	0, 634, 635, 636, 695, 696, 697, 1495, 638, 637,
	639, 640, 698, 641, 642, 1496, 1497, 1498, 1499, 643,
	644, 699, 645, 646, 647, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1415, 0, 0, 0, 3809, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3811,
	280, 282, 281, 283, 284, 285, 286, 1421, 287, 288,
	1422, 1423, 1424, 0, 1425, 648, 1426, 1427, 1428, 1429,
	289, 290, 1217, 291, 292, 293, 294, 295, 296, 649,
	650, 0, 297, 651, 298, 652, 1430, 653, 299, 300,
	301, 302, 303, 304, 1431, 1432, 0, 305, 654, 655,
	656, 1433, 306, 307, 657, 1434, 1501, 1435, 308, 309,
	310, 311, 312, 313, 314, 0, 1436, 316, 317, 318,
	315, 319, 1437, 320, 0, 321, 322, 323, 324, 325,
	326, 1438, 327, 328, 329, 1218, 330, 331, 332, 1439,
	1440, 1442, 1441, 1443, 1444, 1445, 333, 334, 335, 336,
	337, 0, 338, 340, 658, 659, 1446, 343, 339, 341,
	1447, 344, 342, 345, 1448, 346, 347, 348, 1449, 1450,
	349, 350, 351, 1451, 352, 353, 354, 1452, 355, 356,
	357, 1453, 358, 359, 660, 360, 361, 362, 364, 366,
	363, 365, 367, 368, 369, 370, 661, 662, 371, 1454,
	277, 1455, 0, 0, 0, 0, 372, 373, 374, 663,
	0, 0, 0, 375, 1456, 376, 377, 378, 1457, 1458,
	1219, 379, 380, 381, 664, 665, 382, 383, 384, 385,
	386, 387, 388, 389, 390, 1459, 391, 666, 1460, 667,
	392, 1461, 393, 394, 395, 396, 397, 668, 669, 670,
	483, 1221, 398, 399, 1462, 400, 401, 402, 403, 404,
	0, 0, 0, 278, 405, 406, 407, 1463, 1220, 408,
	671, 672, 1464, 673, 1465, 409, 410, 1222, 674, 1223,
	411, 412, 413, 1224, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 1466, 421, 423, 422, 1467, 424,
	675, 1225, 425, 426, 1226, 1468, 427, 428, 429, 430,
	431, 432, 435, 1469, 1470, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1227, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 478, 466, 467,
	468, 1228, 477, 465, 1471, 279, 1229, 479, 480, 481,
	1472, 676, 482, 677, 484, 485, 1473, 0, 486, 0,
	1474, 1475, 488, 489, 490, 1476, 1477, 491, 492, 678,
	1230, 493, 1231, 679, 494, 495, 487, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 1478, 505, 506, 680,
	507, 508, 509, 681, 510, 511, 512, 682, 513, 683,
	514, 515, 1479, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 524, 684, 525, 526, 528, 527, 529, 1480,
	530, 0, 531, 532, 533, 0, 0, 0, 0, 0,
	534, 536, 0, 537, 538, 539, 540, 535, 541, 542,
	543, 544, 545, 1481, 546, 547, 548, 1232, 549, 550,
	551, 552, 553, 685, 554, 0, 555, 556, 562, 563,
	564, 557, 558, 565, 566, 567, 568, 569, 1482, 571,
	572, 570, 573, 574, 575, 1483, 576, 577, 559, 560,
	578, 579, 1233, 580, 581, 582, 583, 584, 585, 586,
	686, 0, 587, 1484, 588, 589, 590, 591, 593, 561,
	594, 599, 600, 687, 595, 596, 597, 598, 688, 602,
	603, 1485, 604, 605, 0, 601, 592, 1486, 606, 607,
	608, 609, 610, 611, 612, 613, 1487, 614, 689, 690,
	691, 692, 1488, 623, 1489, 615, 616, 617, 693, 618,
	694, 1490, 619, 620, 621, 622, 0, 624, 625, 1491,
	1492, 626, 627, 628, 630, 631, 629, 632, 1493, 633,
	1494, 0, 634, 635, 636, 695, 696, 697, 1495, 638,
	637, 639, 640, 698, 641, 642, 1496, 1497, 1498, 1499,
	643, 644, 699, 645, 646, 647, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1415, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4225, 280, 282, 281, 283, 284,
	285, 286, 1421, 287, 288, 1422, 1423, 1424, 0, 1425,
	648, 1426, 1427, 1428, 1429, 289, 290, 1217, 291, 292,
	293, 294, 295, 296, 649, 650, 0, 297, 651, 298,
	652, 1430, 653, 299, 300, 301, 302, 303, 304, 1431,
	1432, 0, 305, 654, 655, 656, 1433, 306, 307, 657,
	1434, 1501, 1435, 308, 309, 310, 311, 312, 313, 314,
	0, 1436, 316, 317, 318, 315, 319, 1437, 320, 0,
	321, 322, 323, 324, 325, 326, 1438, 327, 328, 329,
	1218, 330, 331, 332, 1439, 1440, 1442, 1441, 1443, 1444,
	1445, 333, 334, 335, 336, 337, 0, 338, 340, 658,
	659, 1446, 343, 339, 341, 1447, 344, 342, 345, 1448,
	346, 347, 348, 1449, 1450, 349, 350, 351, 1451, 352,
	353, 354, 1452, 355, 356, 357, 1453, 358, 359, 660,
	360, 361, 362, 364, 366, 363, 365, 367, 368, 369,
	370, 661, 662, 371, 1454, 277, 1455, 0, 0, 0,
	0, 372, 373, 374, 663, 0, 0, 0, 375, 1456,
	376, 377, 378, 1457, 1458, 1219, 379, 380, 381, 664,
	665, 382, 383, 384, 385, 386, 387, 388, 389, 390,
	1459, 391, 666, 1460, 667, 392, 1461, 393, 394, 395,
	396, 397, 668, 669, 670, 483, 1221, 398, 399, 1462,
	400, 401, 402, 403, 404, 0, 0, 0, 278, 405,
	406, 407, 1463, 1220, 408, 671, 672, 1464, 673, 1465,
	409, 410, 1222, 674, 1223, 411, 412, 413, 1224, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 1466,
	421, 423, 422, 1467, 424, 675, 1225, 425, 426, 1226,
	1468, 427, 428, 429, 430, 431, 432, 435, 1469, 1470,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1227,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 478, 466, 467, 468, 1228, 477, 465, 1471,
	279, 1229, 479, 480, 481, 1472, 676, 482, 677, 484,
	485, 1473, 0, 486, 0, 1474, 1475, 488, 489, 490,
	1476, 1477, 491, 492, 678, 1230, 493, 1231, 679, 494,
	495, 487, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 1478, 505, 506, 680, 507, 508, 509, 681, 510,
	511, 512, 682, 513, 683, 514, 515, 1479, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 524, 684, 525,
	526, 528, 527, 529, 1480, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 536, 0, 537, 538,
	539, 540, 535, 541, 542, 543, 544, 545, 1481, 546,
	547, 548, 1232, 549, 550, 551, 552, 553, 685, 554,
	0, 555, 556, 562, 563, 564, 557, 558, 565, 566,
	567, 568, 569, 1482, 571, 572, 570, 573, 574, 575,
	1483, 576, 577, 559, 560, 578, 579, 1233, 580, 581,
	582, 583, 584, 585, 586, 686, 0, 587, 1484, 588,
	589, 590, 591, 593, 561, 594, 599, 600, 687, 595,
	596, 597, 598, 688, 602, 603, 1485, 604, 605, 0,
	601, 592, 1486, 606, 607, 608, 609, 610, 611, 612,
	613, 1487, 614, 689, 690, 691, 692, 1488, 623, 1489,
	615, 616, 617, 693, 618, 694, 1490, 619, 620, 621,
	622, 0, 624, 625, 1491, 1492, 626, 627, 628, 630,
	631, 629, 632, 1493, 633, 1494, 0, 634, 635, 636,
	695, 696, 697, 1495, 638, 637, 639, 640, 698, 641,
	642, 1496, 1497, 1498, 1499, 643, 644, 699, 645, 646,
	647, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1415, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4223,
	280, 282, 281, 283, 284, 285, 286, 1421, 287, 288,
	1422, 1423, 1424, 0, 1425, 648, 1426, 1427, 1428, 1429,
	289, 290, 1217, 291, 292, 293, 294, 295, 296, 649,
	650, 0, 297, 651, 298, 652, 1430, 653, 299, 300,
	301, 302, 303, 304, 1431, 1432, 0, 305, 654, 655,
	656, 1433, 306, 307, 657, 1434, 1501, 1435, 308, 309,
	310, 311, 312, 313, 314, 0, 1436, 316, 317, 318,
	315, 319, 1437, 320, 0, 321, 322, 323, 324, 325,
	326, 1438, 327, 328, 329, 1218, 330, 331, 332, 1439,
	1440, 1442, 1441, 1443, 1444, 1445, 333, 334, 335, 336,
	337, 0, 338, 340, 658, 659, 1446, 343, 339, 341,
	1447, 344, 342, 345, 1448, 346, 347, 348, 1449, 1450,
	349, 350, 351, 1451, 352, 353, 354, 1452, 355, 356,
	357, 1453, 358, 359, 660, 360, 361, 362, 364, 366,
	363, 365, 367, 368, 369, 370, 661, 662, 371, 1454,
	277, 1455, 0, 0, 0, 0, 372, 373, 374, 663,
	0, 0, 0, 375, 1456, 376, 377, 378, 1457, 1458,
	1219, 379, 380, 381, 664, 665, 382, 383, 384, 385,
	386, 387, 388, 389, 390, 1459, 391, 666, 1460, 667,
	392, 1461, 393, 394, 395, 396, 397, 668, 669, 670,
	483, 1221, 398, 399, 1462, 400, 401, 402, 403, 404,
	0, 0, 0, 278, 405, 406, 407, 1463, 1220, 408,
	671, 672, 1464, 673, 1465, 409, 410, 1222, 674, 1223,
	411, 412, 413, 1224, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 1466, 421, 423, 422, 1467, 424,
	675, 1225, 425, 426, 1226, 1468, 427, 428, 429, 430,
	431, 432, 435, 1469, 1470, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1227, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 478, 466, 467,
	468, 1228, 477, 465, 1471, 279, 1229, 479, 480, 481,
	1472, 676, 482, 677, 484, 485, 1473, 0, 486, 0,
	1474, 1475, 488, 489, 490, 1476, 1477, 491, 492, 678,
	1230, 493, 1231, 679, 494, 495, 487, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 1478, 505, 506, 680,
	507, 508, 509, 681, 510, 511, 512, 682, 513, 683,
	514, 515, 1479, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 524, 684, 525, 526, 528, 527, 529, 1480,
	530, 0, 531, 532, 533, 0, 0, 0, 0, 0,
	534, 536, 0, 537, 538, 539, 540, 535, 541, 542,
	543, 544, 545, 1481, 546, 547, 548, 1232, 549, 550,
	551, 552, 553, 685, 554, 0, 555, 556, 562, 563,
	564, 557, 558, 565, 566, 567, 568, 569, 1482, 571,
	572, 570, 573, 574, 575, 1483, 576, 577, 559, 560,
	578, 579, 1233, 580, 581, 582, 583, 584, 585, 586,
	686, 0, 587, 1484, 588, 589, 590, 591, 593, 561,
	594, 599, 600, 687, 595, 596, 597, 598, 688, 602,
	603, 1485, 604, 605, 0, 601, 592, 1486, 606, 607,
	608, 609, 610, 611, 612, 613, 1487, 614, 689, 690,
	691, 692, 1488, 623, 1489, 615, 616, 617, 693, 618,
	694, 1490, 619, 620, 621, 622, 0, 624, 625, 1491,
	1492, 626, 627, 628, 630, 631, 629, 632, 1493, 633,
	1494, 0, 634, 635, 636, 695, 696, 697, 1495, 638,
	637, 639, 640, 698, 641, 642, 1496, 1497, 1498, 1499,
	643, 644, 699, 645, 646, 647, 0, 0, 0, 0,
	0, 0, 1415, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4451, 280,
	282, 281, 283, 284, 285, 286, 1421, 287, 288, 1422,
	1423, 1424, 0, 1425, 648, 1426, 1427, 1428, 1429, 289,
	290, 1217, 291, 292, 293, 294, 295, 296, 649, 650,
	0, 297, 651, 298, 652, 1430, 653, 299, 300, 301,
	302, 303, 304, 1431, 1432, 0, 305, 654, 655, 656,
	1433, 306, 307, 657, 1434, 1501, 1435, 308, 309, 310,
	311, 312, 313, 314, 0, 1436, 316, 317, 318, 315,
	319, 1437, 320, 0, 321, 322, 323, 324, 325, 326,
	1438, 327, 328, 329, 1218, 330, 331, 332, 1439, 1440,
	1442, 1441, 1443, 1444, 1445, 333, 334, 335, 336, 337,
	0, 338, 340, 658, 659, 1446, 343, 339, 341, 1447,
	344, 342, 345, 1448, 346, 347, 348, 1449, 1450, 349,
	350, 351, 1451, 352, 353, 354, 1452, 355, 356, 357,
	1453, 358, 359, 660, 360, 361, 362, 364, 366, 363,
	365, 367, 368, 369, 370, 661, 662, 371, 1454, 277,
	1455, 0, 0, 0, 0, 372, 373, 374, 663, 0,
	0, 0, 375, 1456, 376, 377, 378, 1457, 1458, 1219,
	379, 380, 381, 664, 665, 382, 383, 384, 385, 386,
	387, 388, 389, 390, 1459, 391, 666, 1460, 667, 392,
	1461, 393, 394, 395, 396, 397, 668, 669, 670, 483,
	1221, 398, 399, 1462, 400, 401, 402, 403, 404, 0,
	0, 0, 278, 405, 406, 407, 1463, 1220, 408, 671,
	672, 1464, 673, 1465, 409, 410, 1222, 674, 1223, 411,
	412, 413, 1224, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 1466, 421, 423, 422, 1467, 424, 675,
	1225, 425, 426, 1226, 1468, 427, 428, 429, 430, 431,
	432, 435, 1469, 1470, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1227, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 478, 466, 467, 468,
	1228, 477, 465, 1471, 279, 1229, 479, 480, 481, 1472,
	676, 482, 677, 484, 485, 1473, 0, 486, 0, 1474,
	1475, 488, 489, 490, 1476, 1477, 491, 492, 678, 1230,
	493, 1231, 679, 494, 495, 487, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 1478, 505, 506, 680, 507,
	508, 509, 681, 510, 511, 512, 682, 513, 683, 514,
	515, 1479, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 524, 684, 525, 526, 528, 527, 529, 1480, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	536, 0, 537, 538, 539, 540, 535, 541, 542, 543,
	544, 545, 1481, 546, 547, 548, 1232, 549, 550, 551,
	552, 553, 685, 554, 0, 555, 556, 562, 563, 564,
	557, 558, 565, 566, 567, 568, 569, 1482, 571, 572,
	570, 573, 574, 575, 1483, 576, 577, 559, 560, 578,
	579, 1233, 580, 581, 582, 583, 584, 585, 586, 686,
	0, 587, 1484, 588, 589, 590, 591, 593, 561, 594,
	599, 600, 687, 595, 596, 597, 598, 688, 602, 603,
	1485, 604, 605, 0, 601, 592, 1486, 606, 607, 608,
	609, 610, 611, 612, 613, 1487, 614, 689, 690, 691,
	692, 1488, 623, 1489, 615, 616, 617, 693, 618, 694,
	1490, 619, 620, 621, 622, 0, 624, 625, 1491, 1492,
	626, 627, 628, 630, 631, 629, 632, 1493, 633, 1494,
	0, 634, 635, 636, 695, 696, 697, 1495, 638, 637,
	639, 640, 698, 641, 642, 1496, 1497, 1498, 1499, 643,
	644, 699, 645, 646, 647, 0, 0, 0, 0, 0,
	0, 1415, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4317, 280, 282,
	281, 283, 284, 285, 286, 1421, 287, 288, 1422, 1423,
	1424, 0, 1425, 648, 1426, 1427, 1428, 1429, 289, 290,
	1217, 291, 292, 293, 294, 295, 296, 649, 650, 0,
	297, 651, 298, 652, 1430, 653, 299, 300, 301, 302,
	303, 304, 1431, 1432, 0, 305, 654, 655, 656, 1433,
	306, 307, 657, 1434, 1501, 1435, 308, 309, 310, 311,
	312, 313, 314, 0, 1436, 316, 317, 318, 315, 319,
	1437, 320, 0, 321, 322, 323, 324, 325, 326, 1438,
	327, 328, 329, 1218, 330, 331, 332, 1439, 1440, 1442,
	1441, 1443, 1444, 1445, 333, 334, 335, 336, 337, 0,
	338, 340, 658, 659, 1446, 343, 339, 341, 1447, 344,
	342, 345, 1448, 346, 347, 348, 1449, 1450, 349, 350,
	351, 1451, 352, 353, 354, 1452, 355, 356, 357, 1453,
	358, 359, 660, 360, 361, 362, 364, 366, 363, 365,
	367, 368, 369, 370, 661, 662, 371, 1454, 277, 1455,
	0, 0, 0, 0, 372, 373, 374, 663, 0, 0,
	0, 375, 1456, 376, 377, 378, 1457, 1458, 1219, 379,
	380, 381, 664, 665, 382, 383, 384, 385, 386, 387,
	388, 389, 390, 1459, 391, 666, 1460, 667, 392, 1461,
	393, 394, 395, 396, 397, 668, 669, 670, 483, 1221,
	398, 399, 1462, 400, 401, 402, 403, 404, 0, 0,
	0, 278, 405, 406, 407, 1463, 1220, 408, 671, 672,
	1464, 673, 1465, 409, 410, 1222, 674, 1223, 411, 412,
	413, 1224, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 1466, 421, 423, 422, 1467, 424, 675, 1225,
	425, 426, 1226, 1468, 427, 428, 429, 430, 431, 432,
	435, 1469, 1470, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1227, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 478, 466, 467, 468, 1228,
	477, 465, 1471, 279, 1229, 479, 480, 481, 1472, 676,
	482, 677, 484, 485, 1473, 0, 486, 0, 1474, 1475,
	488, 489, 490, 1476, 1477, 491, 492, 678, 1230, 493,
	1231, 679, 494, 495, 487, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 1478, 505, 506, 680, 507, 508,
	509, 681, 510, 511, 512, 682, 513, 683, 514, 515,
	1479, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	524, 684, 525, 526, 528, 527, 529, 1480, 530, 0,
	531, 532, 533, 0, 0, 0, 0, 0, 534, 536,
	0, 537, 538, 539, 540, 535, 541, 542, 543, 544,
	545, 1481, 546, 547, 548, 1232, 549, 550, 551, 552,
	553, 685, 554, 0, 555, 556, 562, 563, 564, 557,
	558, 565, 566, 567, 568, 569, 1482, 571, 572, 570,
	573, 574, 575, 1483, 576, 577, 559, 560, 578, 579,
	1233, 580, 581, 582, 583, 584, 585, 586, 686, 0,
	587, 1484, 588, 589, 590, 591, 593, 561, 594, 599,
	600, 687, 595, 596, 597, 598, 688, 602, 603, 1485,
	604, 605, 0, 601, 592, 1486, 606, 607, 608, 609,
	610, 611, 612, 613, 1487, 614, 689, 690, 691, 692,
	1488, 623, 1489, 615, 616, 617, 693, 618, 694, 1490,
	619, 620, 621, 622, 0, 624, 625, 1491, 1492, 626,
	627, 628, 630, 631, 629, 632, 1493, 633, 1494, 0,
	634, 635, 636, 695, 696, 697, 1495, 638, 637, 639,
	640, 698, 641, 642, 1496, 1497, 1498, 1499, 643, 644,
	699, 645, 646, 647, 0, 0, 0, 0, 0, 0,
	1415, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4153, 280, 282, 281,
	283, 284, 285, 286, 1421, 287, 288, 1422, 1423, 1424,
	0, 1425, 648, 1426, 1427, 1428, 1429, 289, 290, 1217,
	291, 292, 293, 294, 295, 296, 649, 650, 0, 297,
	651, 298, 652, 1430, 653, 299, 300, 301, 302, 303,
	304, 1431, 1432, 0, 305, 654, 655, 656, 1433, 306,
	307, 657, 1434, 1501, 1435, 308, 309, 310, 311, 312,
	313, 314, 0, 1436, 316, 317, 318, 315, 319, 1437,
	320, 0, 321, 322, 323, 324, 325, 326, 1438, 327,
	328, 329, 1218, 330, 331, 332, 1439, 1440, 1442, 1441,
	1443, 1444, 1445, 333, 334, 335, 336, 337, 0, 338,
	340, 658, 659, 1446, 343, 339, 341, 1447, 344, 342,
	345, 1448, 346, 347, 348, 1449, 1450, 349, 350, 351,
	1451, 352, 353, 354, 1452, 355, 356, 357, 1453, 358,
	359, 660, 360, 361, 362, 364, 366, 363, 365, 367,
	368, 369, 370, 661, 662, 371, 1454, 277, 1455, 0,
	0, 0, 0, 372, 373, 374, 663, 0, 0, 0,
	375, 1456, 376, 377, 378, 1457, 1458, 1219, 379, 380,
	381, 664, 665, 382, 383, 384, 385, 386, 387, 388,
	389, 390, 1459, 391, 666, 1460, 667, 392, 1461, 393,
	394, 395, 396, 397, 668, 669, 670, 483, 1221, 398,
	399, 1462, 400, 401, 402, 403, 404, 0, 0, 0,
	278, 405, 406, 407, 1463, 1220, 408, 671, 672, 1464,
	673, 1465, 409, 410, 1222, 674, 1223, 411, 412, 413,
	1224, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 1466, 421, 423, 422, 1467, 424, 675, 1225, 425,
	426, 1226, 1468, 427, 428, 429, 430, 431, 432, 435,
	1469, 1470, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1227, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 478, 466, 467, 468, 1228, 477,
	465, 1471, 279, 1229, 479, 480, 481, 1472, 676, 482,
	677, 484, 485, 1473, 0, 486, 0, 1474, 1475, 488,
	489, 490, 1476, 1477, 491, 492, 678, 1230, 493, 1231,
	679, 494, 495, 487, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 1478, 505, 506, 680, 507, 508, 509,
	681, 510, 511, 512, 682, 513, 683, 514, 515, 1479,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 524,
	684, 525, 526, 528, 527, 529, 1480, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 536, 0,
	537, 538, 539, 540, 535, 541, 542, 543, 544, 545,
	1481, 546, 547, 548, 1232, 549, 550, 551, 552, 553,
	685, 554, 0, 555, 556, 562, 563, 564, 557, 558,
	565, 566, 567, 568, 569, 1482, 571, 572, 570, 573,
	574, 575, 1483, 576, 577, 559, 560, 578, 579, 1233,
	580, 581, 582, 583, 584, 585, 586, 686, 0, 587,
	1484, 588, 589, 590, 591, 593, 561, 594, 599, 600,
	687, 595, 596, 597, 598, 688, 602, 603, 1485, 604,
	605, 0, 601, 592, 1486, 606, 607, 608, 609, 610,
	611, 612, 613, 1487, 614, 689, 690, 691, 692, 1488,
	623, 1489, 615, 616, 617, 693, 618, 694, 1490, 619,
	620, 621, 622, 0, 624, 625, 1491, 1492, 626, 627,
	628, 630, 631, 629, 632, 1493, 633, 1494, 0, 634,
	635, 636, 695, 696, 697, 1495, 638, 637, 639, 640,
	698, 641, 642, 1496, 1497, 1498, 1499, 643, 644, 699,
	645, 646, 647, 0, 0, 0, 0, 0, 0, 1415,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3827, 280, 282, 281, 283,
	284, 285, 286, 1421, 287, 288, 1422, 1423, 1424, 0,
	1425, 648, 1426, 1427, 1428, 1429, 289, 290, 1217, 291,
	292, 293, 294, 295, 296, 649, 650, 0, 297, 651,
	298, 652, 1430, 653, 299, 300, 301, 302, 303, 304,
	1431, 1432, 0, 305, 654, 655, 656, 1433, 306, 307,
	657, 1434, 1501, 1435, 308, 309, 310, 311, 312, 313,
	314, 0, 1436, 316, 317, 318, 315, 319, 1437, 320,
	0, 321, 322, 323, 324, 325, 326, 1438, 327, 328,
	329, 1218, 330, 331, 332, 1439, 1440, 1442, 1441, 1443,
	1444, 1445, 333, 334, 335, 336, 337, 0, 338, 340,
	658, 659, 1446, 343, 339, 341, 1447, 344, 342, 345,
	1448, 346, 347, 348, 1449, 1450, 349, 350, 351, 1451,
	352, 353, 354, 1452, 355, 356, 357, 1453, 358, 359,
	660, 360, 361, 362, 364, 366, 363, 365, 367, 368,
	369, 370, 661, 662, 371, 1454, 277, 1455, 0, 0,
	0, 0, 372, 373, 374, 663, 0, 0, 0, 375,
	1456, 376, 377, 378, 1457, 1458, 1219, 379, 380, 381,
	664, 665, 382, 383, 384, 385, 386, 387, 388, 389,
	390, 1459, 391, 666, 1460, 667, 392, 1461, 393, 394,
	395, 396, 397, 668, 669, 670, 483, 1221, 398, 399,
	1462, 400, 401, 402, 403, 404, 0, 0, 0, 278,
	405, 406, 407, 1463, 1220, 408, 671, 672, 1464, 673,
	1465, 409, 410, 1222, 674, 1223, 411, 412, 413, 1224,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	1466, 421, 423, 422, 1467, 424, 675, 1225, 425, 426,
	1226, 1468, 427, 428, 429, 430, 431, 432, 435, 1469,
	1470, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1227, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 478, 466, 467, 468, 1228, 477, 465,
	1471, 279, 1229, 479, 480, 481, 1472, 676, 482, 677,
	484, 485, 1473, 0, 486, 0, 1474, 1475, 488, 489,
	490, 1476, 1477, 491, 492, 678, 1230, 493, 1231, 679,
	494, 495, 487, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 1478, 505, 506, 680, 507, 508, 509, 681,
	510, 511, 512, 682, 513, 683, 514, 515, 1479, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 524, 684,
	525, 526, 528, 527, 529, 1480, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 536, 0, 537,
	538, 539, 540, 535, 541, 542, 543, 544, 545, 1481,
	546, 547, 548, 1232, 549, 550, 551, 552, 553, 685,
	554, 0, 555, 556, 562, 563, 564, 557, 558, 565,
	566, 567, 568, 569, 1482, 571, 572, 570, 573, 574,
	575, 1483, 576, 577, 559, 560, 578, 579, 1233, 580,
	581, 582, 583, 584, 585, 586, 686, 0, 587, 1484,
	588, 589, 590, 591, 593, 561, 594, 599, 600, 687,
	595, 596, 597, 598, 688, 602, 603, 1485, 604, 605,
	0, 601, 592, 1486, 606, 607, 608, 609, 610, 611,
	612, 613, 1487, 614, 689, 690, 691, 692, 1488, 623,
	1489, 615, 616, 617, 693, 618, 694, 1490, 619, 620,
	621, 622, 0, 624, 625, 1491, 1492, 626, 627, 628,
	630, 631, 629, 632, 1493, 633, 1494, 0, 634, 635,
	636, 695, 696, 697, 1495, 638, 637, 639, 640, 698,
	641, 642, 1496, 1497, 1498, 1499, 643, 644, 699, 645,
	646, 647, 0, 0, 0, 0, 0, 0, 1415, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3645, 280, 282, 281, 283, 284,
	285, 286, 1421, 287, 288, 1422, 1423, 1424, 0, 1425,
	648, 1426, 1427, 1428, 1429, 289, 290, 1217, 291, 292,
	293, 294, 295, 296, 649, 650, 0, 297, 651, 298,
	652, 1430, 653, 299, 300, 301, 302, 303, 304, 1431,
	1432, 0, 305, 654, 655, 656, 1433, 306, 307, 657,
	1434, 1501, 1435, 308, 309, 310, 311, 312, 313, 314,
	0, 1436, 316, 317, 318, 315, 319, 1437, 320, 0,
	321, 322, 323, 324, 325, 326, 1438, 327, 328, 329,
	1218, 330, 331, 332, 1439, 1440, 1442, 1441, 1443, 1444,
	1445, 333, 334, 335, 336, 337, 0, 338, 340, 658,
	659, 1446, 343, 339, 341, 1447, 344, 342, 345, 1448,
	346, 347, 348, 1449, 1450, 349, 350, 351, 1451, 352,
	353, 354, 1452, 355, 356, 357, 1453, 358, 359, 660,
	360, 361, 362, 364, 366, 363, 365, 367, 368, 369,
	370, 661, 662, 371, 1454, 277, 1455, 0, 0, 0,
	0, 372, 373, 374, 663, 0, 0, 0, 375, 1456,
	376, 377, 378, 1457, 1458, 1219, 379, 380, 381, 664,
	665, 382, 383, 384, 385, 386, 387, 388, 389, 390,
	1459, 391, 666, 1460, 667, 392, 1461, 393, 394, 395,
	396, 397, 668, 669, 670, 483, 1221, 398, 399, 1462,
	400, 401, 402, 403, 404, 0, 0, 0, 278, 405,
	406, 407, 1463, 1220, 408, 671, 672, 1464, 673, 1465,
	409, 410, 1222, 674, 1223, 411, 412, 413, 1224, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 1466,
	421, 423, 422, 1467, 424, 675, 1225, 425, 426, 1226,
	1468, 427, 428, 429, 430, 431, 432, 435, 1469, 1470,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1227,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 478, 466, 467, 468, 1228, 477, 465, 1471,
	279, 1229, 479, 480, 481, 1472, 676, 482, 677, 484,
	485, 1473, 0, 486, 0, 1474, 1475, 488, 489, 490,
	1476, 1477, 491, 492, 678, 1230, 493, 1231, 679, 494,
	495, 487, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 1478, 505, 506, 680, 507, 508, 509, 681, 510,
	511, 512, 682, 513, 683, 514, 515, 1479, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 524, 684, 525,
	526, 528, 527, 529, 1480, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 536, 0, 537, 538,
	539, 540, 535, 541, 542, 543, 544, 545, 1481, 546,
	547, 548, 1232, 549, 550, 551, 552, 553, 685, 554,
	0, 555, 556, 562, 563, 564, 557, 558, 565, 566,
	567, 568, 569, 1482, 571, 572, 570, 573, 574, 575,
	1483, 576, 577, 559, 560, 578, 579, 1233, 580, 581,
	582, 583, 584, 585, 586, 686, 0, 587, 1484, 588,
	589, 590, 591, 593, 561, 594, 599, 600, 687, 595,
	596, 597, 598, 688, 602, 603, 1485, 604, 605, 0,
	601, 592, 1486, 606, 607, 608, 609, 610, 611, 612,
	613, 1487, 614, 689, 690, 691, 692, 1488, 623, 1489,
	615, 616, 617, 693, 618, 694, 1490, 619, 620, 621,
	622, 0, 624, 625, 1491, 1492, 626, 627, 628, 630,
	631, 629, 632, 1493, 633, 1494, 0, 634, 635, 636,
	695, 696, 697, 1495, 638, 637, 639, 640, 698, 641,
	642, 1496, 1497, 1498, 1499, 643, 644, 699, 645, 646,
	647, 0, 0, 0, 0, 0, 0, 1415, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2665, 280, 282, 281, 283, 284, 285,
	286, 1421, 287, 288, 1422, 1423, 1424, 0, 1425, 648,
	1426, 1427, 1428, 1429, 289, 290, 1217, 291, 292, 293,
	294, 295, 296, 649, 650, 0, 297, 651, 298, 652,
	1430, 653, 299, 300, 301, 302, 303, 304, 1431, 1432,
	0, 305, 654, 655, 656, 1433, 306, 307, 657, 1434,
	1501, 1435, 308, 309, 310, 311, 312, 313, 314, 0,
	1436, 316, 317, 318, 315, 319, 1437, 320, 0, 321,
	322, 323, 324, 325, 326, 1438, 327, 328, 329, 1218,
	330, 331, 332, 1439, 1440, 1442, 1441, 1443, 1444, 1445,
	333, 334, 335, 336, 337, 0, 338, 340, 658, 659,
	1446, 343, 339, 341, 1447, 344, 342, 345, 1448, 346,
	347, 348, 1449, 1450, 349, 350, 351, 1451, 352, 353,
	354, 1452, 355, 356, 357, 1453, 358, 359, 660, 360,
	361, 362, 364, 366, 363, 365, 367, 368, 369, 370,
	661, 662, 371, 1454, 277, 1455, 0, 0, 0, 0,
	372, 373, 374, 663, 0, 0, 0, 375, 1456, 376,
	377, 378, 1457, 1458, 1219, 379, 380, 381, 664, 665,
	382, 383, 384, 385, 386, 387, 388, 389, 390, 1459,
	391, 666, 1460, 667, 392, 1461, 393, 394, 395, 396,
	397, 668, 669, 670, 483, 1221, 398, 399, 1462, 400,
	401, 402, 403, 404, 0, 0, 0, 278, 405, 406,
	407, 1463, 1220, 408, 671, 672, 1464, 673, 1465, 409,
	410, 1222, 674, 1223, 411, 412, 413, 1224, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 1466, 421,
	423, 422, 1467, 424, 675, 1225, 425, 426, 1226, 1468,
	427, 428, 429, 430, 431, 432, 435, 1469, 1470, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1227, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 478, 466, 467, 468, 1228, 477, 465, 1471, 279,
	1229, 479, 480, 481, 1472, 676, 482, 677, 484, 485,
	1473, 0, 486, 0, 1474, 1475, 488, 489, 490, 1476,
	1477, 491, 492, 678, 1230, 493, 1231, 679, 494, 495,
	487, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	1478, 505, 506, 680, 507, 508, 509, 681, 510, 511,
	512, 682, 513, 683, 514, 515, 1479, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 524, 684, 525, 526,
	528, 527, 529, 1480, 530, 0, 531, 532, 533, 0,
	0, 0, 0, 0, 534, 536, 0, 537, 538, 539,
	540, 535, 541, 542, 543, 544, 545, 1481, 546, 547,
	548, 1232, 549, 550, 551, 552, 553, 685, 554, 0,
	555, 556, 562, 563, 564, 557, 558, 565, 566, 567,
	568, 569, 1482, 571, 572, 570, 573, 574, 575, 1483,
	576, 577, 559, 560, 578, 579, 1233, 580, 581, 582,
	583, 584, 585, 586, 686, 0, 587, 1484, 588, 589,
	590, 591, 593, 561, 594, 599, 600, 687, 595, 596,
	597, 598, 688, 602, 603, 1485, 604, 605, 0, 601,
	592, 1486, 606, 607, 608, 609, 610, 611, 612, 613,
	1487, 614, 689, 690, 691, 692, 1488, 623, 1489, 615,
	616, 617, 693, 618, 694, 1490, 619, 620, 621, 622,
	0, 624, 625, 1491, 1492, 626, 627, 628, 630, 631,
	629, 632, 1493, 633, 1494, 0, 634, 635, 636, 695,
	696, 697, 1495, 638, 637, 639, 640, 698, 641, 642,
	1496, 1497, 1498, 1499, 643, 644, 699, 645, 646, 647,
	0, 0, 0, 0, 1412, 0, 1415, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2289, 280, 282, 281, 283, 284, 285, 286,
	1421, 287, 288, 1422, 1423, 1424, 0, 1425, 648, 1426,
	1427, 1428, 1429, 289, 290, 1217, 291, 292, 293, 294,
	295, 296, 649, 650, 0, 297, 651, 298, 652, 1430,
	653, 299, 300, 301, 302, 303, 304, 1431, 1432, 0,
	305, 654, 655, 656, 1433, 306, 307, 657, 1434, 1501,
	1435, 308, 309, 310, 311, 312, 313, 314, 0, 1436,
	316, 317, 318, 315, 319, 1437, 320, 0, 321, 322,
	323, 324, 325, 326, 1438, 327, 328, 329, 1218, 330,
	331, 332, 1439, 1440, 1442, 1441, 1443, 1444, 1445, 333,
	334, 335, 336, 337, 0, 338, 340, 658, 659, 1446,
	343, 339, 341, 1447, 344, 342, 345, 1448, 346, 347,
	348, 1449, 1450, 349, 350, 351, 1451, 352, 353, 354,
	1452, 355, 356, 357, 1453, 358, 359, 660, 360, 361,
	362, 364, 366, 363, 365, 367, 368, 369, 370, 661,
	662, 371, 1454, 277, 1455, 0, 0, 0, 0, 372,
	373, 374, 663, 0, 0, 0, 375, 1456, 376, 377,
	378, 1457, 1458, 1219, 379, 380, 381, 664, 665, 382,
	383, 384, 385, 386, 387, 388, 389, 390, 1459, 391,
	666, 1460, 667, 392, 1461, 393, 394, 395, 396, 397,
	668, 669, 670, 483, 1221, 398, 399, 1462, 400, 401,
	402, 403, 404, 0, 0, 0, 278, 405, 406, 407,
	1463, 1220, 408, 671, 672, 1464, 673, 1465, 409, 410,
	1222, 674, 1223, 411, 412, 413, 1224, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 1466, 421, 423,
	422, 1467, 424, 675, 1225, 425, 426, 1226, 1468, 427,
	428, 429, 430, 431, 432, 435, 1469, 1470, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1227, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	478, 466, 467, 468, 1228, 477, 465, 1471, 279, 1229,
	479, 480, 481, 1472, 676, 482, 677, 484, 485, 1473,
	0, 486, 0, 1474, 1475, 488, 489, 490, 1476, 1477,
	491, 492, 678, 1230, 493, 1231, 679, 494, 495, 487,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 1478,
	505, 506, 680, 507, 508, 509, 681, 510, 511, 512,
	682, 513, 683, 514, 515, 1479, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 524, 684, 525, 526, 528,
	527, 529, 1480, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 536, 0, 537, 538, 539, 540,
	535, 541, 542, 543, 544, 545, 1481, 546, 547, 548,
	1232, 549, 550, 551, 552, 553, 685, 554, 0, 555,
	556, 562, 563, 564, 557, 558, 565, 566, 567, 568,
	569, 1482, 571, 572, 570, 573, 574, 575, 1483, 576,
	577, 559, 560, 578, 579, 1233, 580, 581, 582, 583,
	584, 585, 586, 686, 0, 587, 1484, 588, 589, 590,
	591, 593, 561, 594, 599, 600, 687, 595, 596, 597,
	598, 688, 602, 603, 1485, 604, 605, 0, 601, 592,
	1486, 606, 607, 608, 609, 610, 611, 612, 613, 1487,
	614, 689, 690, 691, 692, 1488, 623, 1489, 615, 616,
	617, 693, 618, 694, 1490, 619, 620, 621, 622, 0,
	624, 625, 1491, 1492, 626, 627, 628, 630, 631, 629,
	632, 1493, 633, 1494, 0, 634, 635, 636, 695, 696,
	697, 1495, 638, 637, 639, 640, 698, 641, 642, 1496,
	1497, 1498, 1499, 643, 644, 699, 645, 646, 647, 1415,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 1421, 287, 288, 1422, 1423, 1424, 0,
	1425, 648, 1426, 1427, 1428, 1429, 289, 290, 1217, 291,
	292, 293, 294, 295, 296, 649, 650, 0, 297, 651,
	298, 652, 1430, 653, 299, 300, 301, 302, 303, 304,
	1431, 1432, 0, 305, 654, 655, 656, 1433, 306, 307,
	657, 1434, 1501, 1435, 308, 309, 310, 311, 312, 313,
	314, 0, 1436, 316, 317, 318, 315, 319, 1437, 320,
	0, 321, 322, 323, 324, 325, 326, 1438, 327, 328,
	329, 1218, 330, 331, 332, 1439, 1440, 1442, 1441, 1443,
	1444, 1445, 333, 334, 335, 336, 337, 0, 338, 340,
	658, 659, 1446, 343, 339, 341, 1447, 344, 342, 345,
	1448, 346, 347, 348, 1449, 1450, 349, 350, 351, 1451,
	352, 353, 354, 1452, 355, 356, 357, 1453, 358, 359,
	660, 360, 361, 362, 364, 366, 363, 365, 367, 368,
	369, 370, 661, 662, 371, 1454, 277, 1455, 0, 0,
	0, 0, 372, 373, 374, 663, 0, 0, 0, 375,
	1456, 376, 377, 378, 1457, 1458, 1219, 379, 380, 381,
	664, 665, 382, 383, 384, 385, 386, 387, 388, 389,
	390, 1459, 391, 666, 1460, 667, 392, 1461, 393, 394,
	395, 396, 397, 668, 669, 670, 483, 1221, 398, 399,
	1462, 400, 401, 402, 403, 404, 0, 0, 0, 278,
	405, 406, 407, 1463, 1220, 408, 671, 672, 1464, 673,
	1465, 409, 410, 1222, 674, 1223, 411, 412, 413, 1224,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	1466, 421, 423, 422, 1467, 424, 675, 1225, 425, 426,
	1226, 1468, 427, 428, 429, 430, 431, 432, 435, 1469,
	1470, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1227, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 478, 466, 467, 468, 1228, 477, 465,
	1471, 279, 1229, 479, 480, 481, 1472, 676, 482, 677,
	484, 485, 1473, 0, 486, 0, 1474, 1475, 488, 489,
	490, 1476, 1477, 491, 492, 678, 1230, 493, 1231, 679,
	494, 495, 487, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 1478, 505, 506, 680, 507, 508, 509, 681,
	510, 511, 512, 682, 513, 683, 514, 515, 1479, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 524, 684,
	525, 526, 528, 527, 529, 1480, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 536, 0, 537,
	538, 539, 540, 535, 541, 542, 543, 544, 545, 1481,
	546, 547, 548, 1232, 549, 550, 551, 552, 553, 685,
	554, 0, 555, 556, 562, 563, 564, 557, 558, 565,
	566, 567, 568, 569, 1482, 571, 572, 570, 573, 574,
	575, 1483, 576, 577, 559, 560, 578, 579, 1233, 580,
	581, 582, 583, 584, 585, 586, 686, 0, 587, 1484,
	588, 589, 590, 591, 593, 561, 594, 599, 600, 687,
	595, 596, 597, 598, 688, 602, 603, 1485, 604, 605,
	0, 601, 592, 1486, 606, 607, 608, 609, 610, 611,
	612, 613, 1487, 614, 689, 690, 691, 692, 1488, 623,
	1489, 615, 616, 617, 693, 618, 694, 1490, 619, 620,
	621, 622, 0, 624, 625, 1491, 1492, 626, 627, 628,
	630, 631, 629, 632, 1493, 633, 1494, 0, 634, 635,
	636, 695, 696, 697, 1495, 638, 637, 639, 640, 698,
	641, 642, 1496, 1497, 1498, 1499, 643, 644, 699, 645,
	646, 647, 2640, 0, 1153, 1125, 1126, 1127, 1123, 1124,
	1136, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 2637, 287,
	288, 0, 0, 0, 0, 0, 1177, 1141, 0, 0,
	0, 289, 290, 1217, 291, 292, 293, 294, 295, 296,
	649, 1190, 0, 297, 1197, 298, 1196, 0, 1207, 299,
	300, 301, 302, 303, 304, 1143, 1176, 1108, 305, 1237,
	1238, 656, 0, 306, 307, 1183, 0, 1164, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1218, 330, 331, 332,
	1167, 1165, 1166, 1173, 1169, 1168, 1172, 333, 334, 335,
	336, 337, 1200, 338, 340, 1194, 1193, 1113, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 2638,
	0, 349, 1185, 351, 0, 352, 353, 354, 0, 355,
	356, 357, 0, 358, 359, 1119, 360, 361, 362, 364,
	366, 363, 365, 367, 368, 369, 370, 1208, 1209, 371,
	1132, 277, 0, 0, 0, 0, 0, 372, 373, 374,
	1192, 0, 0, 0, 375, 0, 376, 377, 378, 0,
	0, 1219, 379, 380, 381, 1205, 1206, 382, 383, 384,
	385, 386, 387, 388, 389, 390, 0, 391, 1215, 0,
	1142, 392, 0, 393, 394, 395, 396, 397, 1178, 1179,
	1182, 483, 1221, 398, 399, 0, 400, 401, 402, 403,
	404, 0, 0, 0, 278, 405, 406, 407, 0, 1220,
	408, 1187, 1188, 0, 1148, 0, 409, 410, 1222, 1180,
	1223, 411, 412, 413, 1224, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 1216, 1225, 425, 426, 1226, 0, 427, 428, 429,
	430, 431, 432, 435, 1171, 1170, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1227, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 478, 466,
	467, 468, 1228, 477, 465, 1110, 279, 1229, 479, 480,
	481, 1133, 1181, 482, 1195, 484, 485, 0, 0, 486,
	0, 0, 0, 488, 489, 490, 0, 0, 491, 492,
	678, 1230, 493, 1231, 1210, 494, 495, 1120, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 0, 505, 506,
	680, 507, 508, 509, 681, 510, 511, 512, 1211, 513,
	683, 514, 515, 0, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 524, 1191, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 536, 0, 537, 538, 539, 540, 535, 541,
	542, 543, 544, 545, 0, 546, 547, 548, 1232, 549,
	550, 551, 552, 553, 1121, 554, 0, 555, 556, 562,
	563, 564, 557, 558, 565, 566, 567, 568, 569, 0,
	571, 572, 570, 573, 574, 575, 1174, 576, 577, 559,
	560, 578, 579, 1233, 580, 581, 582, 583, 584, 585,
	586, 1189, 0, 587, 0, 588, 589, 590, 591, 593,
	561, 594, 599, 600, 1236, 595, 596, 597, 598, 1212,
	602, 603, 0, 604, 605, 1107, 601, 592, 0, 606,
	607, 608, 609, 610, 611, 612, 613, 0, 614, 1201,
	1202, 1203, 1204, 0, 623, 0, 615, 616, 617, 1213,
	618, 1214, 1131, 619, 620, 621, 622, 0, 624, 625,
	0, 1114, 626, 627, 628, 630, 631, 629, 632, 1175,
	633, 0, 0, 634, 635, 636, 695, 1198, 1235, 2636,
	638, 637, 639, 640, 698, 641, 642, 0, 0, 0,
	0, 643, 644, 699, 645, 646, 647, 1111, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1106, 0, 0, 0, 0, 0, 0, 1104, 1105, 2639,
	0, 0, 0, 0, 0, 0, 0, 1137, 2635, 0,
	1097, 1135, 1153, 1125, 1126, 1127, 1123, 1124, 1136, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 1177, 1141, 0, 0, 0, 289,
	290, 1217, 291, 292, 293, 294, 295, 296, 649, 1190,
	0, 297, 1197, 298, 1196, 0, 1207, 299, 300, 301,
	302, 303, 304, 1143, 1176, 1108, 305, 1237, 1238, 656,
	0, 306, 307, 1183, 0, 1164, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1218, 330, 331, 332, 1167, 1165,
	1166, 1173, 1169, 1168, 1172, 333, 334, 335, 336, 337,
	1200, 338, 340, 1194, 1193, 1113, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	1185, 351, 0, 352, 353, 354, 0, 355, 356, 357,
	0, 358, 359, 1119, 360, 361, 362, 364, 366, 363,
	365, 367, 368, 369, 370, 1208, 1209, 371, 1132, 277,
	0, 0, 0, 0, 0, 372, 373, 374, 1192, 0,
	0, 0, 375, 0, 376, 377, 378, 0, 0, 1219,
	379, 380, 381, 1205, 1206, 382, 383, 384, 385, 386,
	387, 388, 389, 390, 0, 391, 1215, 0, 1142, 392,
	0, 393, 394, 395, 396, 397, 1178, 1179, 1182, 483,
	1221, 398, 399, 0, 400, 401, 402, 403, 404, 0,
	0, 0, 278, 405, 406, 407, 0, 1220, 408, 1187,
	1188, 0, 1148, 0, 409, 410, 1222, 1180, 1223, 411,
	412, 413, 1224, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 1216,
	1225, 425, 426, 1226, 0, 427, 428, 429, 430, 431,
	432, 435, 1171, 1170, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1227, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 478, 466, 467, 468,
	1228, 477, 465, 1110, 279, 1229, 479, 480, 481, 1133,
	1181, 482, 1195, 484, 485, 0, 0, 486, 0, 0,
	0, 488, 489, 490, 0, 0, 491, 492, 678, 1230,
	493, 1231, 1210, 494, 495, 1120, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 0, 505, 506, 680, 507,
	508, 509, 681, 510, 511, 512, 1211, 513, 683, 514,
	515, 0, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 524, 1191, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	536, 0, 537, 538, 539, 540, 535, 541, 542, 543,
	544, 545, 0, 546, 547, 548, 1232, 549, 550, 551,
	552, 553, 1121, 554, 0, 555, 556, 562, 563, 564,
	557, 558, 565, 566, 567, 568, 569, 239, 571, 572,
	570, 573, 574, 575, 1174, 576, 577, 559, 560, 578,
	579, 1233, 580, 581, 582, 583, 584, 585, 586, 1189,
	0, 587, 0, 588, 589, 590, 591, 593, 561, 594,
	599, 600, 1236, 595, 596, 597, 598, 1212, 602, 603,
	0, 604, 605, 1107, 601, 592, 241, 606, 607, 608,
	609, 610, 611, 612, 613, 0, 614, 1201, 1202, 1203,
	1204, 0, 623, 0, 615, 616, 617, 1213, 618, 1214,
	1131, 619, 620, 621, 622, 0, 624, 625, 0, 1114,
	626, 627, 628, 630, 631, 629, 632, 1175, 633, 0,
	0, 634, 635, 636, 1651, 1198, 1235, 0, 638, 637,
	639, 640, 698, 641, 642, 0, 0, 0, 233, 643,
	644, 699, 645, 646, 647, 1111, 0, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1106, 0,
	0, 0, 0, 0, 0, 1104, 1105, 1153, 1125, 1126,
	1127, 1123, 1124, 1136, 0, 1912, 1910, 0, 0, 1135,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 1177,
	1141, 0, 0, 0, 289, 290, 1217, 291, 292, 293,
	294, 295, 296, 649, 1190, 0, 297, 1197, 298, 1196,
	0, 1207, 299, 300, 301, 302, 303, 304, 1143, 1176,
	1108, 305, 1237, 1238, 656, 0, 306, 307, 1183, 0,
	1164, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1218,
	330, 331, 332, 1167, 1165, 1166, 1173, 1169, 1168, 1172,
	333, 334, 335, 336, 337, 1200, 338, 340, 1194, 1193,
	1113, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 1185, 351, 0, 352, 353,
	354, 0, 355, 356, 357, 0, 358, 359, 1119, 360,
	361, 362, 364, 366, 363, 365, 367, 368, 369, 370,
	1208, 1209, 371, 1132, 277, 0, 0, 0, 0, 0,
	372, 373, 374, 1192, 0, 0, 0, 375, 0, 376,
	377, 378, 0, 0, 1219, 379, 380, 381, 1205, 1206,
	382, 383, 384, 385, 386, 387, 388, 389, 390, 0,
	391, 1215, 0, 1142, 392, 0, 393, 394, 395, 396,
	397, 1178, 1179, 1182, 483, 1221, 398, 399, 0, 400,
	401, 402, 403, 404, 0, 0, 0, 278, 405, 406,
	407, 0, 1220, 408, 1187, 1188, 0, 1148, 0, 409,
	410, 1222, 1180, 1223, 411, 412, 413, 1224, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 1216, 1225, 425, 426, 1226, 0,
	427, 428, 429, 430, 431, 432, 435, 1171, 1170, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1227, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 478, 466, 467, 468, 1228, 477, 465, 1110, 279,
	1229, 479, 480, 481, 1133, 1181, 482, 1195, 484, 485,
	0, 0, 486, 0, 0, 0, 488, 489, 490, 0,
	0, 491, 492, 678, 1230, 493, 1231, 1210, 494, 495,
	1120, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	0, 505, 506, 680, 507, 508, 509, 681, 510, 511,
	512, 1211, 513, 683, 514, 515, 0, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 524, 1191, 525, 526,
	528, 527, 529, 0, 530, 0, 531, 532, 533, 0,
	0, 0, 0, 0, 534, 536, 0, 537, 538, 539,
	540, 535, 541, 542, 543, 544, 545, 0, 546, 547,
	548, 1232, 549, 550, 551, 552, 553, 1121, 554, 0,
	555, 556, 562, 563, 564, 557, 558, 565, 566, 567,
	568, 569, 239, 571, 572, 570, 573, 574, 575, 1174,
	576, 577, 559, 560, 578, 579, 1233, 580, 581, 582,
	583, 584, 585, 586, 1189, 0, 587, 0, 588, 589,
	590, 591, 593, 561, 594, 599, 600, 1236, 595, 596,
	597, 598, 1212, 602, 603, 0, 604, 605, 1107, 601,
	592, 241, 606, 607, 608, 609, 610, 611, 612, 613,
	0, 614, 1201, 1202, 1203, 1204, 0, 623, 0, 615,
	616, 617, 1213, 618, 1214, 1131, 619, 620, 621, 622,
	0, 624, 625, 0, 1114, 626, 627, 628, 630, 631,
	629, 632, 1175, 633, 0, 0, 634, 635, 636, 1651,
	1198, 1235, 0, 638, 637, 639, 640, 698, 641, 642,
	0, 0, 0, 233, 643, 644, 699, 645, 646, 647,
	1111, 0, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1106, 0, 0, 0, 0, 0, 0,
	1104, 1105, 1153, 1125, 1126, 1127, 1123, 1124, 1136, 0,
	1912, 3278, 0, 0, 1135, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 1177, 1141, 0, 0, 0, 289,
	290, 1217, 291, 292, 293, 294, 295, 296, 649, 1190,
	0, 297, 1197, 298, 1196, 0, 1207, 299, 300, 301,
	302, 303, 304, 1143, 1176, 1108, 305, 1237, 1238, 656,
	0, 306, 307, 1183, 0, 1164, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1218, 330, 331, 332, 1167, 1165,
	1166, 1173, 1169, 1168, 1172, 333, 334, 335, 336, 337,
	1200, 338, 340, 1194, 1193, 1113, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	1185, 351, 0, 352, 353, 354, 0, 355, 356, 357,
	0, 358, 359, 1119, 360, 361, 362, 364, 366, 363,
	365, 367, 368, 369, 370, 1208, 1209, 371, 1132, 277,
	0, 0, 0, 0, 0, 372, 373, 374, 1192, 0,
	0, 0, 375, 0, 376, 377, 378, 0, 0, 1219,
	379, 380, 381, 1205, 1206, 382, 383, 384, 385, 386,
	387, 388, 389, 390, 0, 391, 1215, 0, 1142, 392,
	0, 393, 394, 395, 396, 397, 1178, 1179, 1182, 483,
	1221, 398, 399, 0, 400, 401, 402, 403, 404, 0,
	0, 0, 278, 405, 406, 407, 0, 1220, 408, 1187,
	1188, 0, 1148, 0, 409, 410, 1222, 1180, 1223, 411,
	412, 413, 1224, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 1216,
	1225, 425, 426, 1226, 0, 427, 428, 429, 430, 431,
	432, 435, 1171, 1170, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1227, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 478, 466, 467, 468,
	1228, 477, 465, 1110, 279, 1229, 479, 480, 481, 1133,
	1181, 482, 1195, 484, 485, 0, 0, 486, 0, 0,
	0, 488, 489, 490, 0, 0, 491, 492, 678, 1230,
	493, 1231, 1210, 494, 495, 1120, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 0, 505, 506, 680, 507,
	508, 509, 681, 510, 511, 512, 1211, 513, 683, 514,
	515, 0, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 524, 1191, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	536, 0, 537, 538, 539, 540, 535, 541, 542, 543,
	544, 545, 0, 546, 547, 548, 1232, 549, 550, 551,
	552, 553, 1121, 554, 0, 555, 556, 562, 563, 564,
	557, 558, 565, 566, 567, 568, 569, 239, 571, 572,
	570, 573, 574, 575, 1174, 576, 577, 559, 560, 578,
	579, 1233, 580, 581, 582, 583, 584, 585, 586, 1189,
	0, 587, 0, 588, 589, 590, 591, 593, 561, 594,
	599, 600, 1236, 595, 596, 597, 598, 1212, 602, 603,
	0, 604, 605, 1107, 601, 592, 241, 606, 607, 608,
	609, 610, 611, 612, 613, 0, 614, 1201, 1202, 1203,
	1204, 0, 623, 0, 615, 616, 617, 1213, 618, 1214,
	1131, 619, 620, 621, 622, 0, 624, 625, 0, 1114,
	626, 627, 628, 630, 631, 629, 632, 1175, 633, 0,
	0, 634, 635, 636, 1651, 1198, 1235, 0, 638, 637,
	639, 640, 698, 641, 642, 0, 0, 0, 233, 643,
	644, 699, 645, 646, 647, 1111, 0, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1106, 0,
	0, 0, 0, 0, 0, 1104, 1105, 1153, 1125, 1126,
	1127, 1123, 1124, 1136, 0, 1912, 1910, 0, 0, 1135,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 1177,
	1141, 0, 0, 0, 289, 290, 1217, 291, 292, 293,
	294, 295, 296, 649, 1190, 0, 297, 1197, 298, 1196,
	2771, 1207, 299, 300, 301, 302, 303, 304, 1143, 1176,
	1108, 305, 1237, 1238, 656, 0, 306, 307, 1183, 0,
	1164, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1218,
	330, 331, 332, 1167, 1165, 1166, 1173, 1169, 1168, 1172,
	333, 334, 335, 336, 337, 1200, 338, 340, 1194, 1193,
	1113, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 1185, 351, 0, 352, 353,
	354, 0, 355, 356, 357, 0, 358, 359, 1119, 360,
	361, 362, 364, 366, 363, 365, 367, 368, 369, 370,
	1208, 1209, 371, 1132, 277, 0, 0, 0, 0, 0,
	372, 373, 374, 1192, 0, 0, 0, 375, 0, 376,
	377, 378, 0, 2776, 1219, 379, 380, 381, 1205, 1206,
	382, 383, 384, 385, 386, 387, 388, 389, 390, 0,
	391, 1215, 0, 1142, 392, 0, 393, 394, 395, 396,
	397, 1178, 1179, 1182, 483, 1221, 398, 399, 0, 400,
	401, 402, 403, 404, 0, 0, 0, 278, 405, 406,
	407, 0, 1220, 408, 1187, 1188, 0, 1148, 0, 409,
	410, 1222, 1180, 1223, 411, 412, 413, 1224, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 2772, 424, 1216, 1225, 425, 426, 1226, 0,
	427, 428, 429, 430, 431, 432, 435, 1171, 1170, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1227, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 478, 466, 467, 468, 1228, 477, 465, 1110, 279,
	1229, 479, 480, 481, 1133, 1181, 482, 1195, 484, 485,
	0, 0, 486, 0, 0, 0, 488, 489, 490, 0,
	0, 491, 492, 678, 1230, 493, 1231, 1210, 494, 495,
	1120, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	0, 505, 506, 680, 507, 508, 509, 681, 510, 511,
	512, 1211, 513, 683, 514, 515, 0, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 524, 1191, 525, 526,
	528, 527, 529, 0, 530, 0, 531, 532, 533, 0,
	0, 0, 0, 0, 534, 536, 0, 537, 538, 539,
	540, 535, 541, 542, 543, 544, 545, 0, 546, 547,
	548, 1232, 549, 550, 551, 552, 553, 1121, 554, 0,
	555, 556, 562, 563, 564, 557, 558, 565, 566, 567,
	568, 569, 0, 571, 572, 570, 573, 574, 575, 1174,
	576, 577, 559, 560, 578, 579, 1233, 580, 581, 582,
	583, 584, 585, 586, 1189, 0, 587, 0, 588, 589,
	590, 591, 593, 561, 594, 599, 600, 1236, 595, 596,
	597, 598, 1212, 602, 603, 0, 604, 605, 1107, 601,
	592, 0, 606, 607, 608, 609, 610, 611, 612, 613,
	0, 614, 1201, 1202, 1203, 1204, 0, 623, 2773, 615,
	616, 617, 1213, 618, 1214, 1131, 619, 620, 621, 622,
	0, 624, 625, 0, 1114, 626, 627, 628, 630, 631,
	629, 632, 1175, 633, 0, 0, 634, 635, 636, 695,
	1198, 1235, 0, 638, 637, 639, 640, 698, 641, 642,
	0, 0, 0, 0, 643, 644, 699, 645, 646, 647,
	1111, 0, 0, 0, 2685, 0, 1153, 1125, 1126, 1127,
	1123, 1124, 1136, 1106, 0, 0, 0, 0, 0, 0,
	1104, 1105, 0, 280, 282, 281, 283, 284, 285, 286,
	1137, 287, 288, 0, 1135, 0, 0, 0, 1177, 1141,
	0, 0, 0, 289, 290, 1217, 291, 292, 293, 294,
	295, 296, 649, 1190, 0, 297, 1197, 298, 1196, 0,
	1207, 299, 300, 301, 302, 303, 304, 1143, 1176, 1108,
	305, 1237, 1238, 656, 0, 306, 307, 1183, 0, 1164,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1218, 330,
	331, 332, 1167, 1165, 1166, 1173, 1169, 1168, 1172, 333,
	334, 335, 336, 337, 1200, 338, 340, 1194, 1193, 1113,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 1185, 351, 0, 352, 353, 354,
	0, 355, 356, 357, 0, 358, 359, 1119, 360, 361,
	362, 364, 366, 363, 365, 367, 368, 369, 370, 1208,
	1209, 371, 1132, 277, 0, 0, 0, 0, 0, 372,
	373, 374, 1192, 0, 0, 0, 375, 0, 376, 377,
	378, 0, 0, 1219, 379, 380, 381, 1205, 1206, 382,
	383, 384, 385, 386, 387, 388, 389, 390, 0, 391,
	1215, 0, 1142, 392, 0, 393, 394, 395, 396, 397,
	1178, 1179, 1182, 483, 1221, 398, 399, 0, 400, 401,
	402, 403, 404, 0, 0, 0, 278, 405, 406, 407,
	0, 1220, 408, 1187, 1188, 0, 1148, 0, 409, 410,
	1222, 1180, 1223, 411, 412, 413, 1224, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 1216, 1225, 425, 426, 1226, 0, 427,
	428, 429, 430, 431, 432, 435, 1171, 1170, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1227, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	478, 466, 467, 468, 1228, 477, 465, 1110, 279, 1229,
	479, 480, 481, 1133, 1181, 482, 1195, 484, 485, 0,
	0, 486, 0, 0, 0, 488, 489, 490, 0, 0,
	491, 492, 678, 1230, 493, 1231, 1210, 494, 495, 1120,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 0,
	505, 506, 680, 507, 508, 509, 681, 510, 511, 512,
	1211, 513, 683, 514, 515, 0, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 524, 1191, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 536, 0, 537, 538, 539, 540,
	535, 541, 542, 543, 544, 545, 0, 546, 547, 548,
	1232, 549, 550, 551, 552, 553, 1121, 554, 0, 555,
	556, 562, 563, 564, 557, 558, 565, 566, 567, 568,
	569, 0, 571, 572, 570, 573, 574, 575, 1174, 576,
	577, 559, 560, 578, 579, 1233, 580, 581, 582, 583,
	584, 585, 586, 1189, 0, 587, 0, 588, 589, 590,
	591, 593, 561, 594, 599, 600, 1236, 595, 596, 597,
	598, 1212, 602, 603, 0, 604, 605, 1107, 601, 592,
	0, 606, 607, 608, 609, 610, 611, 612, 613, 0,
	614, 1201, 1202, 1203, 1204, 0, 623, 0, 615, 616,
	617, 1213, 618, 1214, 1131, 619, 620, 621, 622, 0,
	624, 625, 0, 1114, 626, 627, 628, 630, 631, 629,
	632, 1175, 633, 0, 0, 634, 635, 636, 695, 1198,
	1235, 0, 638, 637, 639, 640, 698, 641, 642, 0,
	0, 0, 0, 643, 644, 699, 645, 646, 647, 1111,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1106, 0, 0, 0, 0, 0, 0, 1104,
	1105, 0, 0, 0, 0, 0, 0, 0, 0, 1137,
	2683, 0, 2682, 1135, 1153, 1125, 1126, 1127, 1123, 1124,
	1136, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 1177, 1141, 0, 0,
	0, 289, 290, 1217, 291, 292, 293, 294, 295, 296,
	649, 1190, 0, 297, 1197, 298, 1196, 0, 1207, 299,
	300, 301, 302, 303, 304, 1143, 1176, 1108, 305, 1237,
	1238, 656, 0, 306, 307, 1183, 0, 1164, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1218, 330, 331, 332,
	1167, 1165, 1166, 1173, 1169, 1168, 1172, 333, 334, 335,
	336, 337, 1200, 338, 340, 1194, 1193, 1113, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 1185, 351, 0, 352, 353, 354, 0, 355,
	356, 357, 0, 358, 359, 1119, 360, 361, 362, 364,
	366, 363, 365, 367, 368, 369, 370, 1208, 1209, 371,
	1132, 277, 0, 0, 0, 0, 0, 372, 373, 374,
	1192, 0, 0, 0, 375, 0, 376, 377, 378, 0,
	0, 1219, 379, 380, 381, 1205, 1206, 382, 383, 384,
	385, 386, 387, 388, 389, 390, 0, 391, 1215, 0,
	1142, 392, 0, 393, 394, 395, 396, 397, 1178, 1179,
	1182, 483, 1221, 398, 399, 0, 400, 401, 402, 403,
	404, 0, 0, 0, 278, 405, 406, 407, 0, 1220,
	408, 1187, 1188, 0, 1148, 0, 409, 410, 1222, 1180,
	1223, 411, 412, 413, 1224, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 1216, 1225, 425, 426, 1226, 0, 427, 428, 429,
	430, 431, 432, 435, 1171, 1170, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1227, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 478, 466,
	467, 468, 1228, 477, 465, 1110, 279, 1229, 479, 480,
	481, 1133, 1181, 482, 1195, 484, 485, 0, 0, 486,
	0, 0, 0, 488, 489, 490, 0, 0, 491, 492,
	678, 1230, 493, 1231, 1210, 494, 495, 1120, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 0, 505, 506,
	680, 507, 508, 509, 681, 510, 511, 512, 1211, 513,
	683, 514, 515, 0, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 524, 1191, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 536, 0, 537, 538, 539, 540, 535, 541,
	542, 543, 544, 545, 0, 546, 547, 548, 1232, 549,
	550, 551, 552, 553, 1121, 554, 0, 555, 556, 562,
	563, 564, 557, 558, 565, 566, 567, 568, 569, 0,
	571, 572, 570, 573, 574, 575, 1174, 576, 577, 559,
	560, 578, 579, 1233, 580, 581, 582, 583, 584, 585,
	586, 1189, 0, 587, 0, 588, 589, 590, 591, 593,
	561, 594, 599, 600, 1236, 595, 596, 597, 598, 1212,
	602, 603, 0, 604, 605, 1107, 601, 592, 0, 606,
	607, 608, 609, 610, 611, 612, 613, 0, 614, 1201,
	1202, 1203, 1204, 0, 623, 0, 615, 616, 617, 1213,
	618, 1214, 1131, 619, 620, 621, 622, 0, 624, 625,
	0, 1114, 626, 627, 628, 630, 631, 629, 632, 1175,
	633, 0, 0, 634, 635, 636, 695, 1198, 1235, 0,
	638, 637, 639, 640, 698, 641, 642, 0, 0, 0,
	0, 643, 644, 699, 645, 646, 647, 1111, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1106, 0, 0, 0, 0, 0, 0, 1104, 1105, 0,
	0, 0, 0, 0, 0, 0, 0, 1137, 2680, 0,
	2679, 1135, 1153, 1125, 1126, 1127, 1123, 1124, 1136, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 1177, 1141, 0, 0, 0, 289,
	290, 1217, 291, 292, 293, 294, 295, 296, 649, 1190,
	0, 297, 1197, 298, 1196, 0, 1207, 299, 300, 301,
	302, 303, 304, 1143, 1176, 1108, 305, 1237, 1238, 656,
	0, 306, 307, 1183, 0, 1164, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1218, 330, 331, 332, 1167, 1165,
	1166, 1173, 1169, 1168, 1172, 333, 334, 335, 336, 337,
	1200, 338, 340, 1194, 1193, 1113, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	1185, 351, 0, 352, 353, 354, 0, 355, 356, 357,
	0, 358, 359, 1119, 360, 361, 362, 364, 366, 363,
	365, 367, 368, 369, 370, 1208, 1209, 371, 1132, 277,
	0, 0, 0, 0, 0, 372, 373, 374, 1192, 0,
	0, 0, 375, 0, 376, 377, 378, 0, 0, 1219,
	379, 380, 381, 1205, 1206, 382, 383, 384, 385, 386,
	387, 388, 389, 390, 0, 391, 1215, 0, 1142, 392,
	0, 393, 394, 395, 396, 397, 1178, 1179, 1182, 483,
	1221, 398, 399, 0, 400, 401, 402, 403, 404, 0,
	0, 0, 278, 405, 406, 407, 0, 1220, 408, 1187,
	1188, 0, 1148, 0, 409, 410, 1222, 1180, 1223, 411,
	412, 413, 1224, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 1216,
	1225, 425, 426, 1226, 0, 427, 428, 429, 430, 431,
	432, 435, 1171, 1170, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1227, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 478, 466, 467, 468,
	1228, 477, 465, 1110, 279, 1229, 479, 480, 481, 1133,
	1181, 482, 1195, 484, 485, 0, 0, 486, 0, 0,
	0, 488, 489, 490, 0, 0, 491, 492, 678, 1230,
	493, 1231, 1210, 494, 495, 1120, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 0, 505, 506, 680, 507,
	508, 509, 681, 510, 511, 512, 1211, 513, 683, 514,
	515, 0, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 524, 1191, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	536, 0, 537, 538, 539, 540, 535, 541, 542, 543,
	544, 545, 0, 546, 547, 548, 1232, 549, 550, 551,
	552, 553, 1121, 554, 0, 555, 556, 562, 563, 564,
	557, 558, 565, 566, 567, 568, 569, 0, 571, 572,
	570, 573, 574, 575, 1174, 576, 577, 559, 560, 578,
	579, 1233, 580, 581, 582, 583, 584, 585, 586, 1189,
	0, 587, 0, 588, 589, 590, 591, 593, 561, 594,
	599, 600, 1236, 595, 596, 597, 598, 1212, 602, 603,
	0, 604, 605, 1107, 601, 592, 0, 606, 607, 608,
	609, 610, 611, 612, 613, 0, 614, 1201, 1202, 1203,
	1204, 0, 623, 0, 615, 616, 617, 1213, 618, 1214,
	1131, 619, 620, 621, 622, 0, 624, 625, 0, 1114,
	626, 627, 628, 630, 631, 629, 632, 1175, 633, 0,
	0, 634, 635, 636, 695, 1198, 1235, 0, 638, 637,
	639, 640, 698, 641, 642, 0, 0, 0, 0, 643,
	644, 699, 645, 646, 647, 1111, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1106, 0,
	0, 0, 0, 0, 0, 1104, 1105, 0, 0, 0,
	0, 0, 0, 0, 0, 1137, 2677, 0, 2676, 1135,
	1153, 1125, 1126, 1127, 1123, 1124, 1136, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 1177, 1141, 0, 0, 0, 289, 290, 1217,
	291, 292, 293, 294, 295, 296, 649, 1190, 0, 297,
	1197, 298, 1196, 0, 1207, 299, 300, 301, 302, 303,
	304, 1143, 1176, 1108, 305, 1237, 1238, 656, 0, 306,
	307, 1183, 0, 1164, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1218, 330, 331, 332, 1167, 1165, 1166, 1173,
	1169, 1168, 1172, 333, 334, 335, 336, 337, 1200, 338,
	340, 1194, 1193, 1113, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1185, 351,
	0, 352, 353, 354, 0, 355, 356, 357, 0, 358,
	359, 1119, 360, 361, 362, 364, 366, 363, 365, 367,
	368, 369, 370, 1208, 1209, 371, 1132, 277, 0, 0,
	0, 0, 0, 372, 373, 374, 1192, 0, 0, 0,
	375, 0, 376, 377, 378, 0, 0, 1219, 379, 380,
	381, 1205, 1206, 382, 383, 384, 385, 386, 387, 388,
	389, 390, 0, 391, 1215, 0, 1142, 392, 0, 393,
	394, 395, 396, 397, 1178, 1179, 1182, 483, 1221, 398,
	399, 0, 400, 401, 402, 403, 404, 0, 0, 0,
	278, 405, 406, 407, 0, 1220, 408, 1187, 1188, 0,
	1148, 0, 409, 410, 1222, 1180, 1223, 411, 412, 413,
	1224, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 1216, 1225, 425,
	426, 1226, 0, 427, 428, 429, 430, 431, 432, 435,
	1171, 1170, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1227, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 478, 466, 467, 468, 1228, 477,
	465, 1110, 279, 1229, 479, 480, 481, 1133, 1181, 482,
	1195, 484, 485, 0, 0, 486, 0, 0, 0, 488,
	489, 490, 0, 0, 491, 492, 678, 1230, 493, 1231,
	1210, 494, 495, 1120, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 0, 505, 506, 680, 507, 508, 509,
	681, 510, 511, 512, 1211, 513, 683, 514, 515, 0,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 524,
	1191, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 536, 0,
	537, 538, 539, 540, 535, 541, 542, 543, 544, 545,
	0, 546, 547, 548, 1232, 549, 550, 551, 552, 553,
	1121, 554, 0, 555, 556, 562, 563, 564, 557, 558,
	565, 566, 567, 568, 569, 0, 571, 572, 570, 573,
	574, 575, 1174, 576, 577, 559, 560, 578, 579, 1233,
	580, 581, 582, 583, 584, 585, 586, 1189, 0, 587,
	0, 588, 589, 590, 591, 593, 561, 594, 599, 600,
	1236, 595, 596, 597, 598, 1212, 602, 603, 0, 604,
	605, 1107, 601, 592, 0, 606, 607, 608, 609, 610,
	611, 612, 613, 0, 614, 1201, 1202, 1203, 1204, 0,
	623, 0, 615, 616, 617, 1213, 618, 1214, 1131, 619,
	620, 621, 622, 0, 624, 625, 0, 1114, 626, 627,
	628, 630, 631, 629, 632, 1175, 633, 0, 0, 634,
	635, 636, 695, 1198, 1235, 0, 638, 637, 639, 640,
	698, 641, 642, 0, 0, 0, 0, 643, 644, 699,
	645, 646, 647, 1111, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1106, 0, 0, 0,
	0, 0, 0, 1104, 1105, 0, 0, 0, 0, 0,
	0, 0, 0, 1137, 2674, 0, 1751, 1135, 1153, 1125,
	1126, 1127, 1123, 1124, 1136, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	1177, 1141, 0, 0, 0, 289, 290, 1217, 291, 292,
	293, 294, 295, 296, 649, 1190, 0, 297, 1197, 298,
	1196, 0, 1207, 299, 300, 301, 302, 303, 304, 1143,
	1176, 1108, 305, 1237, 1238, 656, 0, 306, 307, 1183,
	0, 1164, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1218, 330, 331, 332, 1167, 1165, 1166, 1173, 1169, 1168,
	1172, 333, 334, 335, 336, 337, 1200, 338, 340, 1194,
	1193, 1113, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 1185, 351, 0, 352,
	353, 354, 0, 355, 356, 357, 0, 358, 359, 1119,
	360, 361, 362, 364, 366, 363, 365, 367, 368, 369,
	370, 1208, 1209, 371, 1132, 277, 0, 0, 0, 0,
	0, 372, 373, 374, 1192, 0, 0, 0, 375, 0,
	376, 377, 378, 0, 0, 1219, 379, 380, 381, 1205,
	1206, 382, 383, 384, 385, 386, 387, 388, 389, 390,
	0, 391, 1215, 0, 1142, 392, 0, 393, 394, 395,
	396, 397, 1178, 1179, 1182, 483, 1221, 398, 399, 0,
	400, 401, 402, 403, 404, 0, 0, 0, 278, 405,
	406, 407, 0, 1220, 408, 1187, 1188, 0, 1148, 0,
	409, 410, 1222, 1180, 1223, 411, 412, 413, 1224, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1216, 1225, 425, 426, 1226,
	0, 427, 428, 429, 430, 431, 432, 435, 1171, 1170,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1227,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 478, 466, 467, 468, 1228, 477, 465, 1110,
	279, 1229, 479, 480, 481, 1133, 1181, 482, 1195, 484,
	485, 0, 0, 486, 0, 0, 0, 488, 489, 490,
	0, 0, 491, 492, 678, 1230, 493, 1231, 1210, 494,
	495, 1120, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 0, 505, 506, 680, 507, 508, 509, 681, 510,
	511, 512, 1211, 513, 683, 514, 515, 0, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 524, 1191, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 536, 0, 537, 538,
	539, 540, 535, 541, 542, 543, 544, 545, 0, 546,
	547, 548, 1232, 549, 550, 551, 552, 553, 1121, 554,
	0, 555, 556, 562, 563, 564, 557, 558, 565, 566,
	567, 568, 569, 0, 571, 572, 570, 573, 574, 575,
	1174, 576, 577, 559, 560, 578, 579, 1233, 580, 581,
	582, 583, 584, 585, 586, 1189, 0, 587, 0, 588,
	589, 590, 591, 593, 561, 594, 599, 600, 1236, 595,
	596, 597, 598, 1212, 602, 603, 0, 604, 605, 1107,
	601, 592, 0, 606, 607, 608, 609, 610, 611, 612,
	613, 0, 614, 1201, 1202, 1203, 1204, 0, 623, 0,
	615, 616, 617, 1213, 618, 1214, 1131, 619, 620, 621,
	622, 0, 624, 625, 0, 1114, 626, 627, 628, 630,
	631, 629, 632, 1175, 633, 0, 0, 634, 635, 636,
	695, 1198, 1235, 0, 638, 637, 639, 640, 698, 641,
	642, 1750, 0, 0, 0, 643, 644, 699, 645, 646,
	647, 1111, 0, 0, 0, 1100, 0, 1153, 1125, 1126,
	1127, 1123, 1124, 1136, 1106, 0, 0, 0, 0, 0,
	0, 1104, 1105, 0, 280, 282, 281, 283, 284, 285,
	286, 1137, 287, 288, 0, 1135, 0, 0, 0, 1177,
	1141, 0, 0, 0, 289, 290, 1217, 291, 292, 293,
	294, 295, 296, 649, 1190, 0, 297, 1197, 298, 1196,
	0, 1207, 299, 300, 301, 302, 303, 304, 1143, 1176,
	1108, 305, 1237, 1238, 656, 0, 306, 307, 1183, 0,
	1164, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1218,
	330, 331, 332, 1167, 1165, 1166, 1173, 1169, 1168, 1172,
	333, 334, 335, 336, 337, 1200, 338, 340, 1194, 1193,
	1113, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 1185, 351, 0, 352, 353,
	354, 0, 355, 356, 357, 0, 358, 359, 1119, 360,
	361, 362, 364, 366, 363, 365, 367, 368, 369, 370,
	1208, 1209, 371, 1132, 277, 0, 0, 0, 0, 0,
	372, 373, 374, 1192, 0, 0, 0, 375, 0, 376,
	377, 378, 0, 0, 1219, 379, 380, 381, 1205, 1206,
	382, 383, 384, 385, 386, 387, 388, 389, 390, 0,
	391, 1215, 0, 1142, 392, 0, 393, 394, 395, 396,
	397, 1178, 1179, 1182, 483, 1221, 398, 399, 0, 400,
	401, 402, 403, 404, 0, 0, 0, 278, 405, 406,
	407, 0, 1220, 408, 1187, 1188, 0, 1148, 0, 409,
	410, 1222, 1180, 1223, 411, 412, 413, 1224, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 1216, 1225, 425, 426, 1226, 0,
	427, 428, 429, 430, 431, 432, 435, 1171, 1170, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1227, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 478, 466, 467, 468, 1228, 477, 465, 1110, 279,
	1229, 479, 480, 481, 1133, 1181, 482, 1195, 484, 485,
	0, 0, 486, 0, 1115, 0, 488, 489, 490, 0,
	0, 491, 492, 678, 1230, 493, 1231, 1210, 494, 495,
	1120, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	0, 505, 506, 680, 507, 508, 509, 681, 510, 511,
	512, 1211, 513, 683, 514, 515, 0, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 524, 1191, 525, 526,
	528, 527, 529, 0, 530, 0, 531, 532, 533, 0,
	0, 0, 0, 0, 534, 536, 0, 537, 538, 539,
	540, 535, 541, 542, 543, 544, 545, 0, 546, 547,
	548, 1232, 549, 550, 551, 552, 553, 1121, 554, 0,
	555, 556, 562, 563, 564, 557, 558, 565, 566, 567,
	568, 569, 0, 571, 572, 570, 573, 574, 575, 1174,
	576, 577, 559, 560, 578, 579, 1233, 580, 581, 582,
	583, 584, 585, 586, 1189, 0, 587, 0, 588, 589,
	590, 591, 593, 561, 594, 599, 600, 1236, 595, 596,
	597, 598, 1212, 602, 603, 0, 604, 605, 1107, 601,
	592, 0, 606, 607, 608, 609, 610, 611, 612, 613,
	0, 614, 1201, 1202, 1203, 1204, 0, 623, 0, 615,
	616, 617, 1213, 618, 1214, 1131, 619, 620, 621, 622,
	0, 624, 625, 0, 1114, 626, 627, 628, 630, 631,
	629, 632, 1175, 633, 0, 0, 634, 635, 636, 695,
	1198, 1235, 0, 638, 637, 639, 640, 698, 641, 642,
	0, 0, 0, 0, 643, 644, 699, 645, 646, 647,
	1111, 0, 0, 0, 0, 0, 1153, 1125, 1126, 1127,
	1123, 1124, 1136, 1106, 0, 0, 0, 0, 0, 0,
	1104, 1105, 0, 280, 282, 281, 283, 284, 285, 286,
	1137, 287, 288, 0, 1135, 0, 0, 0, 1177, 1141,
	0, 0, 0, 289, 290, 1217, 291, 292, 293, 294,
	295, 296, 649, 1190, 0, 297, 1197, 298, 1196, 0,
	1207, 299, 300, 301, 302, 303, 304, 1143, 1176, 1108,
	305, 1237, 1238, 656, 0, 306, 307, 1183, 0, 1164,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 4815, 326, 0, 327, 328, 329, 1218, 330,
	331, 332, 1167, 1165, 1166, 1173, 1169, 1168, 1172, 333,
	334, 335, 336, 337, 1200, 338, 340, 1194, 1193, 1113,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 1185, 351, 0, 352, 353, 354,
	0, 355, 356, 357, 0, 358, 359, 1119, 360, 361,
	362, 364, 366, 363, 365, 367, 368, 369, 370, 1208,
	1209, 371, 1132, 277, 0, 0, 0, 0, 0, 372,
	373, 374, 1192, 0, 0, 0, 375, 0, 376, 377,
	378, 0, 0, 1219, 379, 380, 381, 1205, 1206, 382,
	383, 384, 385, 386, 387, 388, 389, 390, 0, 391,
	1215, 0, 1142, 392, 0, 393, 394, 395, 396, 397,
	1178, 1179, 1182, 483, 1221, 398, 399, 0, 400, 401,
	402, 403, 404, 0, 0, 0, 278, 405, 406, 407,
	0, 1220, 408, 1187, 1188, 0, 1148, 0, 409, 410,
	1222, 1180, 1223, 411, 412, 413, 1224, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 1216, 1225, 425, 426, 1226, 0, 427,
	428, 429, 430, 431, 432, 435, 1171, 1170, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1227, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	478, 466, 467, 468, 1228, 477, 465, 1110, 279, 1229,
	479, 480, 481, 1133, 1181, 482, 1195, 484, 485, 0,
	0, 486, 0, 1115, 0, 488, 489, 490, 0, 0,
	491, 492, 678, 1230, 493, 1231, 1210, 494, 495, 1120,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 0,
	505, 506, 680, 507, 508, 509, 681, 510, 511, 512,
	1211, 513, 683, 514, 515, 0, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 524, 1191, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 536, 0, 537, 538, 539, 540,
	535, 541, 542, 543, 544, 545, 0, 546, 547, 548,
	1232, 549, 550, 551, 552, 553, 1121, 554, 0, 555,
	556, 562, 563, 564, 557, 558, 565, 566, 567, 568,
	569, 0, 571, 572, 570, 573, 574, 575, 1174, 576,
	577, 559, 560, 578, 579, 1233, 580, 581, 582, 583,
	584, 585, 586, 1189, 0, 587, 0, 588, 589, 590,
	591, 593, 561, 594, 599, 600, 1236, 595, 596, 597,
	598, 1212, 602, 603, 0, 604, 605, 1107, 601, 592,
	0, 606, 607, 608, 609, 610, 611, 612, 613, 0,
	614, 1201, 1202, 1203, 1204, 0, 623, 0, 615, 616,
	617, 1213, 618, 1214, 1131, 619, 620, 621, 622, 0,
	624, 625, 0, 1114, 626, 627, 628, 630, 631, 629,
	632, 1175, 633, 0, 0, 634, 635, 636, 695, 1198,
	1235, 0, 638, 637, 639, 640, 698, 641, 642, 0,
	0, 0, 0, 643, 644, 699, 645, 646, 647, 1111,
	0, 0, 0, 0, 0, 1153, 1125, 1126, 1127, 1123,
	1124, 1136, 1106, 0, 0, 0, 0, 0, 0, 1104,
	1105, 0, 280, 282, 281, 283, 284, 285, 286, 1137,
	287, 288, 0, 1135, 0, 0, 0, 1177, 1141, 0,
	0, 0, 289, 290, 1217, 291, 292, 293, 294, 295,
	296, 649, 1190, 0, 297, 1197, 298, 1196, 0, 1207,
	299, 300, 301, 302, 303, 304, 1143, 1176, 1108, 305,
	1237, 1238, 656, 0, 306, 307, 1183, 0, 1164, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1218, 330, 331,
	332, 1167, 1165, 1166, 1173, 1169, 1168, 1172, 333, 334,
	335, 336, 337, 1200, 338, 340, 1194, 1193, 1113, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 1185, 351, 0, 352, 353, 354, 0,
	355, 356, 357, 0, 358, 359, 1119, 360, 361, 362,
	364, 366, 363, 365, 367, 368, 369, 370, 1208, 1209,
	371, 1132, 277, 0, 0, 0, 0, 0, 372, 373,
	374, 1192, 0, 0, 0, 375, 0, 376, 377, 378,
	0, 0, 1219, 379, 380, 381, 1205, 1206, 382, 383,
	384, 385, 386, 387, 388, 389, 390, 0, 391, 1215,
	0, 1142, 392, 0, 393, 394, 395, 396, 397, 1178,
	1179, 1182, 483, 1221, 398, 399, 0, 400, 401, 402,
	403, 404, 0, 0, 0, 2517, 405, 406, 407, 0,
	1220, 408, 1187, 1188, 0, 1148, 0, 409, 410, 1222,
	1180, 1223, 411, 412, 413, 1224, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 1216, 1225, 425, 426, 1226, 0, 427, 428,
	429, 430, 431, 432, 435, 1171, 1170, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1227, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 478,
	466, 467, 468, 1228, 477, 465, 1110, 279, 1229, 479,
	480, 481, 1133, 1181, 482, 1195, 484, 485, 0, 0,
	486, 0, 0, 0, 488, 489, 490, 0, 0, 491,
	492, 678, 1230, 493, 1231, 1210, 494, 495, 1120, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 0, 505,
	506, 680, 507, 508, 509, 681, 510, 511, 512, 1211,
	513, 683, 514, 515, 2516, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 524, 1191, 525, 526, 528, 527,
	529, 0, 530, 0, 531, 532, 533, 0, 0, 0,
	0, 0, 534, 536, 0, 537, 538, 539, 540, 535,
	541, 542, 543, 544, 545, 0, 546, 547, 548, 1232,
	549, 550, 551, 552, 553, 1121, 554, 0, 555, 556,
	562, 563, 564, 557, 558, 565, 566, 567, 568, 569,
	0, 571, 572, 570, 573, 574, 575, 1174, 576, 577,
	559, 560, 578, 579, 1233, 580, 581, 582, 583, 584,
	585, 586, 1189, 0, 587, 0, 588, 589, 590, 591,
	593, 561, 594, 599, 600, 1236, 595, 596, 597, 598,
	1212, 602, 603, 0, 604, 605, 1107, 601, 592, 0,
	606, 607, 608, 609, 610, 611, 612, 613, 0, 614,
	1201, 1202, 1203, 1204, 0, 623, 0, 615, 616, 617,
	1213, 618, 1214, 1131, 619, 620, 621, 622, 0, 624,
	625, 0, 1114, 626, 627, 628, 630, 631, 629, 632,
	1175, 633, 0, 0, 634, 635, 636, 695, 1198, 1235,
	0, 638, 637, 639, 640, 698, 641, 642, 0, 0,
	0, 0, 643, 644, 699, 645, 646, 647, 1111, 0,
	0, 0, 0, 0, 1153, 1125, 1126, 1127, 1123, 1124,
	1136, 1106, 0, 0, 0, 0, 0, 0, 1104, 1105,
	0, 280, 282, 281, 283, 284, 285, 286, 1137, 287,
	288, 0, 1135, 0, 0, 0, 1177, 1141, 0, 0,
	0, 289, 290, 1217, 291, 292, 293, 294, 295, 296,
	649, 1190, 0, 297, 1197, 298, 1196, 0, 1207, 299,
	300, 301, 302, 303, 304, 1143, 1176, 1108, 305, 1237,
	1238, 656, 0, 306, 307, 1183, 0, 1164, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	4541, 326, 0, 327, 328, 329, 1218, 330, 331, 332,
	1167, 1165, 1166, 1173, 1169, 1168, 1172, 333, 334, 335,
	336, 337, 1200, 338, 340, 1194, 1193, 1113, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 1185, 351, 0, 352, 353, 354, 0, 355,
	356, 357, 0, 358, 359, 1119, 360, 361, 362, 364,
	366, 363, 365, 367, 368, 369, 370, 1208, 1209, 371,
	1132, 277, 0, 0, 0, 0, 0, 372, 373, 374,
	1192, 0, 0, 0, 375, 0, 376, 377, 378, 0,
	0, 1219, 379, 380, 381, 1205, 1206, 382, 383, 384,
	385, 386, 387, 388, 389, 390, 0, 391, 1215, 0,
	1142, 392, 0, 393, 394, 395, 396, 397, 1178, 1179,
	1182, 483, 1221, 398, 399, 0, 400, 401, 402, 403,
	404, 0, 0, 0, 278, 405, 406, 407, 0, 1220,
	408, 1187, 1188, 0, 1148, 0, 409, 410, 1222, 1180,
	1223, 411, 412, 413, 1224, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 1216, 1225, 425, 426, 1226, 0, 427, 428, 429,
	430, 431, 432, 435, 1171, 1170, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1227, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 478, 466,
	467, 468, 1228, 477, 465, 1110, 279, 1229, 479, 480,
	481, 1133, 1181, 482, 1195, 484, 485, 0, 0, 486,
	0, 1115, 0, 488, 489, 490, 0, 0, 491, 492,
	678, 1230, 493, 1231, 1210, 494, 495, 1120, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 0, 505, 506,
	680, 507, 508, 509, 681, 510, 511, 512, 1211, 513,
	683, 514, 515, 0, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 524, 1191, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 536, 0, 537, 538, 539, 540, 535, 541,
	542, 543, 544, 545, 0, 546, 547, 548, 1232, 549,
	550, 551, 552, 553, 1121, 554, 0, 555, 556, 562,
	563, 564, 557, 558, 565, 566, 567, 568, 569, 0,
	571, 572, 570, 573, 574, 575, 1174, 576, 577, 559,
	560, 578, 579, 1233, 580, 581, 582, 583, 584, 585,
	586, 1189, 0, 587, 0, 588, 589, 590, 591, 593,
	561, 594, 599, 600, 1236, 595, 596, 597, 598, 1212,
	602, 603, 0, 604, 605, 1107, 601, 592, 0, 606,
	607, 608, 609, 610, 611, 612, 613, 0, 614, 1201,
	1202, 1203, 1204, 0, 623, 0, 615, 616, 617, 1213,
	618, 1214, 1131, 619, 620, 621, 622, 0, 624, 625,
	0, 1114, 626, 627, 628, 630, 631, 629, 632, 1175,
	633, 0, 0, 634, 635, 636, 695, 1198, 1235, 0,
	638, 637, 639, 640, 698, 641, 642, 0, 0, 0,
	0, 643, 644, 699, 645, 646, 647, 1111, 0, 0,
	0, 0, 0, 1153, 1125, 1126, 1127, 1123, 1124, 1136,
	1106, 0, 0, 0, 0, 0, 0, 1104, 1105, 0,
	280, 282, 281, 283, 284, 285, 286, 1137, 287, 288,
	0, 1135, 0, 0, 0, 1177, 1141, 0, 0, 0,
	289, 290, 1217, 291, 292, 293, 294, 295, 296, 649,
	1190, 0, 297, 1197, 298, 1196, 0, 1207, 299, 300,
	301, 302, 303, 304, 1143, 1176, 1108, 305, 1237, 1238,
	656, 0, 306, 307, 1183, 0, 1164, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1218, 330, 331, 332, 1167,
	1165, 1166, 1173, 1169, 1168, 1172, 333, 334, 335, 336,
	337, 1200, 338, 340, 1194, 1193, 1113, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 1185, 351, 0, 352, 353, 354, 0, 355, 356,
	357, 0, 358, 359, 1119, 360, 361, 362, 364, 366,
	363, 365, 367, 368, 369, 370, 1208, 1209, 371, 1132,
	277, 0, 0, 0, 0, 0, 372, 373, 374, 1192,
	0, 0, 0, 375, 0, 376, 377, 378, 0, 0,
	1219, 379, 380, 381, 1205, 1206, 382, 383, 384, 385,
	386, 387, 388, 389, 390, 0, 391, 1215, 0, 1142,
	392, 0, 393, 394, 395, 396, 397, 1178, 1179, 1182,
	483, 1221, 398, 399, 0, 400, 401, 402, 403, 404,
	0, 0, 0, 278, 405, 406, 407, 0, 1220, 408,
	1187, 1188, 0, 1148, 0, 409, 410, 1222, 1180, 1223,
	411, 412, 413, 1224, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	1216, 1225, 425, 426, 1226, 0, 427, 428, 429, 430,
	431, 432, 435, 1171, 1170, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1227, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 478, 466, 467,
	468, 1228, 477, 465, 1110, 279, 1229, 479, 480, 481,
	1133, 1181, 482, 1195, 484, 485, 0, 0, 486, 0,
	1115, 0, 488, 489, 490, 0, 0, 491, 492, 678,
	1230, 493, 1231, 1210, 494, 495, 1120, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 0, 505, 506, 680,
	507, 508, 509, 681, 510, 511, 512, 1211, 513, 683,
	514, 515, 0, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 524, 1191, 525, 526, 528, 527, 529, 0,
	530, 0, 531, 532, 533, 0, 0, 0, 0, 0,
	534, 536, 0, 537, 538, 539, 540, 535, 541, 542,
	543, 544, 545, 0, 546, 547, 548, 1232, 549, 550,
	551, 552, 553, 1121, 554, 0, 555, 556, 562, 563,
	564, 557, 558, 565, 566, 567, 568, 569, 0, 571,
	572, 570, 573, 574, 575, 1174, 576, 577, 559, 560,
	578, 579, 1233, 580, 581, 582, 583, 584, 585, 586,
	1189, 0, 587, 0, 588, 589, 590, 591, 593, 561,
	594, 599, 600, 1236, 595, 596, 597, 598, 1212, 602,
	603, 0, 604, 605, 1107, 601, 592, 0, 606, 607,
	608, 609, 610, 611, 612, 613, 0, 614, 1201, 1202,
	1203, 1204, 0, 623, 0, 615, 616, 617, 1213, 618,
	1214, 1131, 619, 620, 621, 622, 0, 624, 625, 0,
	1114, 626, 627, 628, 630, 631, 629, 632, 1175, 633,
	0, 0, 634, 635, 636, 695, 1198, 1235, 0, 638,
	637, 639, 640, 698, 641, 642, 0, 0, 0, 0,
	643, 644, 699, 645, 646, 647, 1111, 0, 0, 0,
	0, 0, 1153, 1125, 1126, 1127, 1123, 1124, 1136, 1106,
	0, 0, 0, 0, 0, 0, 1104, 1105, 0, 280,
	282, 281, 283, 284, 285, 286, 1137, 287, 288, 0,
	1135, 0, 0, 0, 1177, 1141, 0, 0, 0, 289,
	290, 1217, 291, 292, 293, 294, 295, 296, 649, 1190,
	0, 297, 1197, 298, 1196, 0, 1207, 299, 300, 301,
	302, 303, 304, 1143, 1176, 1108, 305, 1237, 1238, 656,
	0, 306, 307, 1183, 0, 1164, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1218, 330, 331, 332, 1167, 1165,
	1166, 1173, 1169, 1168, 1172, 333, 334, 335, 336, 337,
	1200, 338, 340, 1194, 1193, 1113, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	1185, 351, 0, 352, 353, 354, 0, 355, 356, 357,
	0, 358, 359, 1119, 360, 361, 362, 364, 366, 363,
	365, 367, 368, 369, 370, 1208, 1209, 371, 1132, 277,
	0, 0, 0, 0, 0, 372, 373, 374, 1192, 0,
	0, 0, 375, 0, 376, 377, 378, 0, 0, 1219,
	379, 380, 381, 1205, 1206, 382, 383, 384, 385, 386,
	387, 388, 389, 390, 0, 391, 1215, 0, 1142, 392,
	0, 393, 394, 395, 396, 397, 1178, 1179, 1182, 483,
	1221, 398, 399, 0, 400, 401, 402, 403, 404, 0,
	0, 0, 278, 405, 406, 407, 0, 1220, 408, 1187,
	1188, 0, 1148, 0, 409, 410, 1222, 1180, 1223, 411,
	412, 413, 1224, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 1216,
	1225, 425, 426, 1226, 0, 427, 428, 429, 430, 431,
	432, 435, 1171, 1170, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1227, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 478, 466, 467, 468,
	1228, 477, 465, 1110, 4118, 1229, 479, 480, 481, 1133,
	1181, 482, 1195, 484, 485, 0, 0, 486, 0, 0,
	0, 488, 489, 490, 0, 0, 491, 492, 678, 1230,
	493, 1231, 1210, 494, 495, 1120, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 0, 505, 506, 680, 507,
	508, 509, 681, 510, 511, 512, 1211, 513, 683, 514,
	515, 0, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 524, 1191, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	536, 0, 537, 538, 539, 540, 535, 541, 542, 543,
	544, 545, 0, 546, 547, 548, 1232, 549, 550, 551,
	552, 553, 1121, 554, 0, 555, 556, 562, 563, 564,
	557, 558, 565, 566, 567, 568, 569, 0, 571, 572,
	570, 573, 574, 575, 1174, 576, 577, 559, 560, 578,
	579, 1233, 580, 581, 582, 583, 584, 585, 586, 1189,
	0, 587, 0, 588, 589, 590, 591, 593, 561, 594,
	599, 600, 1236, 595, 596, 597, 598, 1212, 602, 603,
	0, 604, 605, 1107, 601, 592, 0, 606, 607, 608,
	609, 610, 611, 612, 613, 0, 614, 1201, 1202, 1203,
	1204, 0, 623, 0, 615, 616, 617, 1213, 618, 1214,
	1131, 619, 620, 621, 622, 0, 624, 625, 0, 1114,
	626, 627, 628, 630, 631, 629, 632, 1175, 633, 0,
	0, 634, 635, 636, 695, 1198, 1235, 0, 638, 637,
	639, 640, 698, 641, 642, 0, 0, 0, 0, 643,
	644, 699, 645, 646, 647, 1111, 0, 0, 0, 0,
	0, 1153, 1125, 1126, 1127, 1123, 1124, 1136, 1106, 0,
	0, 0, 0, 0, 0, 1104, 1105, 1981, 280, 282,
	281, 283, 284, 285, 286, 1137, 287, 288, 0, 1135,
	0, 0, 0, 1177, 1141, 0, 0, 0, 289, 290,
	1217, 291, 292, 293, 294, 295, 296, 649, 1190, 0,
	297, 1197, 298, 1196, 0, 1207, 299, 300, 301, 302,
	303, 304, 1143, 1176, 1108, 305, 1237, 1238, 656, 0,
	306, 307, 1183, 0, 1164, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1218, 330, 331, 332, 1167, 1165, 1166,
	1173, 1169, 1168, 1172, 333, 334, 335, 336, 337, 1200,
	338, 340, 1194, 1193, 1113, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 1185,
	351, 0, 352, 353, 354, 0, 355, 356, 357, 0,
	358, 359, 1119, 360, 361, 362, 364, 366, 363, 365,
	367, 368, 369, 370, 1208, 1209, 371, 1132, 277, 0,
	0, 0, 0, 0, 372, 373, 374, 1192, 0, 0,
	0, 375, 0, 376, 377, 378, 0, 0, 1219, 379,
	380, 381, 1205, 1206, 382, 383, 384, 385, 386, 387,
	388, 389, 390, 0, 391, 1215, 0, 1142, 392, 0,
	393, 394, 395, 396, 397, 1178, 1179, 1182, 483, 1221,
	398, 399, 0, 400, 401, 402, 403, 404, 0, 0,
	0, 278, 405, 406, 407, 0, 1220, 408, 1187, 1188,
	0, 1148, 0, 409, 410, 1222, 1180, 1223, 411, 412,
	413, 1224, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 1216, 1225,
	425, 426, 1226, 0, 427, 428, 429, 430, 431, 432,
	435, 1171, 1170, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1227, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 478, 466, 467, 468, 1228,
	477, 465, 1110, 279, 1229, 479, 480, 481, 1133, 1181,
	482, 1195, 484, 485, 0, 0, 486, 0, 0, 0,
	488, 489, 490, 0, 0, 491, 492, 678, 1230, 493,
	1231, 1210, 494, 495, 1120, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 0, 505, 506, 680, 507, 508,
	509, 681, 510, 511, 512, 1211, 513, 683, 514, 515,
	0, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	524, 1191, 525, 526, 528, 527, 529, 0, 530, 0,
	531, 532, 533, 0, 0, 0, 0, 0, 534, 536,
	0, 537, 538, 539, 540, 535, 541, 542, 543, 544,
	545, 0, 546, 547, 548, 1232, 549, 550, 551, 552,
	553, 1121, 554, 0, 555, 556, 562, 563, 564, 557,
	558, 565, 566, 567, 568, 569, 0, 571, 572, 570,
	573, 574, 575, 1174, 576, 577, 559, 560, 578, 579,
	1233, 580, 581, 582, 583, 584, 585, 586, 1189, 0,
	587, 0, 588, 589, 590, 591, 593, 561, 594, 599,
	600, 1236, 595, 596, 597, 598, 1212, 602, 603, 0,
	604, 605, 1107, 601, 592, 0, 606, 607, 608, 609,
	610, 611, 612, 613, 0, 614, 1201, 1202, 1203, 1204,
	0, 623, 0, 615, 616, 617, 1213, 618, 1214, 1131,
	619, 620, 621, 622, 0, 624, 625, 0, 1114, 626,
	627, 628, 630, 631, 629, 632, 1175, 633, 0, 0,
	634, 635, 636, 695, 1198, 1235, 3805, 638, 637, 639,
	640, 698, 641, 642, 0, 0, 0, 0, 643, 644,
	699, 645, 646, 647, 1111, 0, 0, 0, 0, 0,
	1153, 1125, 1126, 1127, 1123, 1124, 1136, 1106, 0, 0,
	0, 0, 0, 0, 1104, 1105, 0, 280, 282, 281,
	283, 284, 285, 286, 1137, 287, 288, 0, 1135, 0,
	0, 0, 1177, 1141, 0, 0, 0, 289, 290, 1217,
	291, 292, 293, 294, 295, 296, 649, 1190, 0, 297,
	1197, 298, 1196, 0, 1207, 299, 300, 301, 302, 303,
	304, 1143, 1176, 1108, 305, 1237, 1238, 656, 0, 306,
	307, 1183, 0, 1164, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1218, 330, 331, 332, 1167, 1165, 1166, 1173,
	1169, 1168, 1172, 333, 334, 335, 336, 337, 1200, 338,
	340, 1194, 1193, 1113, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1185, 351,
	0, 352, 353, 354, 0, 355, 356, 357, 0, 358,
	359, 1119, 360, 361, 362, 364, 366, 363, 365, 367,
	368, 369, 370, 1208, 1209, 371, 1132, 277, 0, 0,
	0, 0, 0, 372, 373, 374, 1192, 0, 0, 0,
	375, 0, 376, 377, 378, 0, 0, 1219, 379, 380,
	381, 1205, 1206, 382, 383, 384, 385, 386, 387, 388,
	389, 390, 0, 391, 1215, 0, 1142, 392, 0, 393,
	394, 395, 396, 397, 1178, 1179, 1182, 483, 1221, 398,
	399, 0, 400, 401, 402, 403, 404, 0, 0, 0,
	278, 405, 406, 407, 0, 1220, 408, 1187, 1188, 0,
	1148, 0, 409, 410, 1222, 1180, 1223, 411, 412, 413,
	1224, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 1216, 1225, 425,
	426, 1226, 0, 427, 428, 429, 430, 431, 432, 435,
	1171, 1170, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1227, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 478, 466, 467, 468, 1228, 477,
	465, 1110, 279, 1229, 479, 480, 481, 1133, 1181, 482,
	1195, 484, 485, 0, 0, 486, 0, 0, 0, 488,
	489, 490, 0, 0, 491, 492, 678, 1230, 493, 1231,
	1210, 494, 495, 1120, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 0, 505, 506, 680, 507, 508, 509,
	681, 510, 511, 512, 1211, 513, 683, 514, 515, 0,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 524,
	1191, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 536, 0,
	537, 538, 539, 540, 535, 541, 542, 543, 544, 545,
	0, 546, 547, 548, 1232, 549, 550, 551, 552, 553,
	1121, 554, 0, 555, 556, 562, 563, 564, 557, 558,
	565, 566, 567, 568, 569, 0, 571, 572, 570, 573,
	574, 575, 1174, 576, 577, 559, 560, 578, 579, 1233,
	580, 581, 582, 583, 584, 585, 586, 1189, 0, 587,
	0, 588, 589, 590, 591, 593, 561, 594, 599, 600,
	1236, 595, 596, 597, 598, 1212, 602, 603, 0, 604,
	605, 1107, 601, 592, 0, 606, 607, 608, 609, 610,
	611, 612, 613, 0, 614, 1201, 1202, 1203, 1204, 0,
	623, 0, 615, 616, 617, 1213, 618, 1214, 1131, 619,
	620, 621, 622, 0, 624, 625, 0, 1114, 626, 627,
	628, 630, 631, 629, 632, 1175, 633, 0, 0, 634,
	635, 636, 695, 1198, 1235, 0, 638, 637, 639, 640,
	698, 641, 642, 0, 0, 0, 0, 643, 644, 699,
	645, 646, 647, 1111, 0, 0, 0, 0, 0, 1153,
	1125, 1126, 1127, 1123, 1124, 1136, 1106, 0, 0, 0,
	0, 0, 0, 1104, 1105, 1981, 280, 282, 281, 283,
	284, 285, 286, 1137, 287, 288, 0, 1135, 0, 0,
	0, 1177, 1141, 0, 0, 0, 289, 290, 1217, 291,
	292, 293, 294, 295, 296, 649, 1190, 0, 297, 1197,
	298, 1196, 0, 1207, 299, 300, 301, 302, 303, 304,
	1143, 1176, 1108, 305, 1237, 1238, 656, 0, 306, 307,
	1183, 0, 1164, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1218, 330, 331, 332, 1167, 1165, 1166, 1173, 1169,
	1168, 1172, 333, 334, 335, 336, 337, 1200, 338, 340,
	1194, 1193, 1113, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 1185, 351, 0,
	352, 353, 354, 0, 355, 356, 357, 0, 358, 359,
	1119, 360, 361, 362, 364, 366, 363, 365, 367, 368,
	369, 370, 1208, 1209, 371, 1132, 277, 0, 0, 0,
	0, 0, 372, 373, 374, 1192, 0, 0, 0, 375,
	0, 376, 377, 378, 0, 2776, 1219, 379, 380, 381,
	1205, 1206, 382, 383, 384, 385, 386, 387, 388, 389,
	390, 0, 391, 1215, 0, 1142, 392, 0, 393, 394,
	395, 396, 397, 1178, 1179, 1182, 483, 1221, 398, 399,
	0, 400, 401, 402, 403, 404, 0, 0, 0, 278,
	405, 406, 407, 0, 1220, 408, 1187, 1188, 0, 1148,
	0, 409, 410, 1222, 1180, 1223, 411, 412, 413, 1224,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 1216, 1225, 425, 426,
	1226, 0, 427, 428, 429, 430, 431, 432, 435, 1171,
	1170, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1227, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 478, 466, 467, 468, 1228, 477, 465,
	1110, 279, 1229, 479, 480, 481, 1133, 1181, 482, 1195,
	484, 485, 0, 0, 486, 0, 0, 0, 488, 489,
	490, 0, 0, 491, 492, 678, 1230, 493, 1231, 1210,
	494, 495, 1120, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 0, 505, 506, 680, 507, 508, 509, 681,
	510, 511, 512, 1211, 513, 683, 514, 515, 0, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 524, 1191,
	525, 526, 528, 527, 529, 0, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 536, 0, 537,
	538, 539, 540, 535, 541, 542, 543, 544, 545, 0,
	546, 547, 548, 1232, 549, 550, 551, 552, 553, 1121,
	554, 0, 555, 556, 562, 563, 564, 557, 558, 565,
	566, 567, 568, 569, 0, 571, 572, 570, 573, 574,
	575, 1174, 576, 577, 559, 560, 578, 579, 1233, 580,
	581, 582, 583, 584, 585, 586, 1189, 0, 587, 0,
	588, 589, 590, 591, 593, 561, 594, 599, 600, 1236,
	595, 596, 597, 598, 1212, 602, 603, 0, 604, 605,
	1107, 601, 592, 0, 606, 607, 608, 609, 610, 611,
	612, 613, 0, 614, 1201, 1202, 1203, 1204, 0, 623,
	0, 615, 616, 617, 1213, 618, 1214, 1131, 619, 620,
	621, 622, 0, 624, 625, 0, 1114, 626, 627, 628,
	630, 631, 629, 632, 1175, 633, 0, 0, 634, 635,
	636, 695, 1198, 1235, 0, 638, 637, 639, 640, 698,
	641, 642, 0, 0, 0, 0, 643, 644, 699, 645,
	646, 647, 1111, 0, 0, 0, 0, 0, 1153, 1125,
	1126, 1127, 1123, 1124, 1136, 1106, 0, 0, 0, 0,
	0, 0, 1104, 1105, 0, 280, 282, 281, 283, 284,
	285, 286, 1137, 287, 288, 0, 1135, 0, 0, 0,
	1177, 1141, 0, 0, 0, 289, 290, 1217, 291, 292,
	293, 294, 295, 296, 649, 1190, 0, 297, 1197, 298,
	1196, 0, 1207, 299, 300, 301, 302, 303, 304, 1143,
	1176, 1108, 305, 1237, 1238, 656, 0, 306, 307, 1183,
	0, 1164, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1218, 330, 331, 332, 1167, 1165, 1166, 1173, 1169, 1168,
	1172, 333, 334, 335, 336, 337, 1200, 338, 340, 1194,
	1193, 1113, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 1185, 351, 0, 352,
	353, 354, 0, 355, 356, 357, 0, 358, 359, 1119,
	360, 361, 362, 364, 366, 363, 365, 367, 368, 369,
	370, 1208, 1209, 371, 1132, 277, 0, 0, 0, 0,
	0, 372, 373, 374, 1192, 0, 0, 0, 375, 0,
	376, 377, 378, 0, 0, 1219, 379, 380, 381, 1205,
	1206, 382, 383, 384, 385, 386, 387, 388, 389, 390,
	0, 391, 1215, 0, 1142, 392, 0, 393, 394, 395,
	396, 397, 1178, 1179, 1182, 483, 1221, 398, 399, 0,
	400, 401, 402, 403, 404, 0, 0, 0, 278, 405,
	406, 407, 0, 1220, 408, 1187, 1188, 0, 1148, 0,
	409, 410, 1222, 1180, 1223, 411, 412, 413, 1224, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1216, 1225, 425, 426, 1226,
	0, 427, 428, 429, 430, 431, 432, 435, 1171, 1170,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1227,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 478, 466, 467, 468, 1228, 477, 465, 1110,
	279, 1229, 479, 480, 481, 1133, 1181, 482, 1195, 484,
	485, 0, 0, 486, 0, 0, 0, 488, 489, 490,
	0, 0, 491, 492, 678, 1230, 493, 1231, 1210, 494,
	495, 1120, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 0, 505, 506, 680, 507, 508, 509, 681, 510,
	511, 512, 1211, 513, 683, 514, 515, 0, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 524, 1191, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 536, 0, 537, 538,
	539, 540, 535, 541, 542, 543, 544, 545, 0, 546,
	547, 548, 1232, 549, 550, 551, 552, 553, 1121, 554,
	0, 555, 556, 562, 563, 564, 557, 558, 565, 566,
	567, 568, 569, 0, 571, 572, 570, 573, 574, 575,
	1174, 576, 577, 559, 560, 578, 579, 1233, 580, 581,
	582, 583, 584, 585, 586, 1189, 0, 587, 0, 588,
	589, 590, 591, 593, 561, 594, 599, 600, 1236, 595,
	596, 597, 598, 1212, 602, 603, 0, 604, 605, 1107,
	601, 592, 0, 606, 607, 608, 609, 610, 611, 612,
	613, 0, 614, 1201, 1202, 1203, 1204, 0, 623, 0,
	615, 616, 617, 1213, 618, 1214, 1131, 619, 620, 621,
	622, 0, 624, 625, 0, 1114, 626, 627, 628, 630,
	631, 629, 632, 1175, 633, 0, 0, 634, 635, 636,
	695, 1198, 1235, 0, 638, 637, 639, 640, 698, 641,
	642, 0, 0, 0, 0, 643, 644, 699, 645, 646,
	647, 1111, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1106, 0, 0, 0, 0, 0,
	0, 1104, 1105, 0, 0, 0, 0, 0, 0, 0,
	0, 1137, 1910, 0, 2781, 1135, 1153, 1125, 1126, 1127,
	1123, 1124, 1136, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 1177, 1141,
	0, 0, 0, 289, 290, 1217, 291, 292, 293, 294,
	295, 296, 649, 1190, 0, 297, 1197, 298, 1196, 0,
	1207, 299, 300, 301, 302, 303, 304, 1143, 1176, 1108,
	305, 1237, 1238, 656, 0, 306, 307, 1183, 0, 1164,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1218, 330,
	331, 332, 1167, 1165, 1166, 1173, 1169, 1168, 1172, 333,
	334, 335, 336, 337, 1200, 338, 340, 1194, 1193, 1113,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 1185, 351, 0, 352, 353, 354,
	0, 355, 356, 357, 0, 358, 359, 1119, 360, 361,
	362, 364, 366, 363, 365, 367, 368, 369, 370, 1208,
	1209, 371, 1132, 277, 0, 0, 0, 0, 0, 372,
	373, 374, 1192, 0, 0, 0, 375, 0, 376, 377,
	378, 0, 0, 1219, 379, 380, 381, 1205, 1206, 382,
	383, 384, 385, 386, 387, 388, 389, 390, 0, 391,
	1215, 0, 1142, 392, 0, 393, 394, 395, 396, 397,
	1178, 1179, 1182, 483, 1221, 398, 399, 0, 400, 401,
	402, 403, 404, 0, 0, 0, 278, 405, 406, 407,
	0, 1220, 408, 1187, 1188, 0, 1148, 0, 409, 410,
	1222, 1180, 1223, 411, 412, 413, 1224, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 1216, 1225, 425, 426, 1226, 0, 427,
	428, 429, 430, 431, 432, 435, 1171, 1170, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1227, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	478, 466, 467, 468, 1228, 477, 465, 1110, 279, 1229,
	479, 480, 481, 1133, 1181, 482, 1195, 484, 485, 0,
	0, 486, 0, 0, 0, 488, 489, 490, 0, 0,
	491, 492, 678, 1230, 493, 1231, 1210, 494, 495, 1120,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 0,
	505, 506, 680, 507, 508, 509, 681, 510, 511, 512,
	1211, 513, 683, 514, 515, 0, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 524, 1191, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 536, 0, 537, 538, 539, 540,
	535, 541, 542, 543, 544, 545, 0, 546, 547, 548,
	1232, 549, 550, 551, 552, 553, 1121, 554, 0, 555,
	556, 562, 563, 564, 557, 558, 565, 566, 567, 568,
	569, 0, 571, 572, 570, 573, 574, 575, 1174, 576,
	577, 559, 560, 578, 579, 1233, 580, 581, 582, 583,
	584, 585, 586, 1189, 0, 587, 0, 588, 589, 590,
	591, 593, 561, 594, 599, 600, 1236, 595, 596, 597,
	598, 1212, 602, 603, 0, 604, 605, 1107, 601, 592,
	0, 606, 607, 608, 609, 610, 611, 612, 613, 0,
	614, 1201, 1202, 1203, 1204, 0, 623, 0, 615, 616,
	617, 1213, 618, 1214, 1131, 619, 620, 621, 622, 0,
	624, 625, 0, 1114, 626, 627, 628, 630, 631, 629,
	632, 1175, 633, 0, 0, 634, 635, 636, 695, 1198,
	1235, 0, 638, 637, 639, 640, 698, 641, 642, 0,
	0, 0, 0, 643, 644, 699, 645, 646, 647, 1111,
	0, 0, 0, 2779, 0, 1153, 1125, 1126, 1127, 1123,
	1124, 1136, 1106, 0, 0, 0, 0, 0, 0, 1104,
	1105, 0, 280, 282, 281, 283, 284, 285, 286, 1137,
	287, 288, 0, 1135, 0, 0, 0, 1177, 1141, 0,
	0, 0, 289, 290, 1217, 291, 292, 293, 294, 295,
	296, 649, 1190, 0, 297, 1197, 298, 1196, 0, 1207,
	299, 300, 301, 302, 303, 304, 1143, 1176, 1108, 305,
	1237, 1238, 656, 0, 306, 307, 1183, 0, 1164, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1218, 330, 331,
	332, 1167, 1165, 1166, 1173, 1169, 1168, 1172, 333, 334,
	335, 336, 337, 1200, 338, 340, 1194, 1193, 1113, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 1185, 351, 0, 352, 353, 354, 0,
	355, 356, 357, 0, 358, 359, 1119, 360, 361, 362,
	364, 366, 363, 365, 367, 368, 369, 370, 1208, 1209,
	371, 1132, 277, 0, 0, 0, 0, 0, 372, 373,
	374, 1192, 0, 0, 0, 375, 0, 376, 377, 378,
	0, 0, 1219, 379, 380, 381, 1205, 1206, 382, 383,
	384, 385, 386, 387, 388, 389, 390, 0, 391, 1215,
	0, 1142, 392, 0, 393, 394, 395, 396, 397, 1178,
	1179, 1182, 483, 1221, 398, 399, 0, 400, 401, 402,
	403, 404, 0, 0, 0, 278, 405, 406, 407, 0,
	1220, 408, 1187, 1188, 0, 1148, 0, 409, 410, 1222,
	1180, 1223, 411, 412, 413, 1224, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 1216, 1225, 425, 426, 1226, 0, 427, 428,
	429, 430, 431, 432, 435, 1171, 1170, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1227, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 478,
	466, 467, 468, 1228, 477, 465, 1110, 279, 1229, 479,
	480, 481, 1133, 1181, 482, 1195, 484, 485, 0, 0,
	486, 0, 0, 0, 488, 489, 490, 0, 0, 491,
	492, 678, 1230, 493, 1231, 1210, 494, 495, 1120, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 0, 505,
	506, 680, 507, 508, 509, 681, 510, 511, 512, 1211,
	513, 683, 514, 515, 0, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 524, 1191, 525, 526, 528, 527,
	529, 0, 530, 0, 531, 532, 533, 0, 0, 0,
	0, 0, 534, 536, 0, 537, 538, 539, 540, 535,
	541, 542, 543, 544, 545, 0, 546, 547, 548, 1232,
	549, 550, 551, 552, 553, 1121, 554, 0, 555, 556,
	562, 563, 564, 557, 558, 565, 566, 567, 568, 569,
	0, 571, 572, 570, 573, 574, 575, 1174, 576, 577,
	559, 560, 578, 579, 1233, 580, 581, 582, 583, 584,
	585, 586, 1189, 0, 587, 0, 588, 589, 590, 591,
	593, 561, 594, 599, 600, 1236, 595, 596, 597, 598,
	1212, 602, 603, 0, 604, 605, 1107, 601, 592, 0,
	606, 607, 608, 609, 610, 611, 612, 613, 0, 614,
	1201, 1202, 1203, 1204, 0, 623, 0, 615, 616, 617,
	1213, 618, 1214, 1131, 619, 620, 621, 622, 0, 624,
	625, 0, 1114, 626, 627, 628, 630, 631, 629, 632,
	1175, 633, 0, 0, 634, 635, 636, 695, 1198, 1235,
	0, 638, 637, 639, 640, 698, 641, 642, 0, 0,
	0, 0, 643, 644, 699, 645, 646, 647, 1111, 0,
	0, 0, 2767, 0, 1153, 1125, 1126, 1127, 1123, 1124,
	1136, 1106, 0, 0, 0, 0, 0, 0, 1104, 1105,
	0, 280, 282, 281, 283, 284, 285, 286, 1137, 287,
	288, 0, 1135, 0, 0, 0, 1177, 1141, 0, 0,
	0, 289, 290, 1217, 291, 292, 293, 294, 295, 296,
	649, 1190, 0, 297, 1197, 298, 1196, 0, 1207, 299,
	300, 301, 302, 303, 304, 1143, 1176, 1108, 305, 1237,
	1238, 656, 0, 306, 307, 1183, 0, 1164, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1218, 330, 331, 332,
	1167, 1165, 1166, 1173, 1169, 1168, 1172, 333, 334, 335,
	336, 337, 1200, 338, 340, 1194, 1193, 1113, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 1185, 351, 0, 352, 353, 354, 0, 355,
	356, 357, 0, 358, 359, 1119, 360, 361, 362, 364,
	366, 363, 365, 367, 368, 369, 370, 1208, 1209, 371,
	1132, 277, 0, 0, 0, 0, 0, 372, 373, 374,
	1192, 0, 0, 0, 375, 0, 376, 377, 378, 0,
	0, 1219, 379, 380, 381, 1205, 1206, 382, 383, 384,
	385, 386, 387, 388, 389, 390, 0, 391, 1215, 0,
	1142, 392, 0, 393, 394, 395, 396, 397, 1178, 1179,
	1182, 483, 1221, 398, 399, 0, 400, 401, 402, 403,
	404, 0, 0, 0, 278, 405, 406, 407, 0, 1220,
	408, 1187, 1188, 0, 1148, 0, 409, 410, 1222, 1180,
	1223, 411, 412, 413, 1224, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 1216, 1225, 425, 426, 1226, 0, 427, 428, 429,
	430, 431, 432, 435, 1171, 1170, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1227, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 478, 466,
	467, 468, 1228, 477, 465, 1110, 279, 1229, 479, 480,
	481, 1133, 1181, 482, 1195, 484, 485, 0, 0, 486,
	0, 0, 0, 488, 489, 490, 0, 0, 491, 492,
	678, 1230, 493, 1231, 1210, 494, 495, 1120, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 0, 505, 506,
	680, 507, 508, 509, 681, 510, 511, 512, 1211, 513,
	683, 514, 515, 0, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 524, 1191, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 536, 0, 537, 538, 539, 540, 535, 541,
	542, 543, 544, 545, 0, 546, 547, 548, 1232, 549,
	550, 551, 552, 553, 1121, 554, 0, 555, 556, 562,
	563, 564, 557, 558, 565, 566, 567, 568, 569, 0,
	571, 572, 570, 573, 574, 575, 1174, 576, 577, 559,
	560, 578, 579, 1233, 580, 581, 582, 583, 584, 585,
	586, 1189, 0, 587, 0, 588, 589, 590, 591, 593,
	561, 594, 599, 600, 1236, 595, 596, 597, 598, 1212,
	602, 603, 0, 604, 605, 1107, 601, 592, 0, 606,
	607, 608, 609, 610, 611, 612, 613, 0, 614, 1201,
	1202, 1203, 1204, 0, 623, 0, 615, 616, 617, 1213,
	618, 1214, 1131, 619, 620, 621, 622, 0, 624, 625,
	0, 1114, 626, 627, 628, 630, 631, 629, 632, 1175,
	633, 0, 0, 634, 635, 636, 695, 1198, 1235, 0,
	638, 637, 639, 640, 698, 641, 642, 0, 0, 0,
	0, 643, 644, 699, 645, 646, 647, 1111, 0, 0,
	0, 2755, 0, 1153, 1125, 1126, 1127, 1123, 1124, 1136,
	1106, 0, 0, 0, 0, 0, 0, 1104, 1105, 0,
	280, 282, 281, 283, 284, 285, 286, 1137, 287, 288,
	0, 1135, 0, 0, 0, 1177, 1141, 0, 0, 0,
	289, 290, 1217, 291, 292, 293, 294, 295, 296, 649,
	1190, 0, 297, 1197, 298, 1196, 0, 1207, 299, 300,
	301, 302, 303, 304, 1143, 1176, 1108, 305, 1237, 1238,
	656, 0, 306, 307, 1183, 0, 1164, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1218, 330, 331, 332, 1167,
	1165, 1166, 1173, 1169, 1168, 1172, 333, 334, 335, 336,
	337, 1200, 338, 340, 1194, 1193, 1113, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 1185, 351, 0, 352, 353, 354, 0, 355, 356,
	357, 0, 358, 359, 1119, 360, 361, 362, 364, 366,
	363, 365, 367, 368, 369, 370, 1208, 1209, 371, 1132,
	277, 0, 0, 0, 0, 0, 372, 373, 374, 1192,
	0, 0, 0, 375, 0, 376, 377, 378, 0, 0,
	1219, 379, 380, 381, 1205, 1206, 382, 383, 384, 385,
	386, 387, 388, 389, 390, 0, 391, 1215, 0, 1142,
	392, 0, 393, 394, 395, 396, 397, 1178, 1179, 1182,
	483, 1221, 398, 399, 0, 400, 401, 402, 403, 404,
	0, 0, 0, 278, 405, 406, 407, 0, 1220, 408,
	1187, 1188, 0, 1148, 0, 409, 410, 1222, 1180, 1223,
	411, 412, 413, 1224, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	1216, 1225, 425, 426, 1226, 0, 427, 428, 429, 430,
	431, 432, 435, 1171, 1170, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1227, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 478, 466, 467,
	468, 1228, 477, 465, 1110, 279, 1229, 479, 480, 481,
	1133, 1181, 482, 1195, 484, 485, 0, 0, 486, 0,
	0, 0, 488, 489, 490, 0, 0, 491, 492, 678,
	1230, 493, 1231, 1210, 494, 495, 1120, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 0, 505, 506, 680,
	507, 508, 509, 681, 510, 511, 512, 1211, 513, 683,
	514, 515, 0, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 524, 1191, 525, 526, 528, 527, 529, 0,
	530, 0, 531, 532, 533, 0, 0, 0, 0, 0,
	534, 536, 0, 537, 538, 539, 540, 535, 541, 542,
	543, 544, 545, 0, 546, 547, 548, 1232, 549, 550,
	551, 552, 553, 1121, 554, 0, 555, 556, 562, 563,
	564, 557, 558, 565, 566, 567, 568, 569, 0, 571,
	572, 570, 573, 574, 575, 1174, 576, 577, 559, 560,
	578, 579, 1233, 580, 581, 582, 583, 584, 585, 586,
	1189, 0, 587, 0, 588, 589, 590, 591, 593, 561,
	594, 599, 600, 1236, 595, 596, 597, 598, 1212, 602,
	603, 0, 604, 605, 1107, 601, 592, 0, 606, 607,
	608, 609, 610, 611, 612, 613, 0, 614, 1201, 1202,
	1203, 1204, 0, 623, 0, 615, 616, 617, 1213, 618,
	1214, 1131, 619, 620, 621, 622, 0, 624, 625, 0,
	1114, 626, 627, 628, 630, 631, 629, 632, 1175, 633,
	0, 0, 634, 635, 636, 695, 1198, 1235, 0, 638,
	637, 639, 640, 698, 641, 642, 0, 0, 0, 0,
	643, 644, 699, 645, 646, 647, 1111, 0, 0, 0,
	2753, 0, 2744, 2751, 1126, 1127, 1123, 1124, 1136, 1106,
	0, 0, 0, 0, 0, 0, 1104, 1105, 0, 280,
	282, 281, 283, 284, 285, 286, 1137, 287, 288, 0,
	1135, 0, 0, 0, 1177, 1141, 0, 0, 0, 289,
	290, 1217, 291, 292, 293, 294, 295, 296, 649, 1190,
	0, 297, 1197, 298, 1196, 0, 1207, 299, 300, 301,
	302, 303, 304, 1143, 1176, 1108, 305, 1237, 1238, 656,
	0, 306, 307, 1183, 0, 1164, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1218, 330, 331, 332, 1167, 1165,
	1166, 1173, 1169, 1168, 1172, 333, 334, 335, 336, 337,
	1200, 2747, 340, 1194, 1193, 1113, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	1185, 351, 0, 352, 353, 354, 0, 355, 356, 357,
	0, 358, 359, 1119, 360, 361, 362, 364, 366, 363,
	365, 367, 368, 369, 370, 1208, 1209, 371, 1132, 277,
	0, 0, 0, 0, 0, 372, 373, 374, 1192, 0,
	0, 0, 375, 0, 376, 377, 378, 0, 0, 1219,
	379, 380, 381, 1205, 1206, 382, 383, 384, 385, 386,
	387, 388, 389, 390, 0, 391, 1215, 0, 1142, 392,
	0, 393, 394, 395, 2748, 397, 1178, 1179, 1182, 483,
	1221, 398, 399, 0, 400, 401, 402, 403, 404, 0,
	0, 0, 278, 405, 406, 407, 0, 1220, 408, 1187,
	1188, 0, 1148, 0, 409, 410, 1222, 1180, 1223, 411,
	412, 413, 1224, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 1216,
	1225, 425, 426, 1226, 0, 427, 428, 429, 430, 431,
	432, 435, 1171, 1170, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 2749, 445, 2746, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1227, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 478, 466, 467, 468,
	1228, 477, 465, 1110, 279, 1229, 479, 480, 481, 1133,
	1181, 482, 1195, 484, 485, 0, 0, 486, 0, 0,
	0, 488, 489, 490, 0, 0, 491, 492, 678, 1230,
	493, 1231, 1210, 494, 495, 1120, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 0, 505, 506, 680, 507,
	508, 509, 681, 510, 511, 512, 1211, 513, 683, 514,
	515, 0, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 524, 1191, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	536, 0, 537, 538, 539, 540, 535, 541, 542, 543,
	544, 545, 0, 546, 547, 548, 1232, 549, 550, 551,
	552, 553, 1121, 554, 0, 555, 556, 562, 563, 564,
	557, 558, 565, 566, 567, 568, 2750, 0, 571, 572,
	570, 573, 574, 575, 1174, 576, 577, 559, 560, 578,
	579, 1233, 580, 581, 582, 583, 584, 585, 586, 1189,
	0, 587, 0, 588, 589, 590, 591, 593, 561, 594,
	599, 600, 1236, 595, 596, 597, 598, 1212, 602, 603,
	0, 604, 605, 1107, 601, 592, 0, 606, 607, 608,
	609, 610, 611, 612, 613, 0, 614, 1201, 1202, 1203,
	1204, 0, 623, 0, 615, 616, 617, 1213, 618, 1214,
	1131, 619, 620, 621, 622, 0, 624, 625, 0, 1114,
	626, 627, 628, 630, 631, 629, 632, 1175, 633, 0,
	0, 634, 635, 636, 695, 1198, 1235, 0, 638, 637,
	639, 640, 698, 641, 642, 0, 0, 0, 0, 643,
	644, 699, 645, 2745, 647, 1111, 0, 0, 0, 2741,
	0, 2744, 2751, 1126, 1127, 1123, 1124, 1136, 1106, 0,
	0, 0, 0, 0, 0, 1104, 1105, 0, 280, 282,
	281, 283, 284, 285, 286, 1137, 287, 288, 0, 1135,
	0, 0, 0, 1177, 1141, 0, 0, 0, 289, 290,
	1217, 291, 292, 293, 294, 295, 296, 649, 1190, 0,
	297, 1197, 298, 1196, 0, 1207, 299, 300, 301, 302,
	303, 304, 1143, 1176, 1108, 305, 1237, 1238, 656, 0,
	306, 307, 1183, 0, 1164, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1218, 330, 331, 332, 1167, 1165, 1166,
	1173, 1169, 1168, 1172, 333, 334, 335, 336, 337, 1200,
	2747, 340, 1194, 1193, 1113, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 1185,
	351, 0, 352, 353, 354, 0, 355, 356, 357, 0,
	358, 359, 1119, 360, 361, 362, 364, 366, 363, 365,
	367, 368, 369, 370, 1208, 1209, 371, 1132, 277, 0,
	0, 0, 0, 0, 372, 373, 374, 1192, 0, 0,
	0, 375, 0, 376, 377, 378, 0, 0, 1219, 379,
	380, 381, 1205, 1206, 382, 383, 384, 385, 386, 387,
	388, 389, 390, 0, 391, 1215, 0, 1142, 392, 0,
	393, 394, 395, 2748, 397, 1178, 1179, 1182, 483, 1221,
	398, 399, 0, 400, 401, 402, 403, 404, 0, 0,
	0, 278, 405, 406, 407, 0, 1220, 408, 1187, 1188,
	0, 1148, 0, 409, 410, 1222, 1180, 1223, 411, 412,
	413, 1224, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 1216, 1225,
	425, 426, 1226, 0, 427, 428, 429, 430, 431, 432,
	435, 1171, 1170, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 2749, 445, 2746, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1227, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 478, 466, 467, 468, 1228,
	477, 465, 1110, 279, 1229, 479, 480, 481, 1133, 1181,
	482, 1195, 484, 485, 0, 0, 486, 0, 0, 0,
	488, 489, 490, 0, 0, 491, 492, 678, 1230, 493,
	1231, 1210, 494, 495, 1120, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 0, 505, 506, 680, 507, 508,
	509, 681, 510, 511, 512, 1211, 513, 683, 514, 515,
	0, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	524, 1191, 525, 526, 528, 527, 529, 0, 530, 0,
	531, 532, 533, 0, 0, 0, 0, 0, 534, 536,
	0, 537, 538, 539, 540, 535, 541, 542, 543, 544,
	545, 0, 546, 547, 548, 1232, 549, 550, 551, 552,
	553, 1121, 554, 0, 555, 556, 562, 563, 564, 557,
	558, 565, 566, 567, 568, 2750, 0, 571, 572, 570,
	573, 574, 575, 1174, 576, 577, 559, 560, 578, 579,
	1233, 580, 581, 582, 583, 584, 585, 586, 1189, 0,
	587, 0, 588, 589, 590, 591, 593, 561, 594, 599,
	600, 1236, 595, 596, 597, 598, 1212, 602, 603, 0,
	604, 605, 1107, 601, 592, 0, 606, 607, 608, 609,
	610, 611, 612, 613, 0, 614, 1201, 1202, 1203, 1204,
	0, 623, 0, 615, 616, 617, 1213, 618, 1214, 1131,
	619, 620, 621, 622, 0, 624, 625, 0, 1114, 626,
	627, 628, 630, 631, 629, 632, 1175, 633, 0, 0,
	634, 635, 636, 695, 1198, 1235, 0, 638, 637, 639,
	640, 698, 641, 642, 0, 0, 0, 0, 643, 644,
	699, 645, 2745, 647, 1111, 0, 0, 0, 0, 0,
	1153, 1125, 1126, 1127, 1123, 1124, 1136, 1106, 0, 0,
	0, 0, 0, 0, 1104, 1105, 0, 280, 282, 281,
	283, 284, 285, 286, 1137, 287, 288, 0, 1135, 0,
	0, 0, 1177, 1141, 0, 0, 0, 289, 290, 1217,
	291, 292, 293, 294, 295, 296, 649, 1190, 0, 297,
	1197, 298, 1196, 0, 1207, 299, 300, 301, 302, 303,
	304, 1143, 1176, 1108, 305, 1237, 1238, 656, 0, 306,
	307, 1183, 0, 1164, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1218, 330, 331, 332, 1167, 1165, 1166, 1173,
	1169, 1168, 1172, 333, 334, 335, 336, 337, 1200, 338,
	340, 1194, 1193, 1113, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1185, 351,
	0, 352, 353, 354, 0, 355, 356, 357, 0, 358,
	359, 1119, 360, 361, 362, 364, 366, 363, 365, 367,
	368, 369, 370, 1208, 1209, 371, 1132, 277, 0, 0,
	0, 0, 0, 372, 373, 374, 1192, 0, 0, 0,
	375, 0, 376, 377, 378, 0, 0, 1219, 379, 380,
	381, 1205, 1206, 382, 383, 384, 385, 386, 387, 388,
	389, 390, 0, 391, 1215, 0, 1142, 392, 0, 393,
	394, 395, 396, 397, 1178, 1179, 1182, 483, 1221, 398,
	399, 0, 400, 401, 402, 403, 404, 0, 0, 0,
	278, 405, 406, 407, 0, 1220, 408, 1187, 1188, 0,
	1148, 0, 409, 410, 1222, 1180, 1223, 411, 412, 413,
	1224, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 1216, 1225, 425,
	426, 1226, 0, 427, 428, 429, 430, 431, 432, 435,
	1171, 1170, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1227, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 478, 466, 467, 468, 1228, 477,
	465, 1110, 279, 1229, 479, 480, 481, 1133, 1181, 482,
	1195, 484, 485, 0, 0, 486, 0, 0, 0, 488,
	489, 490, 0, 0, 491, 492, 678, 1230, 493, 1231,
	1210, 494, 495, 1120, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 0, 505, 506, 680, 507, 508, 509,
	681, 510, 511, 512, 1211, 513, 683, 514, 515, 0,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 524,
	1191, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 536, 0,
	537, 538, 539, 540, 535, 541, 542, 543, 544, 545,
	0, 546, 547, 548, 1232, 549, 550, 551, 552, 553,
	1121, 554, 0, 555, 556, 562, 563, 564, 557, 558,
	565, 566, 567, 568, 569, 0, 571, 572, 570, 573,
	574, 575, 1174, 576, 577, 559, 560, 578, 579, 1233,
	580, 581, 582, 583, 584, 585, 586, 1189, 0, 587,
	0, 588, 589, 590, 591, 593, 561, 594, 599, 600,
	1236, 595, 596, 597, 598, 1212, 602, 603, 0, 604,
	605, 1107, 601, 592, 0, 606, 607, 608, 609, 610,
	611, 612, 613, 0, 614, 1201, 1202, 1203, 1204, 0,
	623, 0, 615, 616, 617, 1213, 618, 1214, 1131, 619,
	620, 621, 622, 0, 624, 625, 0, 1114, 626, 627,
	628, 630, 631, 629, 632, 1175, 633, 0, 0, 634,
	635, 636, 695, 1198, 1235, 0, 638, 637, 639, 640,
	698, 641, 642, 0, 0, 0, 0, 643, 644, 699,
	645, 646, 647, 1111, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1106, 0, 0, 0,
	0, 0, 0, 1104, 1105, 0, 0, 0, 0, 0,
	0, 1918, 0, 1137, 0, 0, 0, 1135, 1153, 1125,
	1126, 1127, 1123, 1124, 1136, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 2496, 287, 288, 0, 0, 0, 0, 0,
	1177, 1141, 0, 0, 0, 289, 290, 1217, 291, 292,
	293, 294, 295, 296, 649, 1190, 0, 297, 1197, 298,
	1196, 0, 1207, 299, 300, 301, 302, 303, 304, 1143,
	1176, 1108, 305, 1237, 1238, 656, 0, 306, 307, 1183,
	0, 1164, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1218, 330, 331, 332, 1167, 1165, 1166, 1173, 1169, 1168,
	1172, 333, 334, 335, 336, 337, 1200, 338, 340, 1194,
	1193, 1113, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 1185, 351, 0, 352,
	353, 354, 0, 355, 356, 357, 0, 358, 359, 1119,
	360, 361, 362, 364, 366, 363, 365, 367, 368, 369,
	370, 1208, 1209, 371, 1132, 277, 0, 0, 0, 0,
	0, 372, 373, 374, 1192, 0, 0, 0, 375, 0,
	376, 377, 378, 0, 0, 1219, 379, 380, 381, 1205,
	1206, 382, 383, 384, 385, 386, 387, 388, 389, 390,
	0, 391, 1215, 0, 1142, 392, 0, 393, 394, 395,
	396, 397, 1178, 1179, 1182, 483, 1221, 398, 399, 0,
	400, 401, 402, 403, 404, 0, 0, 0, 278, 405,
	406, 407, 0, 1220, 408, 1187, 1188, 0, 1148, 0,
	409, 410, 1222, 1180, 1223, 411, 412, 413, 1224, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1216, 1225, 425, 426, 1226,
	0, 427, 428, 429, 430, 431, 432, 435, 1171, 1170,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1227,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 478, 466, 467, 468, 1228, 477, 465, 1110,
	279, 1229, 479, 480, 481, 1133, 1181, 482, 1195, 484,
	485, 0, 0, 486, 0, 0, 0, 488, 489, 490,
	0, 0, 491, 492, 678, 1230, 493, 1231, 1210, 494,
	495, 1120, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 0, 505, 506, 680, 507, 508, 509, 681, 510,
	511, 512, 1211, 513, 683, 514, 515, 0, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 524, 1191, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 536, 0, 537, 538,
	539, 540, 535, 541, 542, 543, 544, 545, 0, 546,
	547, 548, 1232, 549, 550, 551, 552, 553, 1121, 554,
	0, 555, 556, 562, 563, 564, 557, 558, 565, 566,
	567, 568, 569, 0, 571, 572, 570, 573, 574, 575,
	1174, 576, 577, 559, 560, 578, 579, 1233, 580, 581,
	582, 583, 584, 585, 586, 1189, 0, 587, 0, 588,
	589, 590, 591, 593, 561, 594, 599, 600, 1236, 595,
	596, 597, 598, 1212, 602, 603, 0, 604, 605, 1107,
	601, 592, 0, 606, 607, 608, 609, 610, 611, 612,
	613, 0, 614, 1201, 1202, 1203, 1204, 0, 623, 0,
	615, 616, 617, 1213, 618, 1214, 1131, 619, 620, 621,
	622, 0, 624, 625, 0, 1114, 626, 627, 628, 630,
	631, 629, 632, 1175, 633, 0, 0, 634, 635, 636,
	695, 1198, 1235, 0, 638, 637, 639, 640, 698, 641,
	642, 0, 0, 0, 0, 643, 644, 699, 645, 646,
	647, 1111, 0, 0, 0, 2458, 0, 1153, 1125, 1126,
	1127, 1123, 1124, 1136, 1106, 0, 0, 0, 0, 0,
	0, 1104, 1105, 0, 280, 282, 281, 283, 284, 285,
	286, 1137, 287, 288, 0, 1135, 0, 0, 0, 1177,
	1141, 0, 0, 0, 289, 290, 1217, 291, 292, 293,
	294, 295, 296, 649, 1190, 0, 297, 1197, 298, 1196,
	0, 1207, 299, 300, 301, 302, 303, 304, 1143, 1176,
	1108, 305, 1237, 1238, 656, 0, 306, 307, 1183, 0,
	1164, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1218,
	330, 331, 332, 1167, 1165, 1166, 1173, 1169, 1168, 1172,
	333, 334, 335, 336, 337, 1200, 338, 340, 1194, 1193,
	1113, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 1185, 351, 0, 352, 353,
	354, 0, 355, 356, 357, 0, 358, 359, 1119, 360,
	361, 362, 364, 366, 363, 365, 367, 368, 369, 370,
	1208, 1209, 371, 1132, 277, 0, 0, 0, 0, 0,
	372, 373, 374, 1192, 0, 0, 0, 375, 0, 376,
	377, 378, 0, 0, 1219, 379, 380, 381, 1205, 1206,
	382, 383, 384, 385, 386, 387, 388, 389, 390, 0,
	391, 1215, 0, 1142, 392, 0, 393, 394, 395, 396,
	397, 1178, 1179, 1182, 483, 1221, 398, 399, 0, 400,
	401, 402, 403, 404, 0, 0, 0, 278, 405, 406,
	407, 0, 1220, 408, 1187, 1188, 0, 1148, 0, 409,
	410, 1222, 1180, 1223, 411, 412, 413, 1224, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 1216, 1225, 425, 426, 1226, 0,
	427, 428, 429, 430, 431, 432, 435, 1171, 1170, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1227, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 478, 466, 467, 468, 1228, 477, 465, 1110, 279,
	1229, 479, 480, 481, 1133, 1181, 482, 1195, 484, 485,
	0, 0, 486, 0, 0, 0, 488, 489, 490, 0,
	0, 491, 492, 678, 1230, 493, 1231, 1210, 494, 495,
	1120, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	0, 505, 506, 680, 507, 508, 509, 681, 510, 511,
	512, 1211, 513, 683, 514, 515, 0, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 524, 1191, 525, 526,
	528, 527, 529, 0, 530, 0, 531, 532, 533, 0,
	0, 0, 0, 0, 534, 536, 0, 537, 538, 539,
	540, 535, 541, 542, 543, 544, 545, 0, 546, 547,
	548, 1232, 549, 550, 551, 552, 553, 1121, 554, 0,
	555, 556, 562, 563, 564, 557, 558, 565, 566, 567,
	568, 569, 0, 571, 572, 570, 573, 574, 575, 1174,
	576, 577, 559, 560, 578, 579, 1233, 580, 581, 582,
	583, 584, 585, 586, 1189, 0, 587, 0, 588, 589,
	590, 591, 593, 561, 594, 599, 600, 1236, 595, 596,
	597, 598, 1212, 602, 603, 0, 604, 605, 1107, 601,
	592, 0, 606, 607, 608, 609, 610, 611, 612, 613,
	0, 614, 1201, 1202, 1203, 1204, 0, 623, 0, 615,
	616, 617, 1213, 618, 1214, 1131, 619, 620, 621, 622,
	0, 624, 625, 0, 1114, 626, 627, 628, 630, 631,
	629, 632, 1175, 633, 0, 0, 634, 635, 636, 695,
	1198, 1235, 0, 638, 637, 639, 640, 698, 641, 642,
	0, 0, 0, 0, 643, 644, 699, 645, 646, 647,
	1111, 0, 0, 0, 2431, 0, 1153, 1125, 1126, 1127,
	1123, 1124, 1136, 1106, 0, 0, 0, 0, 0, 0,
	1104, 1105, 0, 280, 282, 281, 283, 284, 285, 286,
	1137, 287, 288, 0, 1135, 0, 0, 0, 1177, 1141,
	0, 0, 0, 289, 290, 1217, 291, 292, 293, 294,
	295, 296, 649, 1190, 0, 297, 1197, 298, 1196, 0,
	1207, 299, 300, 301, 302, 303, 304, 1143, 1176, 1108,
	305, 1237, 1238, 656, 0, 306, 307, 1183, 0, 1164,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1218, 330,
	331, 332, 1167, 1165, 1166, 1173, 1169, 1168, 1172, 333,
	334, 335, 336, 337, 1200, 338, 340, 1194, 1193, 1113,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 1185, 351, 0, 352, 353, 354,
	0, 355, 356, 357, 0, 358, 359, 1119, 360, 361,
	362, 364, 366, 363, 365, 367, 368, 369, 370, 1208,
	1209, 371, 1132, 277, 0, 0, 0, 0, 0, 372,
	373, 374, 1192, 0, 0, 0, 375, 0, 376, 377,
	378, 0, 0, 1219, 379, 380, 381, 1205, 1206, 382,
	383, 384, 385, 386, 387, 388, 389, 390, 0, 391,
	1215, 0, 1142, 392, 0, 393, 394, 395, 396, 397,
	1178, 1179, 1182, 483, 1221, 398, 399, 0, 400, 401,
	402, 403, 404, 0, 0, 0, 278, 405, 406, 407,
	0, 1220, 408, 1187, 1188, 0, 1148, 0, 409, 410,
	1222, 1180, 1223, 411, 412, 413, 1224, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 1216, 1225, 425, 426, 1226, 0, 427,
	428, 429, 430, 431, 432, 435, 1171, 1170, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1227, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	478, 466, 467, 468, 1228, 477, 465, 1110, 279, 1229,
	479, 480, 481, 1133, 1181, 482, 1195, 484, 485, 0,
	0, 486, 0, 0, 0, 488, 489, 490, 0, 0,
	491, 492, 678, 1230, 493, 1231, 1210, 494, 495, 1120,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 0,
	505, 506, 680, 507, 508, 509, 681, 510, 511, 512,
	1211, 513, 683, 514, 515, 0, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 524, 1191, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 536, 0, 537, 538, 539, 540,
	535, 541, 542, 543, 544, 545, 0, 546, 547, 548,
	1232, 549, 550, 551, 552, 553, 1121, 554, 0, 555,
	556, 562, 563, 564, 557, 558, 565, 566, 567, 568,
	569, 0, 571, 572, 570, 573, 574, 575, 1174, 576,
	577, 559, 560, 578, 579, 1233, 580, 581, 582, 583,
	584, 585, 586, 1189, 0, 587, 0, 588, 589, 590,
	591, 593, 561, 594, 599, 600, 1236, 595, 596, 597,
	598, 1212, 602, 603, 0, 604, 605, 1107, 601, 592,
	0, 606, 607, 608, 609, 610, 611, 612, 613, 0,
	614, 1201, 1202, 1203, 1204, 0, 623, 0, 615, 616,
	617, 1213, 618, 1214, 1131, 619, 620, 621, 622, 0,
	624, 625, 0, 1114, 626, 627, 628, 630, 631, 629,
	632, 1175, 633, 0, 0, 634, 635, 636, 695, 1198,
	1235, 0, 638, 637, 639, 640, 698, 641, 642, 0,
	0, 0, 0, 643, 644, 699, 645, 646, 647, 1111,
	0, 0, 0, 1756, 0, 1153, 1125, 1126, 1127, 1123,
	1124, 1136, 1106, 0, 0, 0, 0, 0, 0, 1104,
	1105, 0, 280, 282, 281, 283, 284, 285, 286, 1137,
	287, 288, 0, 1135, 0, 0, 0, 1177, 1141, 0,
	0, 0, 289, 290, 1217, 291, 292, 293, 294, 295,
	296, 649, 1190, 0, 297, 1197, 298, 1196, 0, 1207,
	299, 300, 301, 302, 303, 304, 1143, 1176, 1108, 305,
	1237, 1238, 656, 0, 306, 307, 1183, 0, 1164, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1218, 330, 331,
	332, 1167, 1165, 1166, 1173, 1169, 1168, 1172, 333, 334,
	335, 336, 337, 1200, 338, 340, 1194, 1193, 1113, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 1185, 351, 0, 352, 353, 354, 0,
	355, 356, 357, 0, 358, 359, 1119, 360, 361, 362,
	364, 366, 363, 365, 367, 368, 369, 370, 1208, 1209,
	371, 1132, 277, 0, 0, 0, 0, 0, 372, 373,
	374, 1192, 0, 0, 0, 375, 0, 376, 377, 378,
	0, 0, 1219, 379, 380, 381, 1205, 1206, 382, 383,
	384, 385, 386, 387, 388, 389, 390, 0, 391, 1215,
	0, 1142, 392, 0, 393, 394, 395, 396, 397, 1178,
	1179, 1182, 483, 1221, 398, 399, 0, 400, 401, 402,
	403, 404, 0, 0, 0, 278, 405, 406, 407, 0,
	1220, 408, 1187, 1188, 0, 1148, 0, 409, 410, 1222,
	1180, 1223, 411, 412, 413, 1224, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 1216, 1225, 425, 426, 1226, 0, 427, 428,
	429, 430, 431, 432, 435, 1171, 1170, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1227, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 478,
	466, 467, 468, 1228, 477, 465, 1110, 279, 1229, 479,
	480, 481, 1133, 1181, 482, 1195, 484, 485, 0, 0,
	486, 0, 0, 0, 488, 489, 490, 0, 0, 491,
	492, 678, 1230, 493, 1231, 1210, 494, 495, 1120, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 0, 505,
	506, 680, 507, 508, 509, 681, 510, 511, 512, 1211,
	513, 683, 514, 515, 0, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 524, 1191, 525, 526, 528, 527,
	529, 0, 530, 0, 531, 532, 533, 0, 0, 0,
	0, 0, 534, 536, 0, 537, 538, 539, 540, 535,
	541, 542, 543, 544, 545, 0, 546, 547, 548, 1232,
	549, 550, 551, 552, 553, 1121, 554, 0, 555, 556,
	562, 563, 564, 557, 558, 565, 566, 567, 568, 569,
	0, 571, 572, 570, 573, 574, 575, 1174, 576, 577,
	559, 560, 578, 579, 1233, 580, 581, 582, 583, 584,
	585, 586, 1189, 0, 587, 0, 588, 589, 590, 591,
	593, 561, 594, 599, 600, 1236, 595, 596, 597, 598,
	1212, 602, 603, 0, 604, 605, 1107, 601, 592, 0,
	606, 607, 608, 609, 610, 611, 612, 613, 0, 614,
	1201, 1202, 1203, 1204, 0, 623, 0, 615, 616, 617,
	1213, 618, 1214, 1131, 619, 620, 621, 622, 0, 624,
	625, 0, 1114, 626, 627, 628, 630, 631, 629, 632,
	1175, 633, 0, 0, 634, 635, 636, 695, 1198, 1235,
	0, 638, 637, 639, 640, 698, 641, 642, 0, 0,
	0, 0, 643, 644, 699, 645, 646, 647, 1111, 0,
	0, 0, 1685, 0, 1153, 1125, 1126, 1127, 1123, 1124,
	1136, 1106, 0, 0, 0, 0, 0, 0, 1104, 1105,
	0, 280, 282, 281, 283, 284, 285, 286, 1137, 287,
	288, 0, 1135, 0, 0, 0, 1177, 1141, 0, 0,
	0, 289, 290, 1217, 291, 292, 293, 294, 295, 296,
	649, 1190, 0, 297, 1197, 298, 1196, 0, 1207, 299,
	300, 301, 302, 303, 304, 1143, 1176, 1108, 305, 1237,
	1238, 656, 0, 306, 307, 1183, 0, 1164, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1218, 330, 331, 332,
	1167, 1165, 1166, 1173, 1169, 1168, 1172, 333, 334, 335,
	336, 337, 1200, 338, 340, 1194, 1193, 1113, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 1185, 351, 0, 352, 353, 354, 0, 355,
	356, 357, 0, 358, 359, 1119, 360, 361, 362, 364,
	366, 363, 365, 367, 368, 369, 370, 1208, 1209, 371,
	1132, 277, 0, 0, 0, 0, 0, 372, 373, 374,
	1192, 0, 0, 0, 375, 0, 376, 377, 378, 0,
	0, 1219, 379, 380, 381, 1205, 1206, 382, 383, 384,
	385, 386, 387, 388, 389, 390, 0, 391, 1215, 0,
	1142, 392, 0, 393, 394, 395, 396, 397, 1178, 1179,
	1182, 483, 1221, 398, 399, 0, 400, 401, 402, 403,
	404, 0, 0, 0, 278, 405, 406, 407, 0, 1220,
	408, 1187, 1188, 0, 1148, 0, 409, 410, 1222, 1180,
	1223, 411, 412, 413, 1224, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 1216, 1225, 425, 426, 1226, 0, 427, 428, 429,
	430, 431, 432, 435, 1171, 1170, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1227, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 478, 466,
	467, 468, 1228, 477, 465, 1110, 279, 1229, 479, 480,
	481, 1133, 1181, 482, 1195, 484, 485, 0, 0, 486,
	0, 0, 0, 488, 489, 490, 0, 0, 491, 492,
	678, 1230, 493, 1231, 1210, 494, 495, 1120, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 0, 505, 506,
	680, 507, 508, 509, 681, 510, 511, 512, 1211, 513,
	683, 514, 515, 0, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 524, 1191, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 536, 0, 537, 538, 539, 540, 535, 541,
	542, 543, 544, 545, 0, 546, 547, 548, 1232, 549,
	550, 551, 552, 553, 1121, 554, 0, 555, 556, 562,
	563, 564, 557, 558, 565, 566, 567, 568, 569, 0,
	571, 572, 570, 573, 574, 575, 1174, 576, 577, 559,
	560, 578, 579, 1233, 580, 581, 582, 583, 584, 585,
	586, 1189, 0, 587, 0, 588, 589, 590, 591, 593,
	561, 594, 599, 600, 1236, 595, 596, 597, 598, 1212,
	602, 603, 0, 604, 605, 1107, 601, 592, 0, 606,
	607, 608, 609, 610, 611, 612, 613, 0, 614, 1201,
	1202, 1203, 1204, 0, 623, 0, 615, 616, 617, 1213,
	618, 1214, 1131, 619, 620, 621, 622, 0, 624, 625,
	0, 1114, 626, 627, 628, 630, 631, 629, 632, 1175,
	633, 0, 0, 634, 635, 636, 695, 1198, 1235, 0,
	638, 637, 639, 640, 698, 641, 642, 0, 0, 0,
	0, 643, 644, 699, 645, 646, 647, 1111, 0, 0,
	0, 1680, 0, 1153, 1125, 1126, 1127, 1123, 1124, 1136,
	1106, 0, 0, 0, 0, 0, 0, 1104, 1105, 0,
	280, 282, 281, 283, 284, 285, 286, 1137, 287, 288,
	0, 1135, 0, 0, 0, 1177, 1141, 0, 0, 0,
	289, 290, 1217, 291, 292, 293, 294, 295, 296, 649,
	1190, 0, 297, 1197, 298, 1196, 0, 1207, 299, 300,
	301, 302, 303, 304, 1143, 1176, 1108, 305, 1237, 1238,
	656, 0, 306, 307, 1183, 0, 1164, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1218, 330, 331, 332, 1167,
	1165, 1166, 1173, 1169, 1168, 1172, 333, 334, 335, 336,
	337, 1200, 338, 340, 1194, 1193, 1113, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 1185, 351, 0, 352, 353, 354, 0, 355, 356,
	357, 0, 358, 359, 1119, 360, 361, 362, 364, 366,
	363, 365, 367, 368, 369, 370, 1208, 1209, 371, 1132,
	277, 0, 0, 0, 0, 0, 372, 373, 374, 1192,
	0, 0, 0, 375, 0, 376, 377, 378, 0, 0,
	1219, 379, 380, 381, 1205, 1206, 382, 383, 384, 385,
	386, 387, 388, 389, 390, 0, 391, 1215, 0, 1142,
	392, 0, 393, 394, 395, 396, 397, 1178, 1179, 1182,
	483, 1221, 398, 399, 0, 400, 401, 402, 403, 404,
	0, 0, 0, 278, 405, 406, 407, 0, 1220, 408,
	1187, 1188, 0, 1148, 0, 409, 410, 1222, 1180, 1223,
	411, 412, 413, 1224, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	1216, 1225, 425, 426, 1226, 0, 427, 428, 429, 430,
	431, 432, 435, 1171, 1170, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1227, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 478, 466, 467,
	468, 1228, 477, 465, 1110, 279, 1229, 479, 480, 481,
	1133, 1181, 482, 1195, 484, 485, 0, 0, 486, 0,
	0, 0, 488, 489, 490, 0, 0, 491, 492, 678,
	1230, 493, 1231, 1210, 494, 495, 1120, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 0, 505, 506, 680,
	507, 508, 509, 681, 510, 511, 512, 1211, 513, 683,
	514, 515, 0, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 524, 1191, 525, 526, 528, 527, 529, 0,
	530, 0, 531, 532, 533, 0, 0, 0, 0, 0,
	534, 536, 0, 537, 538, 539, 540, 535, 541, 542,
	543, 544, 545, 0, 546, 547, 548, 1232, 549, 550,
	551, 552, 553, 1121, 554, 0, 555, 556, 562, 563,
	564, 557, 558, 565, 566, 567, 568, 569, 0, 571,
	572, 570, 573, 574, 575, 1174, 576, 577, 559, 560,
	578, 579, 1233, 580, 581, 582, 583, 584, 585, 586,
	1189, 0, 587, 0, 588, 589, 590, 591, 593, 561,
	594, 599, 600, 1236, 595, 596, 597, 598, 1212, 602,
	603, 0, 604, 605, 1107, 601, 592, 0, 606, 607,
	608, 609, 610, 611, 612, 613, 0, 614, 1201, 1202,
	1203, 1204, 0, 623, 0, 615, 616, 617, 1213, 618,
	1214, 1131, 619, 620, 621, 622, 0, 624, 625, 0,
	1114, 626, 627, 628, 630, 631, 629, 632, 1175, 633,
	0, 0, 634, 635, 636, 695, 1198, 1235, 0, 638,
	637, 639, 640, 698, 641, 642, 0, 0, 0, 0,
	643, 644, 699, 645, 646, 647, 1111, 0, 0, 0,
	1667, 0, 1153, 1125, 1126, 1127, 1123, 1124, 1136, 1106,
	0, 0, 0, 0, 0, 0, 1104, 1105, 0, 280,
	282, 281, 283, 284, 285, 286, 1137, 287, 288, 0,
	1135, 0, 0, 0, 1177, 1141, 0, 0, 0, 289,
	290, 1217, 291, 292, 293, 294, 295, 296, 649, 1190,
	0, 297, 1197, 298, 1196, 0, 1207, 299, 300, 301,
	302, 303, 304, 1143, 1176, 1108, 305, 1237, 1238, 656,
	0, 306, 307, 1183, 0, 1164, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1218, 330, 331, 332, 1167, 1165,
	1166, 1173, 1169, 1168, 1172, 333, 334, 335, 336, 337,
	1200, 338, 340, 1194, 1193, 1113, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	1185, 351, 0, 352, 353, 354, 0, 355, 356, 357,
	0, 358, 359, 1119, 360, 361, 362, 364, 366, 363,
	365, 367, 368, 369, 370, 1208, 1209, 371, 1132, 277,
	0, 0, 0, 0, 0, 372, 373, 374, 1192, 0,
	0, 0, 375, 0, 376, 377, 378, 0, 0, 1219,
	379, 380, 381, 1205, 1206, 382, 383, 384, 385, 386,
	387, 388, 389, 390, 0, 391, 1215, 0, 1142, 392,
	0, 393, 394, 395, 396, 397, 1178, 1179, 1182, 483,
	1221, 398, 399, 0, 400, 401, 402, 403, 404, 0,
	0, 0, 278, 405, 406, 407, 0, 1220, 408, 1187,
	1188, 0, 1148, 0, 409, 410, 1222, 1180, 1223, 411,
	412, 413, 1224, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 1216,
	1225, 425, 426, 1226, 0, 427, 428, 429, 430, 431,
	432, 435, 1171, 1170, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1227, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 478, 466, 467, 468,
	1228, 477, 465, 1110, 279, 1229, 479, 480, 481, 1133,
	1181, 482, 1195, 484, 485, 0, 0, 486, 0, 0,
	0, 488, 489, 490, 0, 0, 491, 492, 678, 1230,
	493, 1231, 1210, 494, 495, 1120, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 0, 505, 506, 680, 507,
	508, 509, 681, 510, 511, 512, 1211, 513, 683, 514,
	515, 0, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 524, 1191, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	536, 0, 537, 538, 539, 540, 535, 541, 542, 543,
	544, 545, 0, 546, 547, 548, 1232, 549, 550, 551,
	552, 553, 1121, 554, 0, 555, 556, 562, 563, 564,
	557, 558, 565, 566, 567, 568, 569, 0, 571, 572,
	570, 573, 574, 575, 1174, 576, 577, 559, 560, 578,
	579, 1233, 580, 581, 582, 583, 584, 585, 586, 1189,
	0, 587, 0, 588, 589, 590, 591, 593, 561, 594,
	599, 600, 1236, 595, 596, 597, 598, 1212, 602, 603,
	0, 604, 605, 1107, 601, 592, 0, 606, 607, 608,
	609, 610, 611, 612, 613, 0, 614, 1201, 1202, 1203,
	1204, 0, 623, 0, 615, 616, 617, 1213, 618, 1214,
	1131, 619, 620, 621, 622, 0, 624, 625, 0, 1114,
	626, 627, 628, 630, 631, 629, 632, 1175, 633, 0,
	0, 634, 635, 636, 695, 1198, 1235, 0, 638, 637,
	639, 640, 698, 641, 642, 0, 0, 0, 0, 643,
	644, 699, 645, 646, 647, 1111, 0, 0, 0, 1662,
	0, 1153, 1125, 1126, 1127, 1123, 1124, 1136, 1106, 0,
	0, 0, 0, 0, 0, 1104, 1105, 0, 280, 282,
	281, 283, 284, 285, 286, 1137, 287, 288, 0, 1135,
	0, 0, 0, 1177, 1141, 0, 0, 0, 289, 290,
	1217, 291, 292, 293, 294, 295, 296, 649, 1190, 0,
	297, 1197, 298, 1196, 0, 1207, 299, 300, 301, 302,
	303, 304, 1143, 1176, 1108, 305, 1237, 1238, 656, 0,
	306, 307, 1183, 0, 1164, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1218, 330, 331, 332, 1167, 1165, 1166,
	1173, 1169, 1168, 1172, 333, 334, 335, 336, 337, 1200,
	338, 340, 1194, 1193, 1113, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 1185,
	351, 0, 352, 353, 354, 0, 355, 356, 357, 0,
	358, 359, 1119, 360, 361, 362, 364, 366, 363, 365,
	367, 368, 369, 370, 1208, 1209, 371, 1132, 277, 0,
	0, 0, 0, 0, 372, 373, 374, 1192, 0, 0,
	0, 375, 0, 376, 377, 378, 0, 0, 1219, 379,
	380, 381, 1205, 1206, 382, 383, 384, 385, 386, 387,
	388, 389, 390, 0, 391, 1215, 0, 1142, 392, 0,
	393, 394, 395, 396, 397, 1178, 1179, 1182, 483, 1221,
	398, 399, 0, 400, 401, 402, 403, 404, 0, 0,
	0, 278, 405, 406, 407, 0, 1220, 408, 1187, 1188,
	0, 1148, 0, 409, 410, 1222, 1180, 1223, 411, 412,
	413, 1224, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 1216, 1225,
	425, 426, 1226, 0, 427, 428, 429, 430, 431, 432,
	435, 1171, 1170, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1227, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 478, 466, 467, 468, 1228,
	477, 465, 1110, 279, 1229, 479, 480, 481, 1133, 1181,
	482, 1195, 484, 485, 0, 0, 486, 0, 0, 0,
	488, 489, 490, 0, 0, 491, 492, 678, 1230, 493,
	1231, 1210, 494, 495, 1120, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 0, 505, 506, 680, 507, 508,
	509, 681, 510, 511, 512, 1211, 513, 683, 514, 515,
	0, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	524, 1191, 525, 526, 528, 527, 529, 0, 530, 0,
	531, 532, 533, 0, 0, 0, 0, 0, 534, 536,
	0, 537, 538, 539, 540, 535, 541, 542, 543, 544,
	545, 0, 546, 547, 548, 1232, 549, 550, 551, 552,
	553, 1121, 554, 0, 555, 556, 562, 563, 564, 557,
	558, 565, 566, 567, 568, 569, 0, 571, 572, 570,
	573, 574, 575, 1174, 576, 577, 559, 560, 578, 579,
	1233, 580, 581, 582, 583, 584, 585, 586, 1189, 0,
	587, 0, 588, 589, 590, 591, 593, 561, 594, 599,
	600, 1236, 595, 596, 597, 598, 1212, 602, 603, 0,
	604, 605, 1107, 601, 592, 0, 606, 607, 608, 609,
	610, 611, 612, 613, 0, 614, 1201, 1202, 1203, 1204,
	0, 623, 0, 615, 616, 617, 1213, 618, 1214, 1131,
	619, 620, 621, 622, 0, 624, 625, 0, 1114, 626,
	627, 628, 630, 631, 629, 632, 1175, 633, 0, 0,
	634, 635, 636, 695, 1198, 1235, 0, 638, 637, 639,
	640, 698, 641, 642, 0, 0, 0, 0, 643, 644,
	699, 645, 646, 647, 1111, 0, 0, 0, 1563, 0,
	1153, 1125, 1126, 1127, 1123, 1124, 1136, 1106, 0, 0,
	0, 0, 0, 0, 1104, 1105, 0, 280, 282, 281,
	283, 284, 285, 286, 1137, 287, 288, 0, 1135, 0,
	0, 0, 1177, 1141, 0, 0, 0, 289, 290, 1217,
	291, 292, 293, 294, 295, 296, 649, 1190, 0, 297,
	1197, 298, 1196, 0, 1207, 299, 300, 301, 302, 303,
	304, 1143, 1176, 1108, 305, 1237, 1238, 656, 0, 306,
	307, 1183, 0, 1164, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1218, 330, 331, 332, 1167, 1165, 1166, 1173,
	1169, 1168, 1172, 333, 334, 335, 336, 337, 1200, 338,
	340, 1194, 1193, 1113, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1185, 351,
	0, 352, 353, 354, 0, 355, 356, 357, 0, 358,
	359, 1119, 360, 361, 362, 364, 366, 363, 365, 367,
	368, 369, 370, 1208, 1209, 371, 1132, 277, 0, 0,
	0, 0, 0, 372, 373, 374, 1192, 0, 0, 0,
	375, 0, 376, 377, 378, 0, 0, 1219, 379, 380,
	381, 1205, 1206, 382, 383, 384, 385, 386, 387, 388,
	389, 390, 0, 391, 1215, 0, 1142, 392, 0, 393,
	394, 395, 396, 397, 1562, 1179, 1182, 483, 1221, 398,
	399, 0, 400, 401, 402, 403, 404, 0, 0, 0,
	278, 405, 406, 407, 0, 1220, 408, 1187, 1188, 0,
	1148, 0, 409, 410, 1222, 1180, 1223, 411, 412, 413,
	1224, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 1216, 1225, 425,
	426, 1226, 0, 427, 428, 429, 430, 431, 432, 435,
	1171, 1170, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1227, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 478, 466, 467, 468, 1228, 477,
	465, 1110, 279, 1229, 479, 480, 481, 1133, 1181, 482,
	1195, 484, 485, 0, 0, 486, 0, 0, 0, 488,
	489, 490, 0, 0, 491, 492, 678, 1230, 493, 1231,
	1210, 494, 495, 1120, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 0, 505, 506, 680, 507, 508, 509,
	681, 510, 511, 512, 1211, 513, 683, 514, 515, 0,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 524,
	1191, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 536, 0,
	537, 538, 539, 540, 535, 541, 542, 543, 544, 545,
	0, 546, 547, 548, 1232, 549, 550, 551, 552, 553,
	1121, 554, 0, 555, 556, 562, 563, 564, 557, 558,
	565, 566, 567, 568, 569, 0, 571, 572, 570, 573,
	574, 575, 1174, 576, 577, 559, 560, 578, 579, 1233,
	580, 581, 582, 583, 584, 585, 586, 1189, 0, 587,
	0, 588, 589, 590, 591, 593, 561, 594, 599, 600,
	1236, 595, 596, 597, 598, 1212, 602, 603, 0, 604,
	605, 1107, 601, 592, 0, 606, 607, 608, 609, 610,
	611, 612, 613, 0, 614, 1201, 1202, 1203, 1204, 0,
	623, 0, 615, 616, 617, 1213, 618, 1214, 1131, 619,
	620, 621, 622, 0, 624, 625, 0, 1114, 626, 627,
	628, 630, 631, 629, 632, 1175, 633, 0, 0, 634,
	635, 636, 695, 1198, 1235, 0, 638, 637, 639, 640,
	698, 641, 642, 0, 0, 0, 0, 643, 644, 699,
	645, 646, 647, 1111, 0, 0, 0, 1557, 0, 1153,
	1125, 1126, 1127, 1123, 1124, 1136, 1106, 0, 0, 0,
	0, 0, 0, 1104, 1105, 0, 280, 282, 281, 283,
	284, 285, 286, 1137, 287, 288, 0, 1135, 0, 0,
	0, 1177, 1141, 0, 0, 0, 289, 290, 1217, 291,
	292, 293, 294, 295, 296, 649, 1190, 0, 297, 1197,
	298, 1196, 0, 1207, 299, 300, 301, 302, 303, 304,
	1143, 1176, 1108, 305, 1237, 1238, 656, 0, 306, 307,
	1183, 0, 1164, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1218, 330, 331, 332, 1167, 1165, 1166, 1173, 1169,
	1168, 1172, 333, 334, 335, 336, 337, 1200, 338, 340,
	1194, 1193, 1113, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 1185, 351, 0,
	352, 353, 354, 0, 355, 356, 357, 0, 358, 359,
	1119, 360, 361, 362, 364, 366, 363, 365, 367, 368,
	369, 370, 1208, 1209, 371, 1132, 277, 0, 0, 0,
	0, 0, 372, 373, 374, 1192, 0, 0, 0, 375,
	0, 376, 377, 378, 0, 0, 1219, 379, 380, 381,
	1205, 1206, 382, 383, 384, 385, 386, 387, 388, 389,
	390, 0, 391, 1215, 0, 1142, 392, 0, 393, 394,
	395, 396, 397, 1556, 1179, 1182, 483, 1221, 398, 399,
	0, 400, 401, 402, 403, 404, 0, 0, 0, 278,
	405, 406, 407, 0, 1220, 408, 1187, 1188, 0, 1148,
	0, 409, 410, 1222, 1180, 1223, 411, 412, 413, 1224,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 1216, 1225, 425, 426,
	1226, 0, 427, 428, 429, 430, 431, 432, 435, 1171,
	1170, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1227, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 478, 466, 467, 468, 1228, 477, 465,
	1110, 279, 1229, 479, 480, 481, 1133, 1181, 482, 1195,
	484, 485, 0, 0, 486, 0, 0, 0, 488, 489,
	490, 0, 0, 491, 492, 678, 1230, 493, 1231, 1210,
	494, 495, 1120, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 0, 505, 506, 680, 507, 508, 509, 681,
	510, 511, 512, 1211, 513, 683, 514, 515, 0, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 524, 1191,
	525, 526, 528, 527, 529, 0, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 536, 0, 537,
	538, 539, 540, 535, 541, 542, 543, 544, 545, 0,
	546, 547, 548, 1232, 549, 550, 551, 552, 553, 1121,
	554, 0, 555, 556, 562, 563, 564, 557, 558, 565,
	566, 567, 568, 569, 0, 571, 572, 570, 573, 574,
	575, 1174, 576, 577, 559, 560, 578, 579, 1233, 580,
	581, 582, 583, 584, 585, 586, 1189, 0, 587, 0,
	588, 589, 590, 591, 593, 561, 594, 599, 600, 1236,
	595, 596, 597, 598, 1212, 602, 603, 0, 604, 605,
	1107, 601, 592, 0, 606, 607, 608, 609, 610, 611,
	612, 613, 0, 614, 1201, 1202, 1203, 1204, 0, 623,
	0, 615, 616, 617, 1213, 618, 1214, 1131, 619, 620,
	621, 622, 0, 624, 625, 0, 1114, 626, 627, 628,
	630, 631, 629, 632, 1175, 633, 0, 0, 634, 635,
	636, 695, 1198, 1235, 0, 638, 637, 639, 640, 698,
	641, 642, 0, 0, 0, 0, 643, 644, 699, 645,
	646, 647, 1111, 0, 0, 0, 1550, 0, 1153, 1125,
	1126, 1127, 1123, 1124, 1136, 1106, 0, 0, 0, 0,
	0, 0, 1104, 1105, 0, 280, 282, 281, 283, 284,
	285, 286, 1137, 287, 288, 0, 1135, 0, 0, 0,
	1177, 1141, 0, 0, 0, 289, 290, 1217, 291, 292,
	293, 294, 295, 296, 649, 1190, 0, 297, 1197, 298,
	1196, 0, 1207, 299, 300, 301, 302, 303, 304, 1143,
	1176, 1108, 305, 1237, 1238, 656, 0, 306, 307, 1183,
	0, 1164, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1218, 330, 331, 332, 1167, 1165, 1166, 1173, 1169, 1168,
	1172, 333, 334, 335, 336, 337, 1200, 338, 340, 1194,
	1193, 1113, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 1185, 351, 0, 352,
	353, 354, 0, 355, 356, 357, 0, 358, 359, 1119,
	360, 361, 362, 364, 366, 363, 365, 367, 368, 369,
	370, 1208, 1209, 371, 1132, 277, 0, 0, 0, 0,
	0, 372, 373, 374, 1192, 0, 0, 0, 375, 0,
	376, 377, 378, 0, 0, 1219, 379, 380, 381, 1205,
	1206, 382, 383, 384, 385, 386, 387, 388, 389, 390,
	0, 391, 1215, 0, 1142, 392, 0, 393, 394, 395,
	396, 397, 1178, 1179, 1182, 483, 1221, 398, 399, 0,
	400, 401, 402, 403, 404, 0, 0, 0, 278, 405,
	406, 407, 0, 1220, 408, 1187, 1188, 0, 1148, 0,
	409, 410, 1222, 1180, 1223, 411, 412, 413, 1224, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1216, 1225, 425, 426, 1226,
	0, 427, 428, 429, 430, 431, 432, 435, 1171, 1170,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1227,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 478, 466, 467, 468, 1228, 477, 465, 1110,
	279, 1229, 479, 480, 481, 1133, 1181, 482, 1195, 484,
	485, 0, 0, 486, 0, 0, 0, 488, 489, 490,
	0, 0, 491, 492, 678, 1230, 493, 1231, 1210, 494,
	495, 1120, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 0, 505, 506, 680, 507, 508, 509, 681, 510,
	511, 512, 1211, 513, 683, 514, 515, 0, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 524, 1191, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 536, 0, 537, 538,
	539, 540, 535, 541, 542, 543, 544, 545, 0, 546,
	547, 548, 1232, 549, 550, 551, 552, 553, 1121, 554,
	0, 555, 556, 562, 563, 564, 557, 558, 565, 566,
	567, 568, 569, 0, 571, 572, 570, 573, 574, 575,
	1174, 576, 577, 559, 560, 578, 579, 1233, 580, 581,
	582, 583, 584, 585, 586, 1189, 0, 587, 0, 588,
	589, 590, 591, 593, 561, 594, 599, 600, 1236, 595,
	596, 597, 598, 1212, 602, 603, 0, 604, 605, 1107,
	601, 592, 0, 606, 607, 608, 609, 610, 611, 612,
	613, 0, 614, 1201, 1202, 1203, 1204, 0, 623, 0,
	615, 616, 617, 1213, 618, 1214, 1131, 619, 620, 621,
	622, 0, 624, 625, 0, 1114, 626, 627, 628, 630,
	631, 629, 632, 1175, 633, 0, 0, 634, 635, 636,
	695, 1198, 1235, 0, 638, 637, 639, 640, 698, 641,
	642, 0, 0, 0, 0, 643, 644, 699, 645, 646,
	647, 1111, 0, 0, 0, 1512, 0, 1153, 1125, 1126,
	1127, 1123, 1124, 1136, 1106, 0, 0, 0, 0, 0,
	0, 1104, 1105, 0, 280, 282, 281, 283, 284, 285,
	286, 1137, 287, 288, 0, 1135, 0, 0, 0, 1177,
	1141, 0, 0, 0, 289, 290, 1217, 291, 292, 293,
	294, 295, 296, 649, 1190, 0, 297, 1197, 298, 1196,
	0, 1207, 299, 300, 301, 302, 303, 304, 1143, 1176,
	1108, 305, 1237, 1238, 656, 0, 306, 307, 1183, 0,
	1164, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1218,
	330, 331, 332, 1167, 1165, 1166, 1173, 1169, 1168, 1172,
	333, 334, 335, 336, 337, 1200, 338, 340, 1194, 1193,
	1113, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 1185, 351, 0, 352, 353,
	354, 0, 355, 356, 357, 0, 358, 359, 1119, 360,
	361, 362, 364, 366, 363, 1516, 367, 368, 369, 370,
	1208, 1209, 371, 1132, 277, 0, 0, 0, 0, 0,
	372, 373, 374, 1192, 0, 0, 0, 375, 0, 376,
	377, 378, 0, 0, 1219, 379, 380, 381, 1205, 1206,
	382, 383, 384, 385, 386, 387, 388, 389, 390, 0,
	391, 1215, 0, 1142, 392, 0, 393, 394, 395, 396,
	397, 1178, 1179, 1182, 483, 1221, 398, 399, 0, 400,
	401, 402, 403, 404, 0, 0, 0, 278, 405, 406,
	407, 0, 1220, 408, 1187, 1188, 0, 1148, 0, 409,
	410, 1222, 1180, 1223, 411, 412, 413, 1224, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 1216, 1225, 425, 426, 1226, 0,
	427, 428, 429, 430, 431, 432, 435, 1171, 1170, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1227, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 478, 466, 467, 468, 1228, 477, 465, 1110, 279,
	1229, 479, 480, 481, 1133, 1181, 482, 1195, 484, 485,
	0, 0, 486, 0, 0, 0, 488, 489, 490, 0,
	0, 491, 492, 678, 1230, 493, 1231, 1210, 494, 495,
	1120, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	0, 505, 506, 680, 507, 508, 509, 681, 510, 511,
	512, 1211, 513, 683, 514, 515, 0, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 524, 1191, 525, 526,
	528, 527, 529, 0, 530, 0, 531, 532, 533, 0,
	0, 0, 0, 0, 534, 1517, 0, 537, 538, 539,
	540, 535, 541, 542, 543, 544, 545, 0, 546, 547,
	548, 1232, 549, 550, 551, 552, 553, 1121, 554, 0,
	555, 556, 562, 563, 564, 557, 558, 565, 566, 567,
	568, 569, 0, 571, 572, 570, 573, 574, 575, 1174,
	576, 577, 559, 560, 578, 579, 1233, 580, 581, 582,
	583, 584, 585, 586, 1189, 0, 587, 0, 588, 589,
	590, 591, 593, 561, 594, 599, 600, 1236, 595, 596,
	597, 598, 1212, 602, 603, 0, 604, 605, 1107, 601,
	592, 0, 606, 607, 608, 609, 610, 611, 1515, 613,
	0, 614, 1201, 1202, 1203, 1204, 0, 623, 0, 615,
	616, 617, 1213, 618, 1214, 1131, 619, 620, 621, 622,
	0, 624, 625, 0, 1114, 626, 627, 628, 630, 631,
	629, 632, 1175, 633, 0, 0, 634, 635, 636, 695,
	1198, 1235, 0, 638, 637, 639, 640, 698, 641, 642,
	0, 0, 0, 0, 643, 644, 699, 645, 646, 647,
	1111, 0, 0, 0, 1361, 0, 1153, 1125, 1126, 1127,
	1123, 1124, 1136, 1106, 0, 0, 0, 0, 0, 0,
	1104, 1105, 0, 280, 282, 281, 283, 284, 285, 286,
	1137, 287, 288, 0, 1135, 0, 0, 0, 1177, 1141,
	0, 0, 0, 289, 290, 1217, 291, 292, 293, 294,
	295, 296, 649, 1190, 0, 297, 1197, 298, 1196, 0,
	1207, 299, 300, 301, 302, 303, 304, 1143, 1176, 1108,
	305, 1237, 1238, 656, 0, 306, 307, 1183, 0, 1164,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1218, 330,
	331, 332, 1167, 1165, 1166, 1173, 1169, 1168, 1172, 333,
	334, 335, 336, 337, 1200, 338, 340, 1194, 1193, 1113,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 1185, 351, 0, 352, 353, 354,
	0, 355, 356, 357, 0, 358, 359, 1119, 360, 361,
	362, 364, 366, 363, 365, 367, 368, 369, 370, 1208,
	1209, 371, 1132, 277, 0, 0, 0, 0, 0, 372,
	373, 374, 1192, 0, 0, 0, 375, 0, 376, 377,
	378, 0, 0, 1219, 379, 380, 381, 1205, 1206, 382,
	383, 384, 385, 386, 387, 388, 389, 390, 0, 391,
	1215, 0, 1142, 392, 0, 393, 394, 395, 396, 397,
	1178, 1179, 1182, 483, 1221, 398, 399, 0, 400, 401,
	402, 403, 404, 0, 0, 0, 278, 405, 406, 407,
	0, 1220, 408, 1187, 1188, 0, 1148, 0, 409, 410,
	1222, 1180, 1223, 411, 412, 413, 1224, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 1216, 1225, 425, 426, 1226, 0, 427,
	428, 429, 430, 431, 432, 435, 1171, 1170, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1227, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	478, 466, 467, 468, 1228, 477, 465, 1110, 279, 1229,
	479, 480, 481, 1133, 1181, 482, 1195, 484, 485, 0,
	0, 486, 0, 0, 0, 488, 489, 490, 0, 0,
	491, 492, 678, 1230, 493, 1231, 1210, 494, 495, 1120,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 0,
	505, 506, 680, 507, 508, 509, 681, 510, 511, 512,
	1211, 513, 683, 514, 515, 0, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 524, 1191, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 536, 0, 537, 538, 539, 540,
	535, 541, 542, 543, 544, 545, 0, 546, 547, 548,
	1232, 549, 550, 551, 552, 553, 1121, 554, 0, 555,
	556, 562, 563, 564, 557, 558, 565, 566, 567, 568,
	569, 0, 571, 572, 570, 573, 574, 575, 1174, 576,
	577, 559, 560, 578, 579, 1233, 580, 581, 582, 583,
	584, 585, 586, 1189, 0, 587, 0, 588, 589, 590,
	591, 593, 561, 594, 599, 600, 1236, 595, 596, 597,
	598, 1212, 602, 603, 0, 604, 605, 1107, 601, 592,
	0, 606, 607, 608, 609, 610, 611, 612, 613, 0,
	614, 1201, 1202, 1203, 1204, 0, 623, 0, 615, 616,
	617, 1213, 618, 1214, 1131, 619, 620, 621, 622, 0,
	624, 625, 0, 1114, 626, 627, 628, 630, 631, 629,
	632, 1175, 633, 0, 0, 634, 635, 636, 695, 1198,
	1235, 0, 638, 637, 639, 640, 698, 641, 642, 0,
	0, 0, 0, 643, 644, 699, 645, 646, 647, 1111,
	0, 0, 0, 0, 0, 1153, 1125, 1126, 1127, 1123,
	1124, 1136, 1106, 0, 0, 0, 0, 0, 0, 1104,
	1105, 0, 280, 282, 281, 283, 284, 285, 286, 1137,
	287, 288, 0, 1135, 0, 0, 0, 1177, 1141, 0,
	0, 0, 289, 290, 1217, 291, 292, 293, 294, 295,
	296, 649, 1190, 0, 297, 1197, 298, 1196, 0, 1207,
	299, 300, 301, 302, 303, 304, 1143, 1176, 1108, 305,
	1237, 1238, 656, 0, 306, 307, 1183, 0, 1164, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1218, 330, 331,
	332, 1167, 1165, 1166, 1173, 1169, 1168, 1172, 333, 334,
	335, 336, 337, 1200, 338, 340, 1194, 1193, 1113, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 1185, 351, 0, 352, 353, 354, 0,
	355, 356, 357, 0, 358, 359, 1119, 360, 361, 362,
	364, 366, 363, 365, 367, 368, 369, 370, 1208, 1209,
	371, 1132, 277, 0, 0, 0, 0, 0, 372, 373,
	374, 1192, 0, 0, 0, 375, 0, 376, 377, 378,
	0, 0, 1219, 379, 380, 381, 1205, 1206, 382, 383,
	384, 385, 386, 387, 388, 389, 390, 0, 391, 1215,
	0, 1142, 392, 0, 393, 394, 395, 396, 397, 1178,
	1179, 1182, 483, 1221, 398, 399, 0, 400, 401, 402,
	403, 404, 0, 0, 0, 278, 405, 406, 407, 0,
	1220, 408, 1187, 1188, 0, 1148, 0, 409, 410, 1222,
	1180, 1223, 411, 412, 413, 1224, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 1216, 1225, 425, 426, 1226, 0, 427, 428,
	429, 430, 431, 432, 435, 1171, 1170, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1227, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 478,
	466, 467, 468, 1228, 477, 465, 1110, 279, 1229, 479,
	480, 481, 1133, 1181, 482, 1195, 484, 485, 0, 0,
	486, 0, 0, 0, 488, 489, 490, 0, 0, 491,
	492, 678, 1230, 493, 1231, 1210, 494, 495, 1120, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 0, 505,
	506, 680, 507, 508, 509, 681, 510, 511, 512, 1211,
	513, 683, 514, 515, 0, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 524, 1191, 525, 526, 528, 527,
	529, 0, 530, 0, 531, 532, 533, 0, 0, 0,
	0, 0, 534, 536, 0, 537, 538, 539, 540, 535,
	541, 542, 543, 544, 545, 0, 546, 547, 548, 1232,
	549, 550, 551, 552, 553, 1121, 554, 0, 555, 556,
	562, 563, 564, 557, 558, 565, 566, 567, 568, 569,
	0, 571, 572, 570, 573, 574, 575, 1174, 576, 577,
	559, 560, 578, 579, 1233, 580, 581, 582, 583, 584,
	585, 586, 1189, 0, 587, 0, 588, 589, 590, 591,
	593, 561, 594, 599, 600, 1236, 595, 596, 597, 598,
	1212, 602, 603, 0, 604, 605, 1107, 601, 592, 0,
	606, 607, 608, 609, 610, 611, 612, 613, 0, 614,
	1201, 1202, 1203, 1204, 0, 623, 0, 615, 616, 617,
	1213, 618, 1214, 1131, 619, 620, 621, 622, 0, 624,
	625, 0, 1114, 626, 627, 628, 630, 631, 629, 632,
	1175, 633, 0, 0, 634, 635, 636, 695, 1198, 1235,
	0, 638, 637, 639, 640, 698, 641, 642, 0, 0,
	0, 0, 643, 644, 699, 645, 646, 647, 1111, 0,
	0, 0, 0, 0, 1153, 1125, 1126, 1127, 1123, 1124,
	1136, 1106, 0, 0, 0, 0, 0, 0, 1104, 1105,
	0, 280, 282, 281, 283, 284, 285, 286, 1137, 287,
	288, 0, 1135, 0, 0, 0, 1177, 1141, 0, 0,
	0, 289, 290, 1217, 291, 292, 293, 294, 295, 296,
	649, 1190, 0, 297, 1197, 298, 1196, 0, 1207, 299,
	300, 301, 302, 303, 304, 1143, 1176, 1108, 305, 1237,
	1238, 656, 0, 306, 307, 1183, 0, 1164, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1218, 330, 331, 4863,
	1167, 1165, 1166, 1173, 1169, 1168, 1172, 333, 334, 335,
	336, 337, 1200, 338, 340, 1194, 1193, 1113, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 1185, 351, 0, 352, 353, 354, 0, 355,
	356, 357, 0, 358, 359, 1119, 360, 361, 362, 364,
	366, 363, 365, 367, 368, 369, 370, 1208, 1209, 371,
	1132, 277, 0, 0, 0, 0, 0, 372, 373, 374,
	1192, 0, 0, 0, 375, 0, 376, 377, 378, 0,
	0, 1219, 379, 380, 381, 1205, 1206, 382, 383, 384,
	385, 386, 387, 388, 389, 390, 0, 391, 1215, 0,
	1142, 392, 0, 393, 394, 395, 396, 397, 1178, 1179,
	1182, 483, 1221, 398, 399, 0, 400, 401, 402, 403,
	404, 0, 0, 0, 278, 405, 406, 407, 0, 1220,
	408, 1187, 1188, 0, 1148, 0, 409, 410, 1222, 1180,
	1223, 411, 412, 413, 1224, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 1216, 1225, 425, 426, 1226, 0, 427, 428, 429,
	430, 431, 432, 435, 1171, 1170, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1227, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 478, 466,
	467, 468, 1228, 477, 465, 1110, 279, 1229, 479, 480,
	481, 1133, 1181, 482, 1195, 484, 485, 0, 0, 486,
	0, 0, 0, 488, 489, 490, 0, 0, 491, 492,
	678, 1230, 493, 1231, 1210, 494, 495, 1120, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 0, 505, 506,
	680, 507, 508, 509, 681, 510, 511, 512, 1211, 513,
	683, 514, 515, 0, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 524, 1191, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 536, 0, 537, 538, 539, 540, 535, 541,
	542, 543, 544, 545, 0, 546, 547, 548, 1232, 549,
	550, 551, 552, 553, 1121, 554, 0, 555, 556, 562,
	563, 564, 557, 558, 565, 566, 567, 568, 569, 0,
	571, 572, 570, 573, 574, 575, 1174, 576, 577, 559,
	560, 578, 579, 1233, 580, 581, 582, 583, 584, 585,
	586, 1189, 0, 587, 0, 588, 589, 590, 591, 593,
	561, 594, 599, 600, 1236, 595, 596, 597, 598, 1212,
	602, 603, 0, 604, 605, 1107, 601, 592, 0, 606,
	607, 608, 609, 610, 611, 612, 613, 0, 614, 1201,
	1202, 1203, 1204, 0, 623, 0, 615, 616, 617, 1213,
	618, 1214, 1131, 619, 620, 621, 622, 0, 4862, 625,
	0, 1114, 626, 627, 628, 630, 631, 629, 632, 1175,
	633, 0, 0, 634, 635, 636, 695, 1198, 1235, 0,
	638, 637, 639, 640, 698, 641, 642, 0, 0, 0,
	0, 643, 644, 699, 645, 646, 647, 1111, 0, 0,
	0, 0, 0, 1153, 1125, 1126, 1127, 1123, 1124, 1136,
	1106, 0, 0, 0, 0, 0, 0, 1104, 1105, 0,
	280, 282, 281, 283, 284, 285, 286, 1137, 287, 288,
	0, 1135, 0, 0, 0, 1177, 1141, 0, 0, 0,
	289, 290, 1217, 291, 292, 293, 294, 295, 296, 4861,
	1190, 0, 297, 1197, 298, 1196, 0, 1207, 299, 300,
	301, 302, 303, 304, 1143, 1176, 1108, 305, 1237, 1238,
	656, 0, 306, 307, 1183, 0, 1164, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1218, 330, 331, 4863, 1167,
	1165, 1166, 1173, 1169, 1168, 1172, 333, 334, 335, 336,
	337, 1200, 338, 340, 1194, 1193, 1113, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 1185, 351, 0, 352, 353, 354, 0, 355, 356,
	357, 0, 358, 359, 1119, 360, 361, 362, 364, 366,
	363, 365, 367, 368, 369, 370, 1208, 1209, 371, 1132,
	277, 0, 0, 0, 0, 0, 372, 373, 374, 1192,
	0, 0, 0, 375, 0, 376, 377, 378, 0, 0,
	1219, 379, 380, 381, 1205, 1206, 382, 383, 384, 385,
	386, 387, 388, 389, 390, 0, 391, 1215, 0, 1142,
	392, 0, 393, 394, 395, 396, 397, 1178, 1179, 1182,
	483, 1221, 398, 399, 0, 400, 401, 402, 403, 404,
	0, 0, 0, 278, 405, 406, 407, 0, 1220, 408,
	1187, 1188, 0, 1148, 0, 409, 410, 1222, 1180, 1223,
	411, 412, 413, 1224, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	1216, 1225, 425, 426, 1226, 0, 427, 428, 429, 430,
	431, 432, 435, 1171, 1170, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1227, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 478, 466, 467,
	468, 1228, 477, 465, 1110, 279, 1229, 479, 480, 481,
	1133, 1181, 482, 1195, 484, 485, 0, 0, 486, 0,
	0, 0, 488, 489, 490, 0, 0, 491, 492, 678,
	1230, 493, 1231, 1210, 494, 495, 1120, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 0, 505, 506, 680,
	507, 508, 509, 681, 510, 511, 512, 1211, 513, 683,
	514, 515, 0, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 524, 1191, 525, 526, 528, 527, 529, 0,
	530, 0, 531, 532, 533, 0, 0, 0, 0, 0,
	534, 536, 0, 537, 538, 539, 540, 535, 541, 542,
	543, 544, 545, 0, 546, 547, 548, 1232, 549, 550,
	551, 552, 553, 1121, 554, 0, 555, 556, 562, 563,
	564, 557, 558, 565, 566, 567, 568, 569, 0, 571,
	572, 570, 573, 574, 575, 1174, 576, 577, 559, 560,
	578, 579, 1233, 580, 581, 582, 583, 584, 585, 586,
	1189, 0, 587, 0, 588, 589, 590, 591, 593, 561,
	594, 599, 600, 1236, 595, 596, 597, 598, 1212, 602,
	603, 0, 604, 605, 1107, 601, 592, 0, 606, 607,
	608, 609, 610, 611, 612, 613, 0, 614, 1201, 1202,
	1203, 1204, 0, 623, 0, 615, 616, 617, 1213, 618,
	1214, 1131, 619, 620, 621, 622, 0, 4862, 625, 0,
	1114, 626, 627, 628, 630, 631, 629, 632, 1175, 633,
	0, 0, 634, 635, 636, 695, 1198, 1235, 0, 638,
	637, 639, 640, 698, 641, 642, 0, 0, 0, 0,
	643, 644, 699, 645, 646, 647, 1111, 0, 0, 0,
	0, 0, 1153, 1125, 1126, 1127, 1123, 1124, 1136, 1106,
	0, 0, 0, 0, 0, 0, 1104, 1105, 0, 280,
	282, 281, 283, 284, 285, 286, 1137, 287, 288, 0,
	1135, 0, 0, 0, 1177, 1141, 0, 0, 0, 289,
	290, 1217, 291, 292, 293, 294, 295, 296, 649, 1190,
	0, 297, 1197, 298, 1196, 0, 1207, 299, 300, 301,
	302, 303, 304, 1143, 1176, 1108, 305, 1237, 1238, 656,
	0, 306, 307, 1183, 0, 1164, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1218, 330, 4470, 332, 1167, 1165,
	1166, 1173, 1169, 1168, 1172, 333, 334, 335, 336, 337,
	1200, 338, 340, 1194, 1193, 1113, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	1185, 351, 0, 352, 353, 354, 0, 355, 356, 357,
	0, 358, 359, 1119, 360, 361, 362, 364, 366, 363,
	365, 367, 368, 369, 370, 1208, 1209, 371, 1132, 277,
	0, 0, 0, 0, 0, 372, 373, 374, 1192, 0,
	0, 0, 375, 0, 376, 377, 378, 0, 0, 1219,
	379, 380, 381, 1205, 1206, 382, 383, 384, 385, 386,
	387, 388, 389, 390, 0, 391, 1215, 0, 4471, 392,
	0, 393, 394, 395, 396, 397, 1178, 1179, 1182, 483,
	1221, 398, 399, 0, 400, 401, 402, 403, 404, 0,
	0, 0, 278, 405, 406, 407, 0, 1220, 408, 1187,
	1188, 0, 1148, 0, 409, 410, 1222, 1180, 1223, 411,
	412, 413, 1224, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 1216,
	1225, 425, 426, 1226, 0, 427, 428, 429, 430, 431,
	432, 435, 1171, 1170, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1227, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 478, 466, 467, 468,
	1228, 477, 465, 1110, 279, 1229, 479, 480, 481, 1133,
	1181, 482, 1195, 484, 485, 0, 0, 486, 0, 0,
	0, 488, 489, 490, 0, 0, 491, 492, 678, 1230,
	493, 1231, 1210, 494, 495, 1120, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 0, 505, 506, 680, 507,
	508, 509, 681, 510, 511, 512, 1211, 513, 683, 514,
	515, 0, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 524, 1191, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	536, 0, 537, 538, 539, 540, 535, 541, 542, 543,
	544, 545, 0, 546, 547, 548, 1232, 549, 550, 551,
	4469, 553, 1121, 554, 0, 555, 556, 562, 563, 564,
	557, 558, 565, 566, 567, 568, 569, 0, 571, 572,
	570, 573, 574, 575, 1174, 576, 577, 559, 560, 578,
	579, 1233, 580, 581, 582, 583, 584, 585, 586, 1189,
	0, 587, 0, 588, 589, 590, 591, 593, 561, 594,
	599, 600, 1236, 595, 596, 597, 598, 1212, 602, 603,
	0, 604, 605, 1107, 601, 592, 0, 606, 607, 608,
	609, 610, 611, 612, 613, 0, 614, 1201, 1202, 1203,
	1204, 0, 623, 0, 615, 616, 617, 1213, 618, 1214,
	1131, 619, 620, 621, 622, 0, 624, 625, 0, 1114,
	626, 627, 628, 630, 631, 629, 632, 1175, 633, 0,
	0, 634, 635, 636, 695, 1198, 1235, 0, 638, 637,
	639, 640, 698, 641, 642, 0, 0, 0, 0, 643,
	644, 699, 645, 646, 647, 1111, 0, 0, 0, 0,
	0, 1153, 1125, 1126, 1127, 3245, 3246, 1136, 1106, 0,
	0, 0, 0, 0, 0, 1104, 1105, 0, 280, 282,
	281, 283, 284, 285, 286, 1137, 287, 288, 0, 1135,
	0, 0, 0, 1177, 1141, 0, 0, 0, 289, 290,
	1217, 291, 292, 293, 294, 295, 296, 649, 1190, 0,
	297, 1197, 298, 1196, 0, 1207, 299, 300, 301, 302,
	303, 304, 1143, 1176, 1108, 305, 1237, 1238, 656, 0,
	306, 307, 1183, 0, 1164, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1218, 330, 331, 332, 1167, 1165, 1166,
	1173, 1169, 1168, 1172, 333, 334, 335, 336, 337, 1200,
	338, 340, 1194, 1193, 1113, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 1185,
	351, 0, 352, 353, 354, 0, 355, 356, 357, 0,
	358, 359, 1119, 360, 361, 362, 364, 366, 363, 365,
	367, 368, 369, 370, 1208, 1209, 371, 1132, 277, 0,
	0, 0, 0, 0, 372, 373, 374, 1192, 0, 0,
	0, 375, 0, 376, 377, 378, 0, 0, 1219, 379,
	380, 381, 1205, 1206, 382, 383, 384, 385, 386, 387,
	388, 389, 390, 0, 391, 1215, 0, 1142, 392, 0,
	393, 394, 395, 396, 397, 1178, 1179, 1182, 483, 1221,
	398, 399, 0, 400, 401, 402, 403, 404, 0, 0,
	0, 278, 405, 406, 407, 0, 1220, 408, 1187, 1188,
	0, 1148, 0, 409, 410, 1222, 1180, 1223, 411, 412,
	413, 1224, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 1216, 1225,
	425, 426, 1226, 0, 427, 428, 429, 430, 431, 432,
	435, 1171, 1170, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1227, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 478, 466, 467, 468, 1228,
	477, 465, 1110, 279, 1229, 479, 480, 481, 1133, 1181,
	482, 1195, 484, 485, 0, 0, 486, 0, 0, 0,
	488, 489, 490, 0, 0, 491, 492, 678, 1230, 493,
	1231, 1210, 494, 495, 1120, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 0, 505, 506, 680, 507, 508,
	509, 681, 510, 511, 512, 1211, 513, 683, 514, 515,
	0, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	524, 1191, 525, 526, 528, 527, 529, 0, 530, 0,
	531, 532, 533, 0, 0, 0, 0, 0, 534, 536,
	0, 537, 538, 539, 540, 535, 541, 542, 543, 544,
	545, 0, 546, 547, 548, 1232, 549, 550, 551, 552,
	553, 1121, 554, 0, 555, 556, 562, 563, 564, 557,
	558, 565, 566, 567, 568, 569, 0, 571, 572, 570,
	573, 574, 575, 1174, 576, 577, 559, 560, 578, 579,
	1233, 580, 581, 582, 583, 584, 585, 586, 1189, 0,
	587, 0, 588, 589, 590, 591, 593, 561, 594, 599,
	600, 1236, 595, 596, 597, 598, 1212, 602, 603, 0,
	604, 605, 1107, 601, 592, 0, 606, 607, 608, 609,
	610, 611, 612, 613, 0, 614, 1201, 1202, 1203, 1204,
	0, 623, 0, 615, 616, 617, 1213, 618, 1214, 1131,
	619, 620, 621, 622, 0, 624, 625, 0, 1114, 626,
	627, 628, 630, 631, 629, 632, 1175, 633, 0, 0,
	634, 635, 636, 695, 1198, 1235, 0, 638, 637, 639,
	640, 698, 641, 642, 0, 0, 0, 0, 643, 644,
	699, 645, 646, 647, 1111, 0, 0, 0, 0, 0,
	1153, 1125, 1126, 1127, 3243, 3244, 1136, 1106, 0, 0,
	0, 0, 0, 0, 1104, 1105, 0, 280, 282, 281,
	283, 284, 285, 286, 1137, 287, 288, 0, 1135, 0,
	0, 0, 1177, 1141, 0, 0, 0, 289, 290, 1217,
	291, 292, 293, 294, 295, 296, 649, 1190, 0, 297,
	1197, 298, 1196, 0, 1207, 299, 300, 301, 302, 303,
	304, 1143, 1176, 1108, 305, 1237, 1238, 656, 0, 306,
	307, 1183, 0, 1164, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1218, 330, 331, 332, 1167, 1165, 1166, 1173,
	1169, 1168, 1172, 333, 334, 335, 336, 337, 1200, 338,
	340, 1194, 1193, 1113, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1185, 351,
	0, 352, 353, 354, 0, 355, 356, 357, 0, 358,
	359, 1119, 360, 361, 362, 364, 366, 363, 365, 367,
	368, 369, 370, 1208, 1209, 371, 1132, 277, 0, 0,
	0, 0, 0, 372, 373, 374, 1192, 0, 0, 0,
	375, 0, 376, 377, 378, 0, 0, 1219, 379, 380,
	381, 1205, 1206, 382, 383, 384, 385, 386, 387, 388,
	389, 390, 0, 391, 1215, 0, 1142, 392, 0, 393,
	394, 395, 396, 397, 1178, 1179, 1182, 483, 1221, 398,
	399, 0, 400, 401, 402, 403, 404, 0, 0, 0,
	278, 405, 406, 407, 0, 1220, 408, 1187, 1188, 0,
	1148, 0, 409, 410, 1222, 1180, 1223, 411, 412, 413,
	1224, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 1216, 1225, 425,
	426, 1226, 0, 427, 428, 429, 430, 431, 432, 435,
	1171, 1170, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1227, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 478, 466, 467, 468, 1228, 477,
	465, 1110, 279, 1229, 479, 480, 481, 1133, 1181, 482,
	1195, 484, 485, 0, 0, 486, 0, 0, 0, 488,
	489, 490, 0, 0, 491, 492, 678, 1230, 493, 1231,
	1210, 494, 495, 1120, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 0, 505, 506, 680, 507, 508, 509,
	681, 510, 511, 512, 1211, 513, 683, 514, 515, 0,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 524,
	1191, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 536, 0,
	537, 538, 539, 540, 535, 541, 542, 543, 544, 545,
	0, 546, 547, 548, 1232, 549, 550, 551, 552, 553,
	1121, 554, 0, 555, 556, 562, 563, 564, 557, 558,
	565, 566, 567, 568, 569, 0, 571, 572, 570, 573,
	574, 575, 1174, 576, 577, 559, 560, 578, 579, 1233,
	580, 581, 582, 583, 584, 585, 586, 1189, 0, 587,
	0, 588, 589, 590, 591, 593, 561, 594, 599, 600,
	1236, 595, 596, 597, 598, 1212, 602, 603, 0, 604,
	605, 1107, 601, 592, 0, 606, 607, 608, 609, 610,
	611, 612, 613, 0, 614, 1201, 1202, 1203, 1204, 0,
	623, 0, 615, 616, 617, 1213, 618, 1214, 1131, 619,
	620, 621, 622, 0, 624, 625, 0, 1114, 626, 627,
	628, 630, 631, 629, 632, 1175, 633, 0, 0, 634,
	635, 636, 695, 1198, 1235, 0, 638, 637, 639, 640,
	698, 641, 642, 0, 0, 0, 0, 643, 644, 699,
	645, 646, 647, 1111, 0, 0, 0, 0, 0, 1153,
	1125, 1126, 1127, 1123, 1124, 1136, 1106, 0, 0, 0,
	0, 0, 0, 1104, 1105, 0, 280, 282, 281, 283,
	284, 285, 286, 1137, 287, 288, 0, 1135, 0, 0,
	0, 1177, 1141, 0, 0, 0, 289, 290, 1217, 291,
	292, 293, 294, 295, 296, 649, 1190, 0, 297, 1197,
	298, 1196, 0, 1207, 299, 300, 301, 302, 303, 304,
	1143, 1176, 1108, 305, 1237, 1238, 656, 0, 306, 307,
	1183, 0, 1164, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1218, 330, 331, 332, 1167, 1165, 1166, 1173, 1169,
	1168, 1172, 333, 334, 335, 336, 337, 1200, 338, 340,
	1194, 1193, 1113, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 1185, 351, 0,
	352, 353, 354, 0, 355, 356, 357, 0, 358, 359,
	1119, 360, 361, 362, 364, 366, 363, 365, 367, 368,
	369, 370, 1208, 1209, 371, 1132, 277, 0, 0, 0,
	0, 0, 372, 373, 374, 1192, 0, 0, 0, 375,
	0, 376, 377, 378, 0, 0, 1219, 379, 380, 381,
	1205, 1206, 382, 383, 384, 385, 386, 387, 388, 389,
	390, 0, 391, 1215, 0, 1142, 392, 0, 393, 394,
	395, 396, 397, 1178, 1179, 1182, 483, 1221, 398, 399,
	0, 400, 401, 402, 403, 404, 0, 0, 0, 278,
	405, 406, 407, 0, 1220, 408, 1187, 1188, 0, 1148,
	0, 409, 410, 1222, 1180, 1223, 411, 412, 413, 1224,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 1216, 1225, 425, 426,
	1226, 0, 427, 428, 429, 430, 431, 432, 435, 1171,
	1170, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1227, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 478, 466, 467, 468, 1228, 477, 465,
	1110, 279, 1229, 479, 480, 481, 1133, 1181, 482, 1195,
	484, 485, 0, 0, 486, 0, 0, 0, 488, 489,
	490, 0, 0, 491, 492, 678, 1230, 493, 1231, 1210,
	494, 495, 1120, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 0, 505, 506, 680, 507, 508, 509, 681,
	510, 511, 512, 1211, 513, 683, 514, 515, 0, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 524, 1191,
	525, 526, 528, 527, 529, 0, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 536, 0, 537,
	538, 539, 540, 535, 541, 542, 543, 544, 545, 0,
	546, 547, 548, 1232, 549, 550, 551, 552, 553, 1121,
	554, 0, 555, 556, 562, 563, 564, 557, 558, 565,
	566, 567, 568, 569, 0, 571, 572, 570, 573, 574,
	575, 1174, 576, 577, 559, 560, 578, 579, 1233, 580,
	581, 582, 583, 584, 585, 586, 1189, 0, 587, 0,
	588, 589, 590, 591, 593, 561, 594, 599, 600, 1236,
	595, 596, 597, 598, 1212, 602, 603, 0, 604, 605,
	1107, 601, 592, 0, 606, 607, 608, 609, 610, 611,
	612, 613, 0, 614, 1201, 1202, 1203, 1204, 0, 623,
	0, 615, 616, 617, 1213, 618, 1214, 1131, 619, 620,
	621, 622, 0, 624, 625, 0, 1114, 626, 627, 628,
	630, 631, 629, 632, 1175, 633, 0, 0, 634, 635,
	636, 695, 1198, 1235, 0, 638, 637, 639, 640, 698,
	641, 642, 0, 0, 0, 0, 643, 644, 699, 645,
	646, 647, 1111, 0, 0, 0, 0, 0, 1153, 1125,
	1126, 1127, 1123, 1124, 1136, 1106, 0, 0, 0, 0,
	0, 0, 2504, 2505, 0, 280, 282, 281, 283, 284,
	285, 286, 1137, 287, 288, 0, 1135, 0, 0, 0,
	1177, 1141, 0, 0, 0, 289, 290, 1217, 291, 292,
	293, 294, 295, 296, 649, 1190, 0, 297, 1197, 298,
	1196, 0, 1207, 299, 300, 301, 302, 303, 304, 1143,
	1176, 0, 305, 1237, 1238, 656, 0, 306, 307, 1183,
	0, 1164, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1218, 330, 331, 332, 1167, 1165, 1166, 1173, 1169, 1168,
	1172, 333, 334, 335, 336, 337, 1200, 338, 340, 1194,
	1193, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 1185, 351, 0, 352,
	353, 354, 0, 355, 356, 357, 0, 358, 359, 1119,
	360, 361, 362, 364, 366, 363, 365, 367, 368, 369,
	370, 1208, 1209, 371, 1132, 277, 0, 0, 0, 0,
	0, 372, 373, 374, 1192, 0, 0, 0, 375, 0,
	376, 377, 378, 0, 0, 1219, 379, 380, 381, 1205,
	1206, 382, 383, 384, 385, 386, 387, 388, 389, 390,
	0, 391, 1215, 0, 1142, 392, 0, 393, 394, 395,
	396, 397, 1178, 1179, 1182, 483, 1221, 398, 399, 0,
	400, 401, 402, 403, 404, 0, 0, 0, 278, 405,
	406, 407, 0, 1220, 408, 1187, 1188, 0, 1148, 0,
	409, 410, 1222, 1180, 1223, 411, 412, 413, 1224, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1216, 1225, 425, 426, 1226,
	0, 427, 428, 429, 430, 431, 432, 435, 1171, 1170,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1227,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 478, 466, 467, 468, 1228, 477, 465, 0,
	279, 1229, 479, 480, 481, 1133, 1181, 482, 1195, 484,
	485, 0, 0, 486, 0, 0, 0, 488, 489, 490,
	0, 0, 491, 492, 678, 1230, 493, 1231, 1210, 494,
	495, 1120, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 0, 505, 506, 680, 507, 508, 509, 681, 510,
	511, 512, 1211, 513, 683, 514, 515, 0, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 524, 1191, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 536, 0, 537, 538,
	539, 540, 535, 541, 542, 543, 544, 545, 0, 546,
	547, 548, 1232, 549, 550, 551, 552, 553, 1121, 554,
	0, 555, 556, 562, 563, 564, 557, 558, 565, 566,
	567, 568, 569, 0, 571, 572, 570, 573, 574, 575,
	1174, 576, 577, 559, 560, 578, 579, 1233, 580, 581,
	582, 583, 584, 585, 586, 1189, 0, 587, 0, 588,
	589, 590, 591, 593, 561, 594, 599, 600, 1236, 595,
	596, 597, 598, 1212, 602, 603, 0, 604, 605, 0,
	601, 592, 0, 606, 607, 608, 609, 610, 611, 612,
	613, 0, 614, 1201, 1202, 1203, 1204, 0, 623, 0,
	615, 616, 617, 1213, 618, 1214, 1131, 619, 620, 621,
	622, 0, 624, 625, 0, 0, 626, 627, 628, 630,
	631, 629, 632, 1175, 633, 0, 0, 634, 635, 636,
	695, 1198, 1235, 0, 638, 637, 639, 640, 698, 641,
	642, 0, 0, 0, 0, 643, 644, 699, 645, 646,
	647, 0, 0, 0, 0, 0, 0, 1153, 1125, 1126,
	1127, 1123, 1124, 1136, 2763, 0, 0, 0, 0, 0,
	0, 2761, 2762, 0, 280, 282, 281, 283, 284, 285,
	286, 1137, 287, 288, 0, 1135, 0, 0, 0, 1177,
	1141, 0, 0, 0, 289, 290, 1217, 291, 292, 293,
	294, 295, 296, 649, 1190, 0, 297, 1197, 298, 1196,
	0, 1207, 299, 300, 301, 302, 303, 304, 1143, 1176,
	0, 305, 1237, 1238, 656, 0, 306, 307, 1183, 0,
	1164, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1218,
	330, 331, 332, 1167, 1165, 1166, 1173, 1169, 1168, 1172,
	333, 334, 335, 336, 337, 1200, 338, 340, 1194, 1193,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 1185, 351, 0, 352, 353,
	354, 0, 355, 356, 357, 0, 358, 359, 1119, 360,
	361, 362, 364, 366, 363, 365, 367, 368, 369, 370,
	1208, 1209, 371, 1132, 277, 0, 0, 0, 0, 0,
	372, 373, 374, 1192, 0, 0, 0, 375, 0, 376,
	377, 378, 0, 0, 1219, 379, 380, 381, 1205, 1206,
	382, 383, 384, 385, 386, 387, 388, 389, 390, 0,
	391, 1215, 0, 1142, 392, 0, 393, 394, 395, 396,
	397, 1178, 1179, 1182, 483, 1221, 398, 399, 0, 400,
	401, 402, 403, 404, 0, 0, 0, 278, 405, 406,
	407, 0, 1220, 408, 1187, 1188, 0, 1148, 0, 409,
	410, 1222, 1180, 1223, 411, 412, 413, 1224, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 1216, 1225, 425, 426, 1226, 0,
	427, 428, 429, 430, 431, 432, 435, 1171, 1170, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1227, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 478, 466, 467, 468, 1228, 477, 465, 0, 279,
	1229, 479, 480, 481, 1133, 1181, 482, 1195, 484, 485,
	0, 0, 486, 0, 0, 0, 488, 489, 490, 0,
	0, 491, 492, 678, 1230, 493, 1231, 1210, 494, 495,
	487, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	0, 505, 506, 680, 507, 508, 509, 681, 510, 511,
	512, 1211, 513, 683, 514, 515, 0, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 524, 1191, 525, 526,
	528, 527, 529, 0, 530, 0, 531, 532, 533, 0,
	0, 0, 0, 0, 534, 536, 0, 537, 538, 539,
	540, 535, 541, 542, 543, 544, 545, 0, 546, 547,
	548, 1232, 549, 550, 551, 552, 553, 3238, 3239, 0,
	555, 556, 562, 563, 564, 557, 558, 565, 566, 567,
	568, 569, 0, 571, 572, 570, 573, 574, 575, 1174,
	576, 577, 559, 560, 578, 579, 1233, 580, 581, 582,
	583, 584, 585, 586, 1189, 0, 587, 0, 588, 589,
	590, 591, 593, 561, 594, 599, 600, 1236, 595, 596,
	597, 598, 1212, 602, 603, 0, 604, 605, 0, 601,
	592, 0, 606, 607, 608, 609, 610, 611, 612, 613,
	0, 614, 1201, 1202, 1203, 1204, 0, 623, 0, 615,
	616, 617, 1213, 618, 1214, 1131, 619, 620, 621, 622,
	0, 624, 625, 0, 0, 626, 627, 628, 630, 631,
	629, 632, 1175, 633, 0, 0, 634, 635, 636, 695,
	1198, 1235, 0, 638, 637, 639, 640, 698, 641, 642,
	0, 0, 0, 0, 643, 644, 699, 645, 646, 647,
	0, 0, 0, 0, 0, 0, 1153, 1125, 1126, 1127,
	1123, 1124, 1136, 0, 0, 0, 0, 0, 0, 0,
	2165, 2166, 0, 280, 282, 281, 283, 284, 285, 286,
	1137, 287, 288, 0, 1135, 0, 0, 0, 1177, 1141,
	0, 0, 0, 289, 290, 1217, 291, 292, 293, 294,
	295, 296, 0, 1190, 0, 297, 1197, 298, 1196, 0,
	1207, 299, 300, 301, 302, 303, 304, 1143, 1176, 1108,
	305, 1237, 1238, 656, 0, 306, 307, 1183, 0, 1164,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1218, 330,
	331, 4863, 1167, 1165, 1166, 1173, 1169, 1168, 1172, 333,
	334, 335, 336, 337, 1200, 338, 340, 1194, 1193, 1113,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 1185, 351, 0, 352, 353, 354,
	0, 355, 356, 357, 0, 358, 359, 1119, 360, 361,
	362, 364, 366, 363, 365, 367, 368, 369, 370, 1208,
	1209, 371, 1132, 277, 0, 0, 0, 0, 0, 372,
	373, 374, 1192, 0, 0, 0, 375, 0, 376, 377,
	378, 0, 0, 1219, 379, 380, 381, 1205, 1206, 382,
	383, 384, 385, 386, 387, 388, 389, 390, 0, 391,
	1215, 0, 1142, 392, 0, 393, 394, 395, 396, 397,
	1178, 1179, 1182, 483, 0, 398, 399, 0, 400, 401,
	402, 403, 404, 0, 0, 0, 278, 405, 406, 407,
	0, 1220, 408, 1187, 1188, 0, 1148, 0, 409, 410,
	0, 1180, 0, 411, 412, 413, 1224, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 1216, 1225, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 1171, 1170, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1227, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	478, 466, 467, 468, 1228, 477, 465, 1110, 279, 0,
	479, 480, 481, 1133, 1181, 482, 1195, 484, 485, 0,
	0, 486, 0, 0, 0, 488, 489, 490, 0, 0,
	491, 492, 678, 1230, 493, 1231, 1210, 494, 495, 1120,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 0,
	505, 506, 680, 507, 508, 509, 681, 510, 511, 512,
	1211, 513, 683, 514, 515, 0, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 524, 1191, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 536, 0, 537, 538, 539, 540,
	535, 541, 542, 543, 544, 545, 0, 546, 547, 548,
	1232, 549, 550, 551, 552, 553, 1121, 554, 0, 555,
	556, 562, 563, 564, 557, 558, 565, 566, 567, 568,
	569, 0, 571, 572, 570, 573, 574, 575, 1174, 576,
	577, 559, 560, 578, 579, 0, 580, 581, 582, 583,
	584, 585, 586, 1189, 0, 587, 0, 588, 589, 590,
	591, 593, 561, 594, 599, 600, 1236, 595, 596, 597,
	598, 1212, 602, 603, 0, 604, 605, 1107, 601, 592,
	0, 606, 607, 608, 609, 610, 611, 612, 613, 0,
	614, 1201, 1202, 1203, 1204, 0, 623, 0, 615, 616,
	617, 1213, 618, 1214, 1131, 619, 620, 621, 622, 0,
	4862, 625, 0, 1114, 626, 627, 628, 630, 631, 629,
	632, 1175, 633, 0, 0, 634, 635, 636, 695, 1198,
	1235, 0, 638, 637, 639, 640, 698, 641, 642, 0,
	0, 0, 0, 643, 644, 699, 645, 646, 647, 0,
	0, 0, 0, 1097, 0, 1275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1104,
	1105, 0, 280, 282, 281, 283, 284, 285, 286, 1137,
	287, 288, 0, 1135, 0, 0, 0, 1177, 0, 0,
	0, 0, 289, 290, 1217, 291, 292, 293, 294, 295,
	296, 649, 650, 0, 297, 651, 298, 652, 0, 653,
	299, 300, 301, 302, 303, 304, 0, 1176, 0, 305,
	654, 655, 656, 0, 306, 307, 1183, 0, 1164, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1218, 330, 331,
	332, 1167, 1165, 1166, 1173, 1169, 1168, 1172, 333, 334,
	335, 336, 337, 0, 338, 340, 658, 659, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 357, 0, 358, 359, 660, 360, 361, 362,
	364, 366, 363, 365, 367, 368, 369, 370, 1208, 1209,
	371, 0, 277, 0, 0, 0, 0, 0, 372, 373,
	374, 663, 0, 0, 0, 375, 0, 376, 377, 378,
	0, 0, 1219, 379, 380, 381, 664, 665, 382, 383,
	384, 385, 386, 387, 388, 389, 390, 0, 391, 1215,
	0, 667, 392, 0, 393, 394, 395, 396, 397, 1178,
	1179, 1182, 483, 1221, 398, 399, 0, 400, 401, 402,
	403, 404, 0, 0, 0, 278, 405, 406, 407, 0,
	1220, 408, 671, 672, 0, 673, 0, 409, 410, 1222,
	1180, 1223, 411, 412, 413, 1224, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 1261, 421, 423, 422,
	0, 424, 1216, 1225, 425, 426, 1226, 0, 427, 428,
	429, 430, 431, 432, 435, 1171, 1170, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1227, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 478,
	466, 467, 468, 1228, 477, 465, 0, 279, 1229, 479,
	480, 481, 0, 1181, 482, 677, 484, 485, 0, 0,
	486, 0, 0, 1267, 488, 489, 490, 0, 0, 491,
	492, 678, 1230, 493, 1231, 1210, 494, 495, 487, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 0, 505,
	506, 680, 507, 508, 509, 681, 510, 511, 512, 1211,
	513, 683, 514, 515, 0, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 524, 684, 525, 526, 528, 527,
	529, 0, 530, 0, 531, 532, 533, 0, 0, 0,
	0, 0, 534, 536, 0, 537, 538, 539, 540, 535,
	541, 542, 543, 544, 545, 0, 546, 547, 548, 1232,
	549, 550, 551, 552, 553, 685, 1269, 0, 555, 556,
	562, 563, 564, 557, 558, 565, 566, 567, 568, 569,
	239, 571, 572, 570, 573, 574, 575, 1174, 576, 577,
	559, 560, 578, 579, 1233, 580, 581, 582, 583, 584,
	585, 586, 686, 0, 587, 0, 588, 589, 590, 591,
	593, 561, 594, 599, 600, 687, 595, 596, 597, 598,
	1212, 602, 603, 0, 604, 605, 0, 601, 592, 241,
	606, 607, 608, 609, 610, 611, 612, 613, 0, 614,
	689, 690, 691, 692, 0, 623, 0, 615, 616, 617,
	1213, 618, 1214, 0, 619, 620, 621, 622, 0, 624,
	625, 0, 0, 626, 627, 628, 630, 631, 629, 632,
	1175, 633, 0, 0, 634, 635, 636, 1651, 696, 697,
	0, 638, 637, 639, 640, 698, 641, 642, 0, 0,
	0, 233, 643, 644, 699, 645, 646, 647, 1275, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 1265, 0, 2005, 0,
	1177, 0, 0, 0, 0, 289, 290, 1217, 291, 292,
	293, 294, 295, 296, 649, 650, 0, 297, 651, 298,
	652, 0, 653, 299, 300, 301, 302, 303, 304, 0,
	1176, 0, 305, 654, 655, 656, 0, 306, 307, 1183,
	0, 1164, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1218, 330, 331, 332, 1167, 1165, 1166, 1173, 1169, 1168,
	1172, 333, 334, 335, 336, 337, 0, 338, 340, 658,
	659, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 355, 356, 357, 0, 358, 359, 660,
	360, 361, 362, 364, 366, 363, 365, 367, 368, 369,
	370, 1208, 1209, 371, 0, 277, 0, 0, 0, 0,
	0, 372, 373, 374, 663, 0, 0, 0, 375, 0,
	376, 377, 378, 0, 0, 1219, 379, 380, 381, 664,
	665, 382, 383, 384, 385, 386, 387, 388, 389, 390,
	0, 391, 1215, 0, 667, 392, 0, 393, 394, 395,
	396, 397, 1178, 1179, 1182, 483, 1221, 398, 399, 0,
	400, 401, 402, 403, 404, 0, 0, 0, 278, 405,
	406, 407, 0, 1220, 408, 671, 672, 0, 673, 0,
	409, 410, 1222, 1180, 1223, 411, 412, 413, 1224, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 1261,
	421, 423, 422, 0, 424, 1216, 1225, 425, 426, 1226,
	0, 427, 428, 429, 430, 431, 432, 435, 1171, 1170,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1227,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 478, 466, 467, 468, 1228, 477, 465, 0,
	279, 1229, 479, 480, 481, 0, 1181, 482, 677, 484,
	485, 0, 0, 486, 0, 0, 1267, 488, 489, 490,
	0, 0, 491, 492, 678, 1230, 493, 1231, 1210, 494,
	495, 487, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 0, 505, 506, 680, 507, 508, 509, 681, 510,
	511, 512, 1211, 513, 683, 514, 515, 0, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 524, 684, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 536, 0, 537, 538,
	539, 540, 535, 541, 542, 543, 544, 545, 0, 546,
	547, 548, 1232, 549, 550, 551, 552, 553, 685, 1269,
	0, 555, 556, 562, 563, 564, 557, 558, 565, 566,
	567, 568, 569, 239, 571, 572, 570, 573, 574, 575,
	1174, 576, 577, 559, 560, 578, 579, 1233, 580, 581,
	582, 583, 584, 585, 586, 686, 0, 587, 0, 588,
	589, 590, 591, 593, 561, 594, 599, 600, 687, 595,
	596, 597, 598, 1212, 602, 603, 0, 604, 605, 0,
	601, 592, 241, 606, 607, 608, 609, 610, 611, 612,
	613, 0, 614, 689, 690, 691, 692, 0, 623, 0,
	615, 616, 617, 1213, 618, 1214, 0, 619, 620, 621,
	622, 0, 624, 625, 0, 0, 626, 627, 628, 630,
	631, 629, 632, 1175, 633, 0, 0, 634, 635, 636,
	1651, 696, 697, 0, 638, 637, 639, 640, 698, 641,
	642, 0, 0, 0, 233, 643, 644, 699, 645, 646,
	647, 0, 0, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3402, 0, 1275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1265,
	0, 2005, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 1177, 0, 0,
	0, 0, 289, 290, 1217, 291, 292, 293, 294, 295,
	296, 649, 650, 0, 297, 651, 298, 652, 0, 653,
	299, 300, 301, 302, 303, 304, 0, 1176, 0, 305,
	654, 655, 656, 0, 306, 307, 1183, 0, 1164, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1218, 330, 331,
	332, 1167, 1165, 1166, 1173, 1169, 1168, 1172, 333, 334,
	335, 336, 337, 0, 338, 340, 658, 659, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 357, 0, 358, 359, 660, 360, 361, 362,
	364, 366, 363, 365, 367, 368, 369, 370, 1208, 1209,
	371, 0, 277, 0, 0, 0, 0, 0, 372, 373,
	374, 663, 0, 0, 0, 375, 0, 376, 377, 378,
	0, 0, 1219, 379, 380, 381, 664, 665, 382, 383,
	384, 385, 386, 387, 388, 389, 390, 0, 391, 1215,
	0, 667, 392, 0, 393, 394, 395, 396, 397, 1178,
	1179, 1182, 483, 1221, 398, 399, 0, 400, 401, 402,
	403, 404, 0, 0, 0, 278, 405, 406, 407, 0,
	1220, 408, 671, 672, 0, 673, 0, 409, 410, 1222,
	1180, 1223, 411, 412, 413, 1224, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 1261, 421, 423, 422,
	0, 424, 1216, 1225, 425, 426, 1226, 0, 427, 428,
	429, 430, 431, 432, 435, 1171, 1170, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1227, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 478,
	466, 467, 468, 1228, 477, 465, 0, 279, 1229, 479,
	480, 481, 0, 1181, 482, 677, 484, 485, 0, 0,
	486, 0, 0, 1267, 488, 489, 490, 0, 0, 491,
	492, 678, 1230, 493, 1231, 1210, 494, 495, 487, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 0, 505,
	506, 680, 507, 508, 509, 681, 510, 511, 512, 1211,
	513, 683, 514, 515, 0, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 524, 684, 525, 526, 528, 527,
	529, 0, 530, 0, 531, 532, 533, 0, 0, 0,
	0, 0, 534, 536, 0, 537, 538, 539, 540, 535,
	541, 542, 543, 544, 545, 0, 546, 547, 548, 1232,
	549, 550, 551, 552, 553, 685, 1269, 0, 555, 556,
	562, 563, 564, 557, 558, 565, 566, 567, 568, 569,
	0, 571, 572, 570, 573, 574, 575, 1174, 576, 577,
	559, 560, 578, 579, 1233, 580, 581, 582, 583, 584,
	585, 586, 686, 0, 587, 0, 588, 589, 590, 591,
	593, 561, 594, 599, 600, 687, 595, 596, 597, 598,
	1212, 602, 603, 0, 604, 605, 0, 601, 592, 0,
	606, 607, 608, 609, 610, 611, 612, 613, 0, 614,
	689, 690, 691, 692, 0, 623, 0, 615, 616, 617,
	1213, 618, 1214, 0, 619, 620, 621, 622, 0, 624,
	625, 0, 0, 626, 627, 628, 630, 631, 629, 632,
	1175, 633, 0, 0, 634, 635, 636, 695, 696, 697,
	0, 638, 637, 639, 640, 698, 641, 642, 0, 0,
	0, 0, 643, 644, 699, 645, 646, 647, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1257, 0, 1275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1265, 0, 1263, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 1177, 0, 0, 0, 0, 289,
	290, 1217, 291, 292, 293, 294, 295, 296, 649, 650,
	0, 297, 651, 298, 652, 0, 653, 299, 300, 301,
	302, 303, 304, 0, 1176, 0, 305, 654, 655, 656,
	0, 306, 307, 1183, 0, 1164, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1218, 330, 331, 332, 1167, 1165,
	1166, 1173, 1169, 1168, 1172, 333, 334, 335, 336, 337,
	0, 338, 340, 658, 659, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 355, 356, 357,
	0, 358, 359, 660, 360, 361, 362, 364, 366, 363,
	365, 367, 368, 369, 370, 1208, 1209, 371, 0, 277,
	0, 0, 0, 0, 0, 372, 373, 374, 663, 0,
	0, 0, 375, 0, 376, 377, 378, 0, 0, 1219,
	379, 380, 381, 664, 665, 382, 383, 384, 385, 386,
	387, 388, 389, 390, 0, 391, 1215, 0, 667, 392,
	0, 393, 394, 395, 396, 397, 1178, 1179, 1182, 483,
	1221, 398, 399, 0, 400, 401, 402, 403, 404, 0,
	0, 0, 278, 405, 406, 407, 0, 1220, 408, 671,
	672, 0, 673, 0, 409, 410, 1222, 1180, 1223, 411,
	412, 413, 1224, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 1261, 421, 423, 422, 0, 424, 1216,
	1225, 425, 426, 1226, 0, 427, 428, 429, 430, 431,
	432, 435, 1171, 1170, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1227, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 478, 466, 467, 468,
	1228, 477, 465, 0, 279, 1229, 479, 480, 481, 0,
	1181, 482, 677, 484, 485, 0, 0, 486, 0, 0,
	1267, 488, 489, 490, 0, 0, 491, 492, 678, 1230,
	493, 1231, 1210, 494, 495, 487, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 0, 505, 506, 680, 507,
	508, 509, 681, 510, 511, 512, 1211, 513, 683, 514,
	515, 0, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 524, 684, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	536, 0, 537, 538, 539, 540, 535, 541, 542, 543,
	544, 545, 0, 546, 547, 548, 1232, 549, 550, 551,
	552, 553, 685, 1269, 0, 555, 556, 562, 563, 564,
	557, 558, 565, 566, 567, 568, 569, 0, 571, 572,
	570, 573, 574, 575, 1174, 576, 577, 559, 560, 578,
	579, 1233, 580, 581, 582, 583, 584, 585, 586, 686,
	0, 587, 0, 588, 589, 590, 591, 593, 561, 594,
	599, 600, 687, 595, 596, 597, 598, 1212, 602, 603,
	0, 604, 605, 0, 601, 592, 0, 606, 607, 608,
	609, 610, 611, 612, 613, 0, 614, 689, 690, 691,
	692, 0, 623, 0, 615, 616, 617, 1213, 618, 1214,
	0, 619, 620, 621, 622, 0, 624, 625, 0, 0,
	626, 627, 628, 630, 631, 629, 632, 1175, 633, 0,
	0, 634, 635, 636, 695, 696, 697, 0, 638, 637,
	639, 640, 698, 641, 642, 0, 0, 0, 0, 643,
	644, 699, 645, 646, 647, 1275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 1265, 0, 1263, 0, 1177, 0, 0,
	0, 0, 289, 290, 1217, 291, 292, 293, 294, 295,
	296, 649, 650, 0, 297, 651, 298, 652, 0, 653,
	299, 300, 301, 302, 303, 304, 0, 1176, 0, 305,
	654, 655, 656, 0, 306, 307, 1183, 0, 1164, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1218, 330, 331,
	332, 1167, 1165, 1166, 1173, 1169, 1168, 1172, 333, 334,
	335, 336, 337, 0, 338, 340, 658, 659, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 357, 0, 358, 359, 660, 360, 361, 362,
	364, 366, 363, 365, 367, 368, 369, 370, 1208, 1209,
	371, 0, 277, 0, 0, 0, 0, 0, 372, 373,
	374, 663, 0, 0, 0, 375, 0, 376, 377, 378,
	0, 0, 1219, 379, 380, 381, 664, 665, 382, 383,
	384, 385, 386, 387, 388, 389, 390, 0, 391, 1215,
	0, 667, 392, 0, 393, 394, 395, 396, 397, 1178,
	1179, 1182, 483, 1221, 398, 399, 0, 400, 401, 402,
	403, 404, 0, 0, 0, 278, 405, 406, 407, 0,
	1220, 408, 671, 672, 0, 673, 0, 409, 410, 1222,
	1180, 1223, 411, 412, 413, 1224, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 1261, 421, 423, 422,
	0, 424, 1216, 1225, 425, 426, 1226, 0, 427, 428,
	429, 430, 431, 432, 435, 1171, 1170, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1227, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 478,
	466, 467, 468, 1228, 477, 465, 0, 279, 1229, 479,
	480, 481, 0, 1181, 482, 677, 484, 485, 0, 0,
	486, 0, 0, 1267, 488, 489, 490, 0, 0, 491,
	492, 678, 1230, 493, 1231, 1210, 494, 495, 487, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 0, 505,
	506, 680, 507, 508, 509, 681, 510, 511, 512, 1211,
	513, 683, 514, 515, 0, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 524, 684, 525, 526, 528, 527,
	529, 0, 530, 0, 531, 532, 533, 0, 0, 0,
	0, 0, 534, 536, 0, 537, 538, 539, 540, 535,
	541, 542, 543, 544, 545, 0, 546, 547, 548, 1232,
	549, 550, 551, 552, 553, 685, 1269, 0, 555, 556,
	562, 563, 564, 557, 558, 565, 566, 567, 568, 569,
	0, 571, 572, 570, 573, 574, 575, 1174, 576, 577,
	559, 560, 578, 579, 1233, 580, 581, 582, 583, 584,
	585, 586, 686, 0, 587, 0, 588, 589, 590, 591,
	593, 561, 594, 599, 600, 687, 595, 596, 597, 598,
	1212, 602, 603, 0, 604, 605, 0, 601, 592, 0,
	606, 607, 608, 609, 610, 611, 612, 613, 0, 614,
	689, 690, 691, 692, 0, 623, 0, 615, 616, 617,
	1213, 618, 1214, 0, 619, 620, 621, 622, 0, 624,
	625, 0, 0, 626, 627, 628, 630, 631, 629, 632,
	1175, 633, 0, 0, 634, 635, 636, 695, 696, 697,
	0, 638, 637, 639, 640, 698, 641, 642, 0, 0,
	0, 0, 643, 644, 699, 645, 646, 647, 1275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 1265, 0, 1263, 0,
	1177, 0, 0, 0, 0, 289, 290, 1217, 291, 292,
	293, 294, 295, 296, 649, 650, 0, 297, 651, 298,
	652, 0, 653, 299, 300, 301, 302, 303, 304, 0,
	1176, 0, 305, 654, 655, 656, 0, 306, 307, 1183,
	0, 1164, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1218, 330, 331, 332, 1167, 1165, 1166, 1173, 1169, 1168,
	1172, 333, 334, 335, 336, 337, 0, 338, 340, 658,
	659, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 355, 356, 357, 0, 358, 359, 660,
	360, 361, 362, 364, 366, 363, 365, 367, 368, 369,
	370, 1208, 1209, 371, 0, 277, 0, 0, 0, 0,
	0, 372, 373, 374, 663, 0, 0, 0, 375, 0,
	376, 377, 378, 0, 0, 1219, 379, 380, 381, 664,
	665, 382, 383, 384, 385, 386, 387, 388, 389, 390,
	0, 391, 1215, 0, 667, 392, 0, 393, 394, 395,
	396, 397, 1178, 1179, 1182, 483, 1221, 398, 399, 0,
	400, 401, 402, 403, 404, 0, 0, 0, 278, 405,
	406, 407, 0, 1220, 408, 671, 672, 0, 673, 0,
	409, 410, 1222, 1180, 1223, 411, 412, 413, 1224, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1216, 1225, 425, 426, 1226,
	0, 427, 428, 429, 430, 431, 432, 435, 1171, 1170,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1227,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 478, 466, 467, 468, 1228, 477, 465, 0,
	279, 1229, 479, 480, 481, 0, 1181, 482, 677, 484,
	485, 0, 0, 486, 0, 0, 0, 488, 489, 490,
	0, 0, 491, 492, 678, 1230, 493, 1231, 1210, 494,
	495, 487, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 0, 505, 506, 680, 507, 508, 509, 681, 510,
	511, 512, 1211, 513, 683, 514, 515, 0, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 524, 684, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 536, 0, 537, 538,
	539, 540, 535, 541, 542, 543, 544, 545, 0, 546,
	547, 548, 1232, 549, 550, 551, 552, 553, 685, 554,
	0, 555, 556, 562, 563, 564, 557, 558, 565, 566,
	567, 568, 569, 0, 571, 572, 570, 573, 574, 575,
	1174, 576, 577, 559, 560, 578, 579, 1233, 580, 581,
	582, 583, 584, 585, 586, 686, 0, 587, 0, 588,
	589, 590, 591, 593, 561, 594, 599, 600, 687, 595,
	596, 597, 598, 1212, 602, 603, 0, 604, 605, 0,
	601, 592, 0, 606, 607, 608, 609, 610, 611, 612,
	613, 0, 614, 689, 690, 691, 692, 0, 623, 0,
	615, 616, 617, 1213, 618, 1214, 0, 619, 620, 621,
	622, 0, 624, 625, 0, 0, 626, 627, 628, 630,
	631, 629, 632, 1175, 633, 0, 0, 634, 635, 636,
	695, 696, 697, 0, 638, 637, 639, 640, 698, 641,
	642, 0, 0, 0, 0, 643, 644, 699, 645, 646,
	647, 1275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 4287, 0, 1177, 0, 0, 0, 0, 289, 290,
	1217, 291, 292, 293, 294, 295, 296, 649, 650, 0,
	297, 651, 298, 652, 0, 653, 299, 300, 301, 302,
	303, 304, 0, 1176, 0, 305, 654, 655, 656, 0,
	306, 307, 1183, 0, 1164, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1218, 330, 331, 332, 1167, 1165, 1166,
	1173, 1169, 1168, 1172, 333, 334, 335, 336, 337, 0,
	338, 340, 658, 659, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 357, 0,
	358, 359, 660, 360, 361, 362, 364, 366, 363, 365,
	367, 368, 369, 370, 1208, 1209, 371, 0, 277, 0,
	0, 0, 0, 0, 372, 373, 374, 663, 0, 0,
	0, 375, 0, 376, 377, 378, 0, 0, 1219, 379,
	380, 381, 664, 665, 382, 383, 384, 385, 386, 387,
	388, 389, 390, 0, 391, 1215, 0, 667, 392, 0,
	393, 394, 395, 396, 397, 1178, 1179, 1182, 483, 1221,
	398, 399, 0, 400, 401, 402, 403, 404, 0, 0,
	0, 278, 405, 406, 407, 0, 1220, 408, 671, 672,
	0, 673, 0, 409, 410, 1222, 1180, 1223, 411, 412,
	413, 1224, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 1216, 1225,
	425, 426, 1226, 0, 427, 428, 429, 430, 431, 432,
	435, 1171, 1170, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1227, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 478, 466, 467, 468, 1228,
	477, 465, 0, 279, 1229, 479, 480, 481, 0, 1181,
	482, 677, 484, 485, 0, 0, 486, 0, 0, 0,
	488, 489, 490, 0, 0, 491, 492, 678, 1230, 493,
	1231, 1210, 494, 495, 487, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 0, 505, 506, 680, 507, 508,
	509, 681, 510, 511, 512, 1211, 513, 683, 514, 515,
	0, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	524, 684, 525, 526, 528, 527, 529, 0, 530, 0,
	531, 532, 533, 0, 0, 0, 0, 0, 534, 536,
	0, 537, 538, 539, 540, 535, 541, 542, 543, 544,
	545, 0, 546, 547, 548, 1232, 549, 550, 551, 552,
	553, 685, 1269, 0, 555, 556, 562, 563, 564, 557,
	558, 565, 566, 567, 568, 569, 0, 571, 572, 570,
	573, 574, 575, 1174, 576, 577, 559, 560, 578, 579,
	1233, 580, 581, 582, 583, 584, 585, 586, 686, 0,
	587, 0, 588, 589, 590, 591, 593, 561, 594, 599,
	600, 687, 595, 596, 597, 598, 1212, 602, 603, 0,
	604, 605, 0, 601, 592, 0, 606, 607, 608, 609,
	610, 611, 612, 613, 0, 614, 689, 690, 691, 692,
	0, 623, 0, 615, 616, 617, 1213, 618, 1214, 0,
	619, 620, 621, 622, 0, 624, 625, 0, 0, 626,
	627, 628, 630, 631, 629, 632, 1175, 633, 0, 0,
	634, 635, 636, 695, 696, 697, 0, 638, 637, 639,
	640, 698, 641, 642, 0, 274, 0, 0, 643, 644,
	699, 645, 646, 647, 0, 2608, 2609, 2610, 2627, 2628,
	2629, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 2630, 0, 648, 0, 0,
	0, 0, 289, 290, 1902, 291, 292, 293, 294, 295,
	296, 649, 650, 0, 297, 651, 298, 652, 0, 653,
	299, 300, 301, 302, 303, 304, 0, 0, 1887, 305,
	654, 655, 656, 0, 306, 307, 657, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 2620, 0, 316,
	317, 318, 315, 319, 0, 320, 2616, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 658, 659, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 357, 0, 358, 359, 660, 360, 361, 362,
	364, 366, 363, 365, 367, 368, 369, 370, 661, 662,
	371, 0, 0, 0, 2621, 2622, 2623, 2624, 372, 373,
	374, 663, 0, 0, 2615, 375, 0, 376, 377, 378,
	0, 0, 0, 379, 380, 381, 664, 665, 382, 383,
	384, 385, 386, 387, 388, 389, 390, 0, 391, 666,
	0, 667, 392, 0, 393, 394, 395, 396, 397, 668,
	669, 670, 483, 0, 398, 399, 0, 400, 401, 402,
	403, 404, 0, 0, 0, 0, 405, 406, 407, 0,
	0, 408, 671, 672, 0, 673, 0, 409, 410, 0,
	674, 0, 411, 412, 413, 0, 414, 0, 2625, 2626,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 675, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 2618, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 478,
	466, 467, 468, 0, 477, 465, 0, 0, 0, 479,
	480, 481, 0, 676, 482, 677, 484, 485, 0, 0,
	486, 0, 0, 0, 488, 489, 490, 0, 0, 491,
	492, 678, 0, 493, 0, 679, 494, 495, 487, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 0, 505,
	506, 680, 507, 508, 509, 681, 510, 511, 512, 682,
	513, 683, 514, 515, 0, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 524, 684, 525, 526, 528, 527,
	529, 0, 530, 0, 531, 532, 533, 0, 0, 0,
	0, 0, 534, 536, 0, 537, 538, 539, 540, 535,
	541, 542, 543, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 685, 554, 2619, 555, 556,
	562, 563, 564, 557, 558, 565, 566, 567, 568, 569,
	0, 571, 572, 570, 573, 574, 575, 0, 576, 577,
	559, 560, 578, 579, 0, 580, 581, 582, 583, 584,
	585, 586, 686, 0, 587, 0, 588, 589, 590, 591,
	593, 561, 594, 599, 600, 687, 595, 596, 597, 598,
	688, 602, 603, 0, 604, 605, 1886, 601, 592, 0,
	606, 607, 608, 609, 610, 611, 612, 613, 0, 614,
	689, 690, 691, 692, 0, 623, 0, 615, 616, 617,
	693, 618, 694, 0, 619, 620, 621, 622, 0, 624,
	625, 0, 0, 626, 627, 628, 630, 631, 629, 632,
	0, 633, 0, 0, 634, 635, 636, 695, 696, 697,
	0, 638, 637, 639, 640, 698, 641, 642, 0, 0,
	0, 0, 643, 644, 699, 645, 646, 647, 0, 0,
	0, 0, 0, 0, 0, 1097, 0, 1577, 2605, 2606,
	2607, 2631, 2617, 2611, 0, 2613, 2614, 2612, 2599, 2600,
	2601, 2602, 2603, 2604, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 648,
	0, 0, 0, 0, 289, 290, 1217, 291, 292, 293,
	294, 295, 296, 649, 650, 0, 297, 651, 298, 652,
	0, 653, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 654, 655, 656, 0, 306, 307, 657, 0,
	1501, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1218,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 658, 659,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	354, 0, 355, 356, 357, 0, 358, 359, 660, 360,
	361, 362, 364, 366, 363, 365, 367, 368, 369, 370,
	661, 662, 371, 0, 277, 0, 0, 0, 0, 0,
	372, 373, 374, 663, 0, 0, 0, 375, 0, 376,
	377, 378, 0, 0, 1219, 379, 380, 381, 664, 665,
	382, 383, 384, 385, 386, 387, 388, 389, 390, 0,
	391, 666, 0, 667, 392, 0, 393, 394, 395, 396,
	397, 668, 669, 670, 483, 1221, 398, 399, 0, 400,
	401, 402, 403, 404, 0, 0, 0, 0, 405, 406,
	407, 0, 1220, 408, 671, 672, 0, 673, 0, 409,
	410, 1222, 674, 1223, 411, 412, 413, 1224, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 675, 1225, 425, 426, 1226, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1227, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 478, 466, 467, 468, 1228, 477, 465, 0, 0,
	1229, 479, 480, 481, 0, 676, 482, 677, 484, 485,
	0, 0, 486, 0, 0, 0, 488, 489, 490, 0,
	0, 491, 492, 678, 1230, 493, 1231, 679, 494, 495,
	487, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	0, 505, 506, 680, 507, 508, 509, 681, 510, 511,
	512, 682, 513, 683, 514, 515, 0, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 524, 684, 525, 526,
	528, 527, 529, 0, 530, 0, 531, 532, 533, 0,
	0, 0, 0, 0, 534, 536, 0, 537, 538, 539,
	540, 535, 541, 542, 543, 544, 545, 0, 546, 547,
	548, 1232, 549, 550, 551, 552, 553, 685, 554, 0,
	555, 556, 562, 563, 564, 557, 558, 565, 566, 567,
	568, 569, 239, 571, 572, 570, 573, 574, 575, 0,
	576, 577, 559, 560, 578, 579, 1233, 580, 581, 582,
	583, 584, 585, 586, 686, 0, 587, 0, 588, 589,
	590, 591, 593, 561, 594, 599, 600, 687, 595, 596,
	597, 598, 688, 602, 603, 0, 604, 605, 0, 601,
	592, 241, 606, 607, 608, 609, 610, 611, 612, 613,
	0, 614, 689, 690, 691, 692, 0, 623, 0, 615,
	616, 617, 693, 618, 694, 0, 619, 620, 621, 622,
	0, 624, 625, 0, 0, 626, 627, 628, 630, 631,
	629, 632, 0, 633, 0, 0, 634, 635, 636, 1651,
	696, 697, 0, 638, 637, 639, 640, 698, 641, 642,
	0, 0, 0, 233, 643, 644, 699, 645, 646, 647,
	0, 1648, 234, 1577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	194, 0, 0, 0, 0, 648, 0, 0, 0, 0,
	289, 290, 1217, 291, 292, 293, 294, 295, 296, 649,
	650, 0, 297, 651, 298, 652, 0, 653, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 654, 655,
	656, 0, 306, 307, 657, 0, 1501, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1218, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 658, 659, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 354, 0, 355, 356,
	357, 0, 358, 359, 660, 360, 361, 362, 364, 366,
	363, 365, 367, 368, 369, 370, 661, 662, 371, 0,
	277, 0, 0, 0, 0, 0, 372, 373, 374, 663,
	0, 0, 0, 375, 0, 376, 377, 378, 0, 0,
	1219, 379, 380, 381, 664, 665, 382, 383, 384, 385,
	386, 387, 388, 389, 390, 0, 391, 666, 0, 667,
	392, 0, 393, 394, 395, 396, 397, 668, 669, 670,
	483, 1221, 398, 399, 0, 400, 401, 402, 403, 404,
	0, 0, 0, 0, 405, 406, 407, 0, 1220, 408,
	671, 672, 0, 673, 0, 409, 410, 1222, 674, 1223,
	411, 412, 413, 1224, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	675, 1225, 425, 426, 1226, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1227, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 478, 466, 467,
	468, 1228, 477, 465, 0, 0, 1229, 479, 480, 481,
	0, 676, 482, 677, 484, 485, 0, 0, 486, 0,
	0, 0, 488, 489, 490, 0, 0, 491, 492, 678,
	1230, 493, 1231, 679, 494, 495, 487, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 0, 505, 506, 680,
	507, 508, 509, 681, 510, 511, 512, 682, 513, 683,
	514, 515, 0, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 524, 684, 525, 526, 528, 527, 529, 0,
	530, 0, 531, 532, 533, 0, 0, 0, 0, 0,
	534, 536, 0, 537, 538, 539, 540, 535, 541, 542,
	543, 544, 545, 0, 546, 547, 548, 1232, 549, 550,
	551, 552, 553, 685, 554, 0, 555, 556, 562, 563,
	564, 557, 558, 565, 566, 567, 568, 569, 239, 571,
	572, 570, 573, 574, 575, 0, 576, 577, 559, 560,
	578, 579, 1233, 580, 581, 582, 583, 584, 585, 586,
	686, 0, 587, 0, 588, 589, 590, 591, 593, 561,
	594, 599, 600, 687, 595, 596, 597, 598, 688, 602,
	603, 0, 604, 605, 0, 601, 592, 241, 606, 607,
	608, 609, 610, 611, 612, 613, 0, 614, 689, 690,
	691, 692, 0, 623, 0, 615, 616, 617, 693, 618,
	694, 0, 619, 620, 621, 622, 0, 624, 625, 0,
	0, 626, 627, 628, 630, 631, 629, 632, 0, 633,
	0, 0, 634, 635, 636, 1651, 696, 697, 0, 638,
	637, 639, 640, 698, 641, 642, 0, 0, 0, 233,
	643, 644, 699, 645, 646, 647, 1577, 1576, 234, 0,
	0, 0, 1574, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 194, 0, 648, 0,
	0, 0, 0, 289, 290, 1217, 291, 292, 293, 294,
	295, 296, 649, 650, 0, 297, 651, 298, 652, 0,
	653, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 654, 655, 656, 0, 306, 307, 657, 0, 1501,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1218, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 658, 659, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 355, 356, 357, 0, 358, 359, 660, 360, 361,
	362, 364, 366, 363, 365, 367, 368, 369, 370, 661,
	662, 371, 0, 277, 0, 0, 0, 0, 0, 372,
	373, 374, 663, 0, 0, 0, 375, 0, 376, 377,
	378, 0, 0, 1219, 379, 380, 381, 664, 665, 382,
	383, 384, 385, 386, 387, 388, 389, 390, 0, 391,
	666, 0, 667, 392, 0, 393, 394, 395, 396, 397,
	668, 669, 670, 483, 1221, 398, 399, 0, 400, 401,
	402, 403, 404, 0, 0, 0, 0, 405, 406, 407,
	0, 1220, 408, 671, 672, 0, 673, 0, 409, 410,
	1222, 674, 1223, 411, 412, 413, 1224, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 675, 1225, 425, 426, 1226, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1227, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	478, 466, 467, 468, 1228, 477, 465, 0, 0, 1229,
	479, 480, 481, 0, 676, 482, 677, 484, 485, 0,
	0, 486, 0, 0, 0, 488, 489, 490, 0, 0,
	491, 492, 678, 1230, 493, 1231, 679, 494, 495, 487,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 0,
	505, 506, 680, 507, 508, 509, 681, 510, 511, 512,
	682, 513, 683, 514, 515, 0, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 524, 684, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 536, 0, 537, 538, 539, 540,
	535, 541, 542, 543, 544, 545, 0, 546, 547, 548,
	1232, 549, 550, 551, 552, 553, 685, 554, 0, 555,
	556, 562, 563, 564, 557, 558, 565, 566, 567, 568,
	569, 0, 571, 572, 570, 573, 574, 575, 0, 576,
	577, 559, 560, 578, 579, 1233, 580, 581, 582, 583,
	584, 585, 586, 686, 0, 587, 0, 588, 589, 590,
	591, 593, 561, 594, 599, 600, 687, 595, 596, 597,
	598, 688, 602, 603, 0, 604, 605, 0, 601, 592,
	0, 606, 607, 608, 609, 610, 611, 612, 613, 0,
	614, 689, 690, 691, 692, 0, 623, 0, 615, 616,
	617, 693, 618, 694, 0, 619, 620, 621, 622, 0,
	624, 625, 0, 0, 626, 627, 628, 630, 631, 629,
	632, 0, 633, 0, 0, 634, 635, 636, 695, 696,
	697, 0, 638, 637, 639, 640, 698, 641, 642, 0,
	0, 0, 0, 643, 644, 699, 645, 646, 647, 1577,
	1576, 0, 0, 0, 0, 1574, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 1675,
	0, 648, 0, 0, 0, 0, 289, 290, 1217, 291,
	292, 293, 294, 295, 296, 649, 650, 0, 297, 651,
	298, 652, 0, 653, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 654, 655, 656, 0, 306, 307,
	657, 0, 1501, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1218, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	658, 659, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 357, 0, 358, 359,
	660, 360, 361, 362, 364, 366, 363, 365, 367, 368,
	369, 370, 661, 662, 371, 0, 277, 0, 0, 0,
	0, 0, 372, 373, 374, 663, 0, 0, 0, 375,
	0, 376, 377, 378, 0, 0, 1219, 379, 380, 381,
	664, 665, 382, 383, 384, 385, 386, 387, 388, 389,
	390, 0, 391, 666, 0, 667, 392, 0, 393, 394,
	395, 396, 397, 668, 669, 670, 483, 1221, 398, 399,
	0, 400, 401, 402, 403, 404, 0, 0, 0, 0,
	405, 406, 407, 0, 1220, 408, 671, 672, 0, 673,
	0, 409, 410, 1222, 674, 1223, 411, 412, 413, 1224,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 675, 1225, 425, 426,
	1226, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1227, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 478, 466, 467, 468, 1228, 477, 465,
	0, 0, 1229, 479, 480, 481, 0, 676, 482, 677,
	484, 485, 0, 0, 486, 0, 0, 0, 488, 489,
	490, 0, 0, 491, 492, 678, 1230, 493, 1231, 679,
	494, 495, 487, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 0, 505, 506, 680, 507, 508, 509, 681,
	510, 511, 512, 682, 513, 683, 514, 515, 0, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 524, 684,
	525, 526, 528, 527, 529, 0, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 536, 0, 537,
	538, 539, 540, 535, 541, 542, 543, 544, 545, 0,
	546, 547, 548, 1232, 549, 550, 551, 552, 553, 685,
	554, 0, 555, 556, 562, 563, 564, 557, 558, 565,
	566, 567, 568, 569, 0, 571, 572, 570, 573, 574,
	575, 0, 576, 577, 559, 560, 578, 579, 1233, 580,
	581, 582, 583, 584, 585, 586, 686, 0, 587, 0,
	588, 589, 590, 591, 593, 561, 594, 599, 600, 687,
	595, 596, 597, 598, 688, 602, 603, 0, 604, 605,
	0, 601, 592, 0, 606, 607, 608, 609, 610, 611,
	612, 613, 0, 614, 689, 690, 691, 692, 0, 623,
	0, 615, 616, 617, 693, 618, 694, 0, 619, 620,
	621, 622, 0, 624, 625, 0, 0, 626, 627, 628,
	630, 631, 629, 632, 0, 633, 0, 0, 634, 635,
	636, 695, 696, 697, 0, 638, 637, 639, 640, 698,
	641, 642, 0, 0, 0, 0, 643, 644, 699, 645,
	646, 647, 1577, 1576, 0, 0, 0, 0, 1574, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 3723, 0, 648, 0, 0, 0, 0, 289,
	290, 1217, 291, 292, 293, 294, 295, 296, 649, 650,
	0, 297, 651, 298, 652, 0, 653, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 654, 655, 656,
	0, 306, 307, 657, 0, 1501, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1218, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 658, 659, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 355, 356, 357,
	0, 358, 359, 660, 360, 361, 362, 364, 366, 363,
	365, 367, 368, 369, 370, 661, 662, 371, 0, 277,
	0, 0, 0, 0, 0, 372, 373, 374, 663, 0,
	0, 0, 375, 0, 376, 377, 378, 0, 0, 1219,
	379, 380, 381, 664, 665, 382, 383, 384, 385, 386,
	387, 388, 389, 390, 0, 391, 666, 0, 667, 392,
	0, 393, 394, 395, 396, 397, 668, 669, 670, 483,
	1221, 398, 399, 0, 400, 401, 402, 403, 404, 0,
	0, 0, 0, 405, 406, 407, 0, 1220, 408, 671,
	672, 0, 673, 0, 409, 410, 1222, 674, 1223, 411,
	412, 413, 1224, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 675,
	1225, 425, 426, 1226, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1227, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 478, 466, 467, 468,
	1228, 477, 465, 0, 0, 1229, 479, 480, 481, 0,
	676, 482, 677, 484, 485, 0, 0, 486, 0, 0,
	0, 488, 489, 490, 0, 0, 491, 492, 678, 1230,
	493, 1231, 679, 494, 495, 487, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 0, 505, 506, 680, 507,
	508, 509, 681, 510, 511, 512, 682, 513, 683, 514,
	515, 0, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 524, 684, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	536, 0, 537, 538, 539, 2372, 535, 541, 542, 543,
	544, 545, 0, 546, 547, 548, 1232, 549, 550, 551,
	552, 553, 685, 554, 0, 555, 556, 562, 563, 564,
	557, 558, 565, 566, 567, 568, 569, 0, 571, 572,
	570, 573, 574, 575, 0, 576, 577, 559, 560, 578,
	579, 1233, 580, 581, 582, 583, 584, 585, 586, 686,
	0, 587, 0, 588, 589, 590, 591, 593, 561, 594,
	599, 600, 687, 595, 596, 597, 598, 688, 602, 603,
	0, 604, 605, 0, 601, 592, 0, 606, 607, 608,
	609, 610, 611, 612, 613, 0, 614, 689, 690, 691,
	692, 0, 623, 0, 615, 616, 617, 693, 618, 694,
	0, 619, 620, 621, 622, 0, 624, 625, 0, 0,
	626, 627, 628, 630, 631, 629, 632, 0, 633, 0,
	0, 634, 635, 636, 695, 696, 697, 0, 638, 637,
	639, 640, 698, 641, 642, 0, 0, 0, 0, 643,
	644, 699, 645, 646, 647, 1577, 2281, 0, 0, 0,
	0, 2282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 1675, 0, 648, 0, 0,
	0, 0, 289, 290, 1217, 291, 292, 293, 294, 295,
	296, 649, 650, 0, 297, 651, 298, 652, 0, 653,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	654, 655, 656, 0, 306, 307, 657, 0, 1501, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1218, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 658, 659, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 357, 0, 358, 359, 660, 360, 361, 362,
	364, 366, 363, 365, 367, 368, 369, 370, 661, 662,
	371, 0, 277, 0, 0, 0, 0, 0, 372, 373,
	374, 663, 0, 0, 0, 375, 0, 376, 377, 378,
	0, 0, 1219, 379, 380, 381, 664, 665, 382, 383,
	384, 385, 386, 387, 388, 389, 390, 0, 391, 666,
	0, 667, 392, 0, 393, 394, 395, 396, 397, 668,
	669, 670, 483, 1221, 398, 399, 0, 400, 401, 402,
	403, 404, 0, 0, 0, 0, 405, 406, 407, 0,
	1220, 408, 671, 672, 0, 673, 0, 409, 410, 1222,
	674, 1223, 411, 412, 413, 1224, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 2280, 423, 422,
	0, 424, 675, 1225, 425, 426, 1226, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1227, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 478,
	466, 467, 468, 1228, 477, 465, 0, 0, 1229, 479,
	480, 481, 0, 676, 482, 677, 484, 485, 0, 0,
	486, 0, 0, 0, 488, 489, 490, 0, 0, 491,
	492, 678, 1230, 493, 1231, 679, 494, 495, 487, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 0, 505,
	506, 680, 507, 508, 509, 681, 510, 511, 512, 682,
	513, 683, 514, 515, 0, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 524, 684, 525, 526, 528, 527,
	529, 0, 530, 0, 531, 532, 533, 0, 0, 0,
	0, 0, 534, 536, 0, 537, 538, 539, 540, 535,
	541, 542, 543, 544, 545, 0, 546, 547, 548, 1232,
	549, 550, 551, 552, 553, 685, 554, 0, 555, 556,
	562, 563, 564, 557, 558, 565, 566, 567, 568, 569,
	0, 571, 572, 570, 573, 574, 575, 0, 576, 577,
	559, 560, 578, 579, 1233, 580, 581, 582, 583, 584,
	585, 586, 686, 0, 587, 0, 588, 589, 590, 591,
	593, 561, 594, 599, 600, 687, 595, 596, 597, 598,
	688, 602, 603, 0, 604, 605, 0, 601, 592, 0,
	606, 607, 608, 609, 610, 611, 612, 613, 0, 614,
	689, 690, 691, 692, 0, 623, 0, 615, 616, 617,
	693, 618, 694, 0, 619, 620, 621, 622, 0, 624,
	625, 0, 0, 626, 627, 628, 630, 631, 629, 632,
	0, 633, 0, 0, 634, 635, 636, 695, 696, 697,
	0, 638, 637, 639, 640, 698, 641, 642, 0, 0,
	0, 0, 643, 644, 699, 645, 646, 647, 1577, 1576,
	0, 0, 0, 0, 1574, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 1675, 0,
	648, 0, 0, 0, 0, 289, 290, 1217, 291, 292,
	293, 294, 295, 296, 649, 650, 0, 297, 651, 298,
	652, 0, 653, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 654, 655, 656, 0, 306, 307, 657,
	0, 1501, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1218, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 658,
	659, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 355, 356, 357, 0, 358, 359, 660,
	360, 361, 362, 364, 366, 363, 365, 367, 368, 369,
	370, 661, 662, 371, 0, 277, 0, 0, 0, 0,
	0, 372, 373, 374, 663, 0, 0, 0, 375, 0,
	376, 377, 378, 0, 0, 1219, 379, 380, 381, 664,
	665, 382, 383, 384, 385, 386, 387, 388, 389, 390,
	0, 391, 666, 0, 667, 392, 0, 393, 394, 395,
	396, 397, 668, 669, 670, 483, 1221, 398, 399, 0,
	400, 401, 402, 403, 404, 0, 0, 0, 0, 405,
	406, 407, 0, 1220, 408, 671, 672, 0, 673, 0,
	409, 410, 1222, 674, 1223, 411, 412, 413, 1224, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 675, 1225, 425, 426, 1226,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1227,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 478, 466, 467, 468, 1228, 477, 465, 0,
	0, 1229, 479, 480, 481, 0, 676, 482, 677, 484,
	485, 0, 0, 486, 0, 0, 0, 488, 489, 490,
	0, 0, 491, 492, 678, 1230, 493, 1231, 679, 494,
	495, 487, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 0, 505, 506, 680, 507, 508, 509, 681, 510,
	511, 512, 682, 513, 683, 514, 515, 0, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 524, 684, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 536, 0, 537, 538,
	539, 540, 535, 541, 542, 543, 544, 545, 0, 546,
	547, 548, 1232, 549, 550, 551, 552, 553, 685, 554,
	0, 555, 556, 562, 563, 564, 557, 558, 565, 566,
	567, 568, 569, 0, 571, 572, 570, 573, 574, 575,
	0, 576, 577, 559, 560, 578, 579, 1233, 580, 581,
	582, 583, 584, 585, 586, 686, 0, 587, 0, 588,
	589, 590, 591, 593, 561, 594, 599, 600, 687, 595,
	596, 597, 598, 688, 602, 603, 0, 604, 605, 0,
	601, 592, 0, 606, 607, 608, 609, 610, 611, 612,
	613, 0, 614, 689, 690, 691, 692, 0, 623, 0,
	615, 616, 617, 693, 618, 694, 0, 619, 620, 621,
	622, 0, 624, 625, 0, 0, 626, 627, 628, 630,
	631, 629, 632, 0, 633, 0, 0, 634, 635, 636,
	695, 696, 697, 0, 638, 637, 639, 640, 698, 641,
	642, 0, 0, 0, 0, 643, 644, 699, 645, 646,
	647, 1097, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 1657, 0, 0, 0, 648, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 649,
	650, 0, 297, 651, 298, 652, 0, 653, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 654, 655,
	656, 0, 306, 307, 657, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 658, 659, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 354, 0, 355, 356,
	357, 0, 358, 359, 660, 360, 361, 362, 364, 366,
	363, 365, 367, 368, 369, 370, 661, 662, 371, 0,
	0, 0, 0, 0, 0, 0, 372, 373, 374, 663,
	0, 0, 0, 375, 0, 376, 377, 378, 0, 0,
	0, 379, 380, 381, 664, 665, 382, 383, 384, 385,
	386, 387, 388, 389, 390, 0, 391, 666, 0, 667,
	392, 0, 393, 394, 395, 396, 397, 668, 669, 670,
	483, 0, 398, 399, 0, 400, 401, 402, 403, 404,
	0, 0, 0, 0, 405, 406, 407, 0, 0, 408,
	671, 672, 0, 673, 0, 409, 410, 0, 674, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	675, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 478, 466, 467,
	468, 0, 477, 465, 0, 0, 0, 479, 480, 481,
	0, 676, 482, 677, 484, 485, 0, 0, 486, 0,
	0, 0, 488, 489, 490, 0, 0, 491, 492, 678,
	0, 493, 0, 679, 494, 495, 487, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 0, 505, 506, 680,
	507, 508, 509, 681, 510, 511, 512, 682, 513, 683,
	514, 515, 0, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 524, 684, 525, 526, 528, 527, 529, 0,
	530, 0, 531, 532, 533, 0, 0, 0, 0, 0,
	534, 536, 0, 537, 538, 539, 540, 535, 541, 542,
	543, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 685, 554, 0, 555, 556, 562, 563,
	564, 557, 558, 565, 566, 567, 568, 569, 239, 571,
	572, 570, 573, 574, 575, 0, 576, 577, 559, 560,
	578, 579, 0, 580, 581, 582, 583, 584, 585, 586,
	686, 0, 587, 0, 588, 589, 590, 591, 593, 561,
	594, 599, 600, 687, 595, 596, 597, 598, 688, 602,
	603, 0, 604, 605, 0, 601, 592, 241, 606, 607,
	608, 609, 610, 611, 612, 613, 0, 614, 689, 690,
	691, 692, 0, 623, 0, 615, 616, 617, 693, 618,
	694, 0, 619, 620, 621, 622, 0, 624, 625, 0,
	0, 626, 627, 628, 630, 631, 629, 632, 0, 633,
	0, 0, 634, 635, 636, 1651, 696, 697, 0, 638,
	637, 639, 640, 698, 641, 642, 0, 274, 0, 233,
	643, 644, 699, 645, 646, 647, 0, 0, 234, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 648,
	0, 0, 0, 0, 289, 290, 194, 291, 292, 293,
	294, 295, 296, 649, 650, 0, 297, 651, 298, 652,
	0, 653, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 654, 655, 656, 0, 306, 307, 657, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 658, 659,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	354, 0, 355, 356, 357, 0, 358, 359, 660, 360,
	361, 362, 364, 366, 363, 365, 367, 368, 369, 370,
	661, 662, 371, 0, 277, 0, 0, 0, 0, 0,
	372, 373, 374, 663, 0, 0, 0, 375, 0, 376,
	377, 378, 0, 0, 0, 379, 380, 381, 664, 665,
	382, 383, 384, 385, 386, 387, 388, 389, 390, 0,
	391, 666, 0, 667, 392, 0, 393, 394, 395, 396,
	397, 668, 669, 670, 483, 0, 398, 399, 0, 400,
	401, 402, 403, 404, 0, 0, 0, 278, 405, 406,
	407, 0, 0, 408, 671, 672, 0, 673, 0, 409,
	410, 0, 674, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 675, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 478, 466, 467, 468, 0, 477, 465, 0, 279,
	0, 479, 480, 481, 0, 676, 482, 677, 484, 485,
	0, 0, 486, 0, 0, 0, 488, 489, 490, 0,
	0, 491, 492, 678, 0, 493, 0, 679, 494, 495,
	487, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	0, 505, 506, 680, 507, 508, 509, 681, 510, 511,
	512, 682, 513, 683, 514, 515, 0, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 524, 684, 525, 526,
	528, 527, 529, 0, 530, 0, 531, 532, 533, 0,
	0, 0, 0, 0, 534, 536, 0, 537, 538, 539,
	540, 535, 541, 542, 543, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 685, 554, 0,
	555, 556, 562, 563, 564, 557, 558, 565, 566, 567,
	568, 569, 0, 571, 572, 570, 573, 574, 575, 0,
	576, 577, 559, 560, 578, 579, 0, 580, 581, 582,
	583, 584, 585, 586, 686, 0, 587, 0, 588, 589,
	590, 591, 593, 561, 594, 599, 600, 687, 595, 596,
	597, 598, 688, 602, 603, 0, 604, 605, 0, 601,
	592, 0, 606, 607, 608, 609, 610, 611, 612, 613,
	0, 614, 689, 690, 691, 692, 0, 623, 0, 615,
	616, 617, 693, 618, 694, 0, 619, 620, 621, 622,
	0, 624, 625, 0, 0, 626, 627, 628, 630, 631,
	629, 632, 0, 633, 0, 0, 634, 635, 636, 695,
	696, 697, 0, 638, 637, 639, 640, 698, 641, 642,
	0, 274, 3152, 0, 643, 644, 699, 645, 646, 647,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 648, 0, 0, 0, 0, 289, 290,
	2019, 291, 292, 293, 294, 295, 296, 649, 650, 0,
	297, 651, 298, 652, 0, 653, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 654, 655, 656, 0,
	306, 307, 657, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 658, 659, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 357, 0,
	358, 359, 660, 360, 361, 362, 364, 366, 363, 365,
	367, 368, 369, 370, 661, 662, 371, 0, 0, 0,
	0, 0, 0, 0, 372, 373, 374, 663, 0, 0,
	0, 375, 0, 376, 377, 378, 0, 0, 0, 379,
	380, 381, 664, 665, 382, 383, 384, 385, 386, 387,
	388, 389, 390, 0, 391, 666, 0, 667, 392, 0,
	393, 394, 395, 396, 397, 668, 669, 670, 483, 0,
	398, 399, 0, 400, 401, 402, 403, 404, 0, 0,
	0, 0, 405, 406, 407, 0, 0, 408, 671, 672,
	0, 673, 0, 409, 410, 0, 674, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 675, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 478, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 479, 480, 481, 0, 676,
	482, 677, 484, 485, 0, 0, 486, 0, 0, 0,
	488, 489, 490, 0, 0, 491, 492, 678, 0, 493,
	0, 679, 494, 495, 487, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 0, 505, 506, 680, 507, 508,
	509, 681, 510, 511, 512, 682, 513, 683, 514, 515,
	0, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	524, 684, 525, 526, 528, 527, 529, 0, 530, 0,
	531, 532, 533, 0, 0, 0, 0, 0, 534, 536,
	0, 537, 538, 539, 540, 535, 541, 542, 543, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 685, 554, 0, 555, 556, 562, 563, 564, 557,
	558, 565, 566, 567, 568, 569, 0, 571, 572, 570,
	573, 574, 575, 0, 576, 577, 559, 560, 578, 579,
	0, 580, 581, 582, 583, 584, 585, 586, 686, 0,
	587, 0, 588, 589, 590, 591, 593, 561, 594, 599,
	600, 687, 595, 596, 597, 598, 688, 602, 603, 0,
	604, 605, 0, 601, 592, 0, 606, 607, 608, 609,
	610, 611, 612, 613, 0, 614, 689, 690, 691, 692,
	0, 623, 0, 615, 616, 617, 693, 618, 694, 0,
	619, 620, 621, 622, 0, 624, 625, 0, 0, 626,
	627, 628, 630, 631, 629, 632, 0, 633, 0, 0,
	634, 635, 636, 695, 696, 697, 0, 638, 637, 639,
	640, 698, 641, 642, 0, 0, 0, 0, 643, 644,
	699, 645, 646, 647, 1275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 5030, 0, 1177, 0, 0, 0,
	0, 289, 290, 1217, 291, 292, 293, 294, 295, 296,
	649, 650, 0, 297, 651, 298, 652, 0, 653, 299,
	300, 301, 302, 303, 304, 0, 1176, 0, 305, 654,
	655, 656, 0, 306, 307, 1183, 0, 1164, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1218, 330, 331, 332,
	1167, 1165, 1166, 1173, 1169, 1168, 1172, 333, 334, 335,
	336, 337, 0, 338, 340, 658, 659, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 355,
	356, 357, 0, 358, 359, 660, 360, 361, 362, 364,
	366, 363, 365, 367, 368, 369, 370, 1208, 1209, 371,
	0, 277, 0, 0, 0, 0, 0, 372, 373, 374,
	663, 0, 0, 0, 375, 0, 376, 377, 378, 0,
	0, 1219, 379, 380, 381, 664, 665, 382, 383, 384,
	385, 386, 387, 388, 389, 390, 0, 391, 1215, 0,
	667, 392, 0, 393, 394, 395, 396, 397, 1178, 1179,
	1182, 483, 1221, 398, 399, 0, 400, 401, 402, 403,
	404, 0, 0, 0, 278, 405, 406, 407, 0, 1220,
	408, 671, 672, 0, 673, 0, 409, 410, 1222, 1180,
	1223, 411, 412, 413, 1224, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 1216, 1225, 425, 426, 1226, 0, 427, 428, 429,
	430, 431, 432, 435, 1171, 1170, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1227, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 478, 466,
	467, 468, 1228, 477, 465, 0, 279, 1229, 479, 480,
	481, 0, 1181, 482, 677, 484, 485, 0, 0, 486,
	0, 0, 0, 488, 489, 490, 0, 0, 491, 492,
	678, 1230, 493, 1231, 1210, 494, 495, 487, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 0, 505, 506,
	680, 507, 508, 509, 681, 510, 511, 512, 1211, 513,
	683, 514, 515, 0, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 524, 684, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 536, 0, 537, 538, 539, 540, 535, 541,
	542, 543, 544, 545, 0, 546, 547, 548, 1232, 549,
	550, 551, 552, 553, 685, 554, 0, 555, 556, 562,
	563, 564, 557, 558, 565, 566, 567, 568, 569, 0,
	571, 572, 570, 573, 574, 575, 1174, 576, 577, 559,
	560, 578, 579, 1233, 580, 581, 582, 583, 584, 585,
	586, 686, 0, 587, 0, 588, 589, 590, 591, 593,
	561, 594, 599, 600, 687, 595, 596, 597, 598, 1212,
	602, 603, 0, 604, 605, 0, 601, 592, 0, 606,
	607, 608, 609, 610, 611, 612, 613, 0, 614, 689,
	690, 691, 692, 0, 623, 0, 615, 616, 617, 1213,
	618, 1214, 0, 619, 620, 621, 622, 0, 624, 625,
	0, 0, 626, 627, 628, 630, 631, 629, 632, 1175,
	633, 0, 0, 634, 635, 636, 695, 696, 697, 0,
	638, 637, 639, 640, 698, 641, 642, 274, 0, 0,
	0, 643, 644, 699, 645, 646, 647, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 648,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 649, 650, 0, 297, 651, 298, 652,
	0, 653, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 654, 655, 656, 0, 306, 307, 657, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 658, 659,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	354, 0, 355, 356, 357, 0, 358, 359, 660, 360,
	361, 362, 364, 366, 363, 365, 367, 368, 369, 370,
	661, 662, 371, 0, 277, 0, 0, 0, 0, 0,
	372, 373, 374, 663, 0, 0, 0, 375, 0, 376,
	377, 378, 0, 0, 0, 379, 380, 381, 664, 665,
	382, 383, 384, 385, 386, 387, 388, 389, 390, 0,
	391, 666, 0, 667, 392, 0, 393, 394, 395, 396,
	397, 668, 669, 670, 483, 0, 398, 399, 0, 400,
	401, 402, 403, 404, 0, 0, 0, 278, 405, 406,
	407, 0, 0, 408, 671, 672, 0, 673, 0, 409,
	410, 0, 674, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 675, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 478, 466, 467, 468, 0, 477, 465, 0, 279,
	0, 479, 480, 481, 0, 676, 482, 677, 484, 485,
	0, 0, 486, 0, 0, 0, 488, 489, 490, 0,
	0, 491, 492, 678, 0, 493, 0, 679, 494, 495,
	487, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	0, 505, 506, 680, 507, 508, 509, 681, 510, 511,
	512, 682, 513, 683, 514, 515, 0, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 524, 684, 525, 526,
	528, 527, 529, 0, 530, 0, 531, 532, 533, 0,
	0, 0, 0, 0, 534, 536, 0, 537, 538, 539,
	540, 535, 541, 542, 543, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 685, 554, 0,
	555, 556, 562, 563, 564, 557, 558, 565, 566, 567,
	568, 569, 0, 571, 572, 570, 573, 574, 575, 0,
	576, 577, 559, 560, 578, 579, 0, 580, 581, 582,
	583, 584, 585, 586, 686, 0, 587, 0, 588, 589,
	590, 591, 593, 561, 594, 599, 600, 687, 595, 596,
	597, 598, 688, 602, 603, 0, 604, 605, 0, 601,
	592, 0, 606, 607, 608, 609, 610, 611, 612, 613,
	0, 614, 689, 690, 691, 692, 0, 623, 0, 615,
	616, 617, 693, 618, 694, 0, 619, 620, 621, 622,
	0, 624, 625, 0, 0, 626, 627, 628, 630, 631,
	629, 632, 0, 633, 0, 0, 634, 635, 636, 695,
	696, 697, 0, 638, 637, 639, 640, 698, 641, 642,
	0, 0, 274, 0, 643, 644, 699, 645, 646, 647,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 648, 0, 0, 0, 3673, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 649, 650,
	0, 297, 651, 298, 652, 0, 653, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 654, 655, 656,
	0, 306, 307, 657, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 658, 659, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 355, 356, 357,
	0, 358, 359, 660, 360, 361, 362, 364, 366, 363,
	365, 367, 368, 369, 370, 661, 662, 371, 0, 277,
	0, 0, 0, 0, 0, 372, 373, 374, 663, 0,
	0, 0, 375, 0, 376, 377, 378, 0, 0, 0,
	379, 380, 381, 664, 665, 382, 383, 384, 385, 386,
	387, 388, 389, 390, 0, 391, 666, 0, 667, 392,
	0, 393, 394, 395, 396, 397, 668, 669, 670, 483,
	0, 398, 399, 0, 400, 401, 402, 403, 404, 0,
	0, 0, 278, 405, 406, 407, 0, 0, 408, 671,
	672, 0, 673, 0, 409, 410, 0, 674, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 675,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 478, 466, 467, 468,
	0, 477, 465, 0, 279, 0, 479, 480, 481, 0,
	676, 482, 677, 484, 485, 0, 0, 486, 0, 0,
	0, 488, 489, 490, 0, 0, 491, 492, 678, 0,
	493, 0, 679, 494, 495, 487, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 0, 505, 506, 680, 507,
	508, 509, 681, 510, 511, 512, 682, 513, 683, 514,
	515, 0, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 524, 684, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	536, 0, 537, 538, 539, 540, 535, 541, 542, 543,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 685, 554, 0, 555, 556, 562, 563, 564,
	557, 558, 565, 566, 567, 568, 569, 0, 571, 572,
	570, 573, 574, 575, 0, 576, 577, 559, 560, 578,
	579, 0, 580, 581, 582, 583, 584, 585, 586, 686,
	0, 587, 0, 588, 589, 590, 591, 593, 561, 594,
	599, 600, 687, 595, 596, 597, 598, 688, 602, 603,
	0, 604, 605, 0, 601, 592, 0, 606, 607, 608,
	609, 610, 611, 612, 613, 0, 614, 689, 690, 691,
	692, 0, 623, 0, 615, 616, 617, 693, 618, 694,
	0, 619, 620, 621, 622, 0, 624, 625, 0, 0,
	626, 627, 628, 630, 631, 629, 632, 0, 633, 0,
	0, 634, 635, 636, 695, 696, 697, 0, 638, 637,
	639, 640, 698, 641, 642, 0, 0, 274, 0, 643,
	644, 699, 645, 646, 647, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 648,
	0, 0, 0, 1645, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 649, 650, 0, 297, 651, 298, 652,
	0, 653, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 654, 655, 656, 0, 306, 307, 657, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 658, 659,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	354, 0, 355, 356, 357, 0, 358, 359, 660, 360,
	361, 362, 364, 366, 363, 365, 367, 368, 369, 370,
	661, 662, 371, 0, 0, 0, 0, 0, 0, 0,
	372, 373, 374, 663, 0, 0, 0, 375, 0, 376,
	377, 378, 0, 0, 0, 379, 380, 381, 664, 665,
	382, 383, 384, 385, 386, 387, 388, 389, 390, 0,
	391, 666, 0, 667, 392, 0, 393, 394, 395, 396,
	397, 668, 669, 670, 483, 0, 398, 399, 0, 400,
	401, 402, 403, 404, 0, 0, 0, 0, 405, 406,
	407, 0, 0, 408, 671, 672, 0, 673, 0, 409,
	410, 0, 674, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 675, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 478, 466, 467, 468, 0, 477, 465, 0, 0,
	0, 479, 480, 481, 0, 676, 482, 677, 484, 485,
	0, 0, 486, 0, 0, 0, 488, 489, 490, 0,
	0, 491, 492, 678, 0, 493, 0, 679, 494, 495,
	487, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	0, 505, 506, 680, 507, 508, 509, 681, 510, 511,
	512, 682, 513, 683, 514, 515, 0, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 524, 684, 525, 526,
	528, 527, 529, 0, 530, 0, 531, 532, 533, 0,
	0, 0, 0, 0, 534, 536, 0, 537, 538, 539,
	540, 535, 541, 542, 543, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 685, 554, 0,
	555, 556, 562, 563, 564, 557, 558, 565, 566, 567,
	568, 569, 0, 571, 572, 570, 573, 574, 575, 0,
	576, 577, 559, 560, 578, 579, 0, 580, 581, 582,
	583, 584, 585, 586, 686, 0, 587, 0, 588, 589,
	590, 591, 593, 561, 594, 599, 600, 687, 595, 596,
	597, 598, 688, 602, 603, 0, 604, 605, 0, 601,
	592, 0, 606, 607, 608, 609, 610, 611, 612, 613,
	0, 614, 689, 690, 691, 692, 0, 623, 0, 615,
	616, 617, 693, 618, 694, 0, 619, 620, 621, 622,
	0, 624, 625, 0, 0, 626, 627, 628, 630, 631,
	629, 632, 0, 633, 0, 0, 634, 635, 636, 695,
	696, 697, 0, 638, 637, 639, 640, 698, 641, 642,
	0, 274, 0, 0, 643, 644, 699, 645, 646, 647,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 648, 0, 0, 0, 0, 289, 290,
	3140, 291, 292, 293, 294, 295, 296, 649, 650, 0,
	297, 651, 298, 652, 0, 653, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 654, 655, 656, 0,
	306, 307, 657, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 658, 659, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 357, 0,
	358, 359, 660, 360, 361, 362, 364, 366, 363, 365,
	367, 368, 369, 370, 661, 662, 371, 0, 0, 0,
	0, 0, 0, 0, 372, 373, 374, 663, 0, 0,
	0, 375, 0, 376, 377, 378, 0, 0, 0, 379,
	380, 381, 664, 665, 382, 383, 384, 385, 386, 387,
	388, 389, 390, 0, 391, 666, 0, 667, 392, 0,
	393, 394, 395, 396, 397, 668, 669, 670, 483, 0,
	398, 399, 0, 400, 401, 402, 403, 404, 0, 0,
	0, 0, 405, 406, 407, 0, 0, 408, 671, 672,
	0, 673, 0, 409, 410, 0, 674, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 675, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 478, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 479, 480, 481, 0, 676,
	482, 677, 484, 485, 0, 0, 486, 0, 0, 0,
	488, 489, 490, 0, 0, 491, 492, 678, 0, 493,
	0, 679, 494, 495, 487, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 0, 505, 506, 680, 507, 508,
	509, 681, 510, 511, 512, 682, 513, 683, 514, 515,
	0, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	524, 684, 525, 526, 528, 527, 529, 0, 530, 0,
	531, 532, 533, 0, 0, 0, 0, 0, 534, 536,
	0, 537, 538, 539, 540, 535, 541, 542, 543, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 685, 554, 0, 555, 556, 562, 563, 564, 557,
	558, 565, 566, 567, 568, 569, 0, 571, 572, 570,
	573, 574, 575, 0, 576, 577, 559, 560, 578, 579,
	0, 580, 581, 582, 583, 584, 585, 586, 686, 0,
	587, 0, 588, 589, 590, 591, 593, 561, 594, 599,
	600, 687, 595, 596, 597, 598, 688, 602, 603, 0,
	604, 605, 0, 601, 592, 0, 606, 607, 608, 609,
	610, 611, 612, 613, 0, 614, 689, 690, 691, 692,
	0, 623, 0, 615, 616, 617, 693, 618, 694, 0,
	619, 620, 621, 622, 0, 624, 625, 0, 0, 626,
	627, 628, 630, 631, 629, 632, 0, 633, 0, 0,
	634, 635, 636, 695, 696, 697, 0, 638, 637, 639,
	640, 698, 641, 642, 0, 274, 0, 0, 643, 644,
	699, 645, 646, 647, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 648, 0, 0,
	0, 0, 289, 290, 3830, 291, 292, 293, 294, 295,
	296, 649, 650, 0, 297, 651, 298, 652, 0, 653,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	654, 655, 656, 0, 306, 307, 657, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 658, 659, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 357, 0, 358, 359, 660, 360, 361, 362,
	364, 366, 363, 365, 367, 368, 369, 370, 661, 662,
	371, 0, 0, 0, 0, 0, 0, 0, 372, 373,
	374, 663, 0, 0, 0, 375, 0, 376, 377, 378,
	0, 0, 0, 379, 380, 381, 664, 665, 382, 383,
	384, 385, 386, 387, 388, 389, 390, 0, 391, 666,
	0, 667, 392, 0, 393, 394, 395, 396, 397, 668,
	669, 670, 483, 0, 398, 399, 0, 400, 401, 402,
	403, 404, 0, 0, 0, 0, 405, 406, 407, 0,
	0, 408, 671, 672, 0, 673, 0, 409, 410, 0,
	674, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 675, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 478,
	466, 467, 468, 0, 477, 465, 0, 0, 0, 479,
	480, 481, 0, 676, 482, 677, 484, 485, 0, 0,
	486, 0, 0, 0, 488, 489, 490, 0, 0, 491,
	492, 678, 0, 493, 0, 679, 494, 495, 487, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 0, 505,
	506, 680, 507, 508, 509, 681, 510, 511, 512, 682,
	513, 683, 514, 515, 0, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 524, 684, 525, 526, 528, 527,
	529, 0, 530, 0, 531, 532, 533, 0, 0, 0,
	0, 0, 534, 536, 0, 537, 538, 539, 540, 535,
	541, 542, 543, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 685, 554, 0, 555, 556,
	562, 563, 564, 557, 558, 565, 566, 567, 568, 569,
	0, 571, 572, 570, 573, 574, 575, 0, 576, 577,
	559, 560, 578, 579, 0, 580, 581, 582, 583, 584,
	585, 586, 686, 0, 587, 0, 588, 589, 590, 591,
	593, 561, 594, 599, 600, 687, 595, 596, 597, 598,
	688, 602, 603, 0, 604, 605, 0, 601, 592, 0,
	606, 607, 608, 609, 610, 611, 612, 613, 0, 614,
	689, 690, 691, 692, 0, 623, 0, 615, 616, 617,
	693, 618, 694, 0, 619, 620, 621, 622, 0, 624,
	625, 0, 0, 626, 627, 628, 630, 631, 629, 632,
	0, 633, 0, 0, 634, 635, 636, 695, 696, 697,
	0, 638, 637, 639, 640, 698, 641, 642, 0, 0,
	0, 0, 643, 644, 699, 645, 646, 647, 926, 0,
	827, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 2359, 0,
	0, 0, 648, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 649, 650, 0, 297,
	651, 298, 652, 0, 653, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 654, 655, 656, 0, 306,
	307, 657, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 834, 337, 0, 338,
	340, 658, 659, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 355, 356, 357, 0, 358,
	359, 660, 360, 361, 362, 364, 366, 363, 365, 367,
	368, 369, 370, 661, 662, 371, 0, 277, 0, 0,
	0, 0, 0, 372, 373, 374, 663, 0, 0, 0,
	375, 0, 376, 377, 378, 0, 924, 0, 379, 380,
	381, 664, 665, 382, 383, 384, 385, 386, 387, 388,
	389, 390, 0, 391, 666, 0, 667, 392, 0, 393,
	394, 395, 396, 397, 668, 669, 670, 483, 0, 398,
	399, 0, 400, 401, 402, 403, 404, 0, 0, 0,
	278, 405, 406, 407, 0, 0, 408, 671, 672, 0,
	673, 0, 409, 410, 0, 674, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 675, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 478, 466, 467, 468, 0, 477,
	465, 0, 279, 0, 479, 480, 481, 0, 676, 482,
	677, 484, 485, 0, 0, 486, 0, 0, 0, 488,
	489, 490, 0, 0, 491, 492, 678, 0, 493, 0,
	679, 494, 495, 487, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 0, 505, 506, 680, 507, 508, 509,
	681, 510, 511, 512, 682, 513, 683, 514, 515, 0,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 524,
	684, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 536, 0,
	537, 538, 539, 540, 535, 541, 542, 543, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	685, 554, 0, 555, 556, 562, 563, 564, 557, 558,
	565, 566, 567, 568, 569, 0, 571, 572, 570, 573,
	574, 575, 0, 576, 577, 559, 560, 578, 579, 0,
	580, 581, 582, 583, 584, 585, 586, 686, 0, 587,
	0, 588, 589, 590, 591, 593, 561, 594, 599, 600,
	687, 595, 596, 597, 598, 688, 602, 603, 0, 604,
	605, 0, 601, 592, 832, 606, 607, 608, 609, 610,
	833, 612, 613, 0, 614, 689, 690, 691, 692, 0,
	623, 0, 615, 616, 617, 693, 618, 694, 0, 619,
	620, 621, 622, 0, 624, 625, 0, 0, 626, 627,
	628, 630, 631, 629, 632, 0, 633, 0, 0, 634,
	635, 636, 695, 696, 697, 0, 638, 637, 639, 640,
	698, 641, 642, 2064, 0, 0, 0, 643, 644, 699,
	645, 646, 647, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 837, 0, 0, 0, 0,
	289, 290, 1217, 291, 292, 293, 294, 295, 296, 0,
	2070, 0, 297, 2060, 298, 2076, 0, 2083, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 2086, 2087,
	0, 0, 306, 307, 0, 0, 1501, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1218, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 1200, 338, 340, 2074, 2073, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 1185, 351, 0, 352, 353, 354, 0, 355, 356,
	357, 0, 358, 359, 0, 360, 361, 362, 364, 366,
	363, 365, 367, 368, 369, 370, 0, 0, 371, 0,
	0, 0, 0, 0, 0, 0, 372, 373, 374, 2072,
	0, 0, 0, 375, 0, 376, 377, 378, 0, 0,
	1219, 379, 380, 381, 2081, 2082, 382, 383, 384, 385,
	386, 387, 388, 389, 390, 0, 391, 0, 0, 0,
	392, 0, 393, 394, 395, 396, 397, 0, 0, 0,
	483, 1221, 398, 399, 0, 400, 401, 402, 403, 404,
	0, 0, 0, 0, 405, 406, 407, 0, 1220, 408,
	2067, 2068, 0, 2063, 0, 409, 410, 1222, 0, 1223,
	411, 412, 413, 1224, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	0, 1225, 425, 426, 1226, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1227, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 478, 466, 467,
	468, 1228, 477, 465, 0, 0, 1229, 479, 480, 481,
	0, 0, 482, 2075, 484, 485, 0, 0, 486, 0,
	0, 0, 488, 489, 490, 0, 0, 491, 492, 0,
	1230, 493, 1231, 0, 494, 495, 487, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 0, 505, 506, 2057,
	507, 508, 509, 2058, 510, 511, 512, 0, 513, 0,
	514, 515, 0, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 524, 2071, 525, 526, 528, 527, 529, 0,
	530, 0, 531, 532, 533, 0, 0, 0, 0, 0,
	534, 536, 0, 537, 538, 539, 540, 535, 541, 542,
	543, 544, 545, 0, 546, 547, 548, 1232, 549, 550,
	551, 552, 553, 0, 554, 0, 555, 556, 562, 563,
	564, 557, 558, 565, 566, 567, 568, 569, 0, 571,
	572, 570, 573, 574, 575, 0, 576, 577, 559, 560,
	578, 579, 1233, 580, 581, 582, 583, 584, 585, 586,
	2069, 0, 587, 0, 588, 589, 590, 591, 593, 561,
	594, 599, 600, 2085, 595, 596, 597, 598, 0, 602,
	603, 0, 604, 605, 0, 601, 592, 0, 606, 607,
	608, 609, 610, 611, 612, 613, 0, 614, 2077, 2078,
	2079, 2080, 0, 623, 0, 615, 616, 617, 0, 618,
	0, 0, 619, 620, 621, 622, 0, 624, 625, 0,
	0, 626, 627, 628, 630, 631, 629, 632, 0, 633,
	0, 0, 634, 635, 636, 0, 2061, 2084, 0, 638,
	637, 639, 640, 0, 641, 642, 0, 0, 0, 0,
	643, 644, 0, 645, 646, 647, 827, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	3950, 287, 288, 0, 0, 0, 0, 0, 648, 0,
	2051, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 649, 650, 0, 297, 651, 298, 652, 0,
	653, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 654, 655, 656, 0, 306, 307, 657, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 834, 337, 0, 338, 340, 658, 659, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 355, 356, 357, 0, 358, 359, 660, 360, 361,
	362, 364, 366, 363, 365, 367, 368, 369, 370, 661,
	662, 371, 0, 277, 0, 0, 0, 0, 0, 372,
	373, 374, 663, 0, 0, 0, 375, 0, 376, 377,
	378, 0, 0, 0, 379, 380, 381, 664, 665, 382,
	383, 384, 385, 386, 387, 388, 389, 390, 0, 391,
	666, 0, 667, 392, 0, 393, 394, 395, 396, 397,
	668, 669, 670, 483, 0, 398, 399, 0, 400, 401,
	402, 403, 404, 0, 0, 0, 278, 405, 406, 407,
	0, 0, 408, 671, 672, 0, 673, 0, 409, 410,
	0, 674, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 675, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	478, 466, 467, 468, 0, 477, 465, 0, 279, 0,
	479, 480, 481, 0, 676, 482, 677, 484, 485, 0,
	0, 486, 0, 0, 0, 488, 489, 490, 0, 0,
	491, 492, 678, 0, 493, 0, 679, 494, 495, 487,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 0,
	505, 506, 680, 507, 508, 509, 681, 510, 511, 512,
	682, 513, 683, 514, 515, 0, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 524, 684, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 536, 0, 537, 538, 539, 540,
	535, 541, 542, 543, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 685, 554, 0, 555,
	556, 562, 563, 564, 557, 558, 3949, 566, 567, 568,
	569, 0, 571, 572, 570, 573, 574, 575, 0, 576,
	577, 559, 560, 578, 579, 0, 580, 581, 582, 583,
	584, 585, 586, 686, 0, 587, 0, 588, 589, 590,
	591, 593, 561, 594, 599, 600, 687, 595, 596, 597,
	598, 688, 602, 603, 0, 604, 605, 0, 601, 592,
	832, 606, 607, 608, 609, 610, 833, 612, 613, 0,
	614, 689, 690, 691, 692, 0, 623, 0, 615, 616,
	617, 693, 618, 694, 0, 619, 620, 3948, 622, 0,
	624, 625, 0, 0, 626, 627, 628, 630, 631, 629,
	632, 0, 633, 0, 0, 634, 635, 636, 695, 696,
	697, 0, 638, 637, 639, 640, 698, 641, 642, 0,
	827, 0, 0, 643, 644, 699, 645, 646, 647, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 2091, 287, 288, 0, 0, 0,
	0, 837, 648, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 649, 650, 0, 297,
	651, 298, 652, 0, 653, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 654, 655, 656, 0, 306,
	307, 657, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 834, 337, 0, 338,
	340, 658, 659, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 355, 356, 357, 0, 358,
	359, 660, 360, 361, 362, 364, 366, 363, 365, 367,
	368, 369, 370, 661, 662, 371, 0, 277, 0, 0,
	0, 0, 0, 372, 373, 374, 663, 0, 0, 0,
	375, 0, 376, 377, 378, 0, 0, 0, 379, 380,
	381, 664, 665, 382, 383, 384, 385, 386, 387, 388,
	389, 390, 0, 391, 666, 0, 667, 392, 0, 393,
	394, 395, 396, 397, 668, 669, 670, 483, 0, 398,
	399, 0, 400, 401, 402, 403, 404, 0, 0, 0,
	278, 405, 406, 407, 0, 0, 408, 671, 672, 0,
	673, 0, 409, 410, 0, 674, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 675, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 478, 466, 467, 468, 0, 477,
	465, 0, 279, 0, 479, 480, 481, 0, 676, 482,
	677, 484, 485, 0, 0, 486, 0, 0, 0, 488,
	489, 490, 0, 0, 491, 492, 678, 0, 493, 0,
	679, 494, 495, 487, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 0, 505, 506, 680, 507, 508, 509,
	681, 510, 511, 512, 682, 513, 683, 514, 515, 0,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 524,
	684, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 536, 0,
	537, 538, 539, 540, 535, 541, 542, 543, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	685, 554, 0, 555, 556, 562, 563, 564, 557, 558,
	2090, 566, 567, 568, 569, 0, 2092, 572, 570, 573,
	574, 575, 0, 576, 577, 559, 560, 578, 579, 0,
	580, 581, 582, 583, 584, 585, 586, 686, 0, 587,
	0, 588, 589, 590, 591, 593, 561, 594, 599, 600,
	687, 595, 596, 597, 598, 688, 602, 603, 0, 604,
	605, 0, 601, 592, 832, 606, 607, 608, 609, 610,
	833, 612, 613, 0, 614, 689, 690, 691, 692, 0,
	623, 0, 615, 616, 617, 693, 618, 694, 0, 619,
	620, 2089, 622, 0, 624, 625, 0, 0, 626, 627,
	628, 630, 631, 629, 632, 0, 633, 0, 0, 634,
	635, 636, 695, 696, 697, 0, 638, 637, 639, 640,
	698, 641, 642, 0, 827, 0, 0, 643, 644, 699,
	645, 646, 647, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 2042, 287,
	288, 0, 0, 0, 0, 837, 648, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	649, 650, 0, 297, 651, 298, 652, 0, 653, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 654,
	655, 656, 0, 306, 307, 657, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	834, 337, 0, 338, 340, 658, 659, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 355,
	356, 357, 0, 358, 359, 660, 360, 361, 362, 364,
	366, 363, 365, 367, 368, 369, 370, 661, 662, 371,
	0, 277, 0, 0, 0, 0, 0, 372, 373, 374,
	663, 0, 0, 0, 375, 0, 376, 377, 378, 0,
	0, 0, 379, 380, 381, 664, 665, 382, 383, 384,
	385, 386, 387, 388, 389, 390, 0, 391, 666, 0,
	667, 392, 0, 393, 394, 395, 396, 397, 668, 669,
	670, 483, 0, 398, 399, 0, 400, 401, 402, 403,
	404, 0, 0, 0, 278, 405, 406, 407, 0, 0,
	408, 671, 672, 0, 673, 0, 409, 410, 0, 674,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 675, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 478, 466,
	467, 468, 0, 477, 465, 0, 279, 0, 479, 480,
	481, 0, 676, 482, 677, 484, 485, 0, 0, 486,
	0, 0, 0, 488, 489, 490, 0, 0, 491, 492,
	678, 0, 493, 0, 679, 494, 495, 487, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 0, 505, 506,
	680, 507, 508, 509, 681, 510, 511, 512, 682, 513,
	683, 514, 515, 0, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 524, 684, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 536, 0, 537, 538, 539, 540, 535, 541,
	542, 543, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 685, 554, 0, 555, 556, 562,
	563, 564, 557, 558, 2041, 566, 567, 568, 569, 0,
	2043, 572, 570, 573, 574, 575, 0, 576, 577, 559,
	560, 578, 579, 0, 580, 581, 582, 583, 584, 585,
	586, 686, 0, 587, 0, 588, 589, 590, 591, 593,
	561, 594, 599, 600, 687, 595, 596, 597, 598, 688,
	602, 603, 0, 604, 605, 0, 601, 592, 832, 606,
	607, 608, 609, 610, 833, 612, 613, 0, 614, 689,
	690, 691, 692, 0, 623, 0, 615, 616, 617, 693,
	618, 694, 0, 619, 620, 2040, 622, 0, 624, 625,
	0, 0, 626, 627, 628, 630, 631, 629, 632, 0,
	633, 0, 0, 634, 635, 636, 695, 696, 697, 0,
	638, 637, 639, 640, 698, 641, 642, 825, 0, 827,
	0, 643, 644, 699, 645, 646, 647, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 837,
	0, 648, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 649, 650, 0, 297, 651,
	298, 652, 0, 653, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 654, 655, 656, 0, 306, 307,
	657, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 834, 337, 0, 338, 340,
	658, 659, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 357, 0, 358, 359,
	660, 360, 361, 362, 364, 366, 363, 365, 367, 368,
	369, 370, 661, 662, 371, 0, 277, 0, 0, 0,
	0, 0, 372, 373, 374, 663, 0, 0, 0, 375,
	0, 376, 377, 378, 0, 0, 0, 379, 380, 381,
	664, 665, 382, 383, 384, 385, 386, 387, 388, 389,
	390, 0, 391, 666, 0, 667, 392, 0, 393, 394,
	395, 396, 397, 668, 669, 670, 483, 0, 398, 399,
	0, 400, 401, 402, 403, 404, 0, 0, 0, 278,
	405, 406, 407, 0, 0, 408, 671, 672, 0, 673,
	0, 409, 410, 0, 674, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 675, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 478, 466, 467, 468, 0, 477, 465,
	0, 279, 0, 479, 480, 481, 0, 676, 482, 677,
	484, 485, 0, 0, 486, 0, 0, 0, 488, 489,
	490, 0, 0, 491, 492, 678, 0, 493, 0, 679,
	494, 495, 487, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 0, 505, 506, 680, 507, 508, 509, 681,
	510, 511, 512, 682, 513, 683, 514, 515, 0, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 524, 684,
	525, 526, 528, 527, 529, 0, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 536, 0, 537,
	538, 539, 540, 535, 541, 542, 543, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 685,
	554, 0, 555, 556, 562, 563, 564, 557, 558, 565,
	566, 567, 568, 569, 0, 571, 572, 570, 573, 574,
	575, 0, 576, 577, 559, 560, 578, 579, 0, 580,
	581, 582, 583, 584, 585, 586, 686, 0, 587, 0,
	588, 589, 590, 591, 593, 561, 594, 599, 600, 687,
	595, 596, 597, 598, 688, 602, 603, 0, 604, 605,
	0, 601, 592, 832, 606, 607, 608, 609, 610, 833,
	612, 613, 0, 614, 689, 690, 691, 692, 0, 623,
	0, 615, 616, 617, 693, 618, 694, 0, 619, 620,
	621, 622, 0, 624, 625, 0, 0, 626, 627, 628,
	630, 631, 629, 632, 0, 633, 0, 0, 634, 635,
	636, 695, 696, 697, 0, 638, 637, 639, 640, 698,
	641, 642, 0, 827, 0, 0, 643, 644, 699, 645,
	646, 647, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 837, 648, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 649,
	650, 0, 297, 651, 298, 652, 0, 653, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 654, 655,
	656, 0, 306, 307, 657, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 834,
	337, 0, 338, 340, 658, 659, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 354, 0, 355, 356,
	357, 0, 358, 359, 660, 360, 361, 362, 364, 366,
	363, 365, 367, 368, 369, 370, 661, 662, 371, 0,
	277, 0, 0, 0, 0, 0, 372, 373, 374, 663,
	0, 0, 0, 375, 0, 376, 377, 378, 0, 0,
	0, 379, 380, 381, 664, 665, 382, 383, 384, 385,
	386, 387, 388, 389, 390, 0, 391, 666, 0, 667,
	392, 0, 393, 394, 395, 396, 397, 668, 669, 670,
	483, 0, 398, 399, 0, 400, 401, 402, 403, 404,
	0, 0, 0, 278, 405, 406, 407, 0, 0, 408,
	671, 672, 0, 673, 0, 409, 410, 0, 674, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	675, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 478, 466, 467,
	468, 0, 477, 465, 0, 279, 0, 479, 480, 481,
	0, 676, 482, 677, 484, 485, 0, 0, 486, 0,
	0, 0, 488, 489, 490, 0, 0, 491, 492, 678,
	0, 493, 0, 679, 494, 495, 487, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 0, 505, 506, 680,
	507, 508, 509, 681, 510, 511, 512, 682, 513, 683,
	514, 515, 0, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 524, 684, 525, 526, 528, 527, 529, 0,
	530, 0, 531, 532, 533, 0, 0, 0, 0, 0,
	534, 536, 0, 537, 538, 539, 540, 535, 541, 542,
	543, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 685, 554, 0, 555, 556, 562, 563,
	564, 557, 558, 565, 566, 567, 568, 569, 0, 571,
	572, 570, 573, 574, 575, 0, 576, 577, 559, 560,
	578, 579, 0, 580, 581, 582, 583, 584, 585, 586,
	686, 0, 587, 0, 588, 589, 590, 591, 593, 561,
	594, 599, 600, 687, 595, 596, 597, 598, 688, 602,
	603, 0, 604, 605, 0, 601, 592, 832, 606, 607,
	608, 609, 610, 833, 612, 613, 0, 614, 689, 690,
	691, 692, 0, 623, 0, 615, 616, 617, 693, 618,
	694, 0, 619, 620, 621, 622, 0, 624, 625, 0,
	0, 626, 627, 628, 630, 631, 629, 632, 0, 633,
	0, 0, 634, 635, 636, 695, 696, 697, 0, 638,
	637, 639, 640, 698, 641, 642, 0, 827, 0, 0,
	643, 644, 699, 645, 646, 647, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 837, 648,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 649, 650, 0, 297, 651, 298, 652,
	0, 653, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 654, 655, 656, 0, 306, 307, 657, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 834, 337, 0, 338, 340, 658, 659,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	354, 0, 355, 356, 357, 0, 358, 359, 660, 360,
	361, 362, 364, 366, 363, 365, 367, 368, 369, 370,
	661, 662, 371, 0, 277, 0, 0, 0, 0, 0,
	372, 373, 374, 663, 0, 0, 0, 375, 0, 376,
	377, 378, 0, 0, 0, 379, 380, 381, 664, 665,
	382, 383, 384, 385, 386, 387, 388, 389, 390, 0,
	391, 666, 0, 667, 392, 0, 393, 394, 395, 396,
	397, 668, 669, 670, 483, 0, 398, 399, 0, 400,
	401, 402, 403, 404, 0, 0, 0, 278, 405, 406,
	407, 0, 0, 408, 671, 672, 0, 673, 0, 409,
	410, 0, 674, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 675, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 478, 466, 467, 468, 0, 477, 465, 0, 279,
	0, 479, 480, 481, 0, 676, 482, 677, 484, 485,
	0, 0, 486, 0, 0, 0, 488, 489, 490, 0,
	0, 491, 492, 678, 0, 493, 0, 679, 494, 495,
	487, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	0, 505, 506, 680, 507, 508, 509, 681, 510, 511,
	512, 682, 513, 683, 514, 515, 0, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 524, 684, 525, 526,
	528, 527, 529, 0, 530, 0, 531, 532, 533, 0,
	0, 0, 0, 0, 534, 536, 0, 537, 538, 539,
	540, 535, 541, 542, 543, 544, 545, 0, 546, 547,
	548, 0, 2410, 550, 551, 552, 553, 685, 554, 0,
	555, 556, 562, 563, 564, 557, 558, 2411, 566, 567,
	568, 569, 0, 571, 572, 570, 573, 574, 575, 0,
	576, 577, 559, 560, 578, 579, 0, 580, 581, 582,
	583, 584, 585, 586, 686, 0, 587, 0, 588, 589,
	590, 591, 593, 561, 594, 599, 600, 687, 595, 596,
	597, 598, 688, 602, 603, 0, 604, 605, 0, 601,
	592, 832, 606, 607, 608, 609, 610, 833, 612, 613,
	0, 614, 689, 690, 691, 692, 0, 623, 0, 615,
	616, 617, 693, 618, 694, 0, 619, 620, 2412, 622,
	0, 624, 625, 0, 0, 626, 627, 628, 630, 631,
	629, 632, 0, 633, 0, 0, 634, 635, 636, 695,
	696, 697, 0, 638, 637, 639, 640, 698, 641, 642,
	0, 274, 0, 0, 643, 644, 699, 645, 646, 647,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 837, 648, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 649, 650, 0,
	297, 651, 298, 652, 0, 653, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 654, 655, 656, 0,
	306, 307, 657, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 658, 659, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 357, 0,
	358, 359, 660, 360, 361, 362, 364, 366, 363, 365,
	367, 368, 369, 370, 661, 662, 371, 0, 277, 0,
	0, 0, 0, 0, 372, 373, 374, 663, 0, 0,
	0, 375, 0, 376, 377, 378, 0, 0, 0, 379,
	380, 381, 664, 665, 382, 383, 384, 385, 386, 387,
	388, 389, 390, 0, 391, 666, 0, 667, 392, 0,
	393, 394, 395, 396, 397, 668, 669, 670, 483, 0,
	398, 399, 0, 400, 401, 402, 403, 404, 0, 0,
	0, 278, 405, 406, 407, 0, 0, 408, 671, 672,
	0, 673, 0, 409, 410, 0, 674, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 675, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 478, 466, 467, 468, 0,
	477, 465, 0, 279, 0, 479, 480, 481, 0, 676,
	482, 677, 484, 485, 0, 0, 486, 0, 0, 0,
	488, 489, 490, 0, 0, 491, 492, 678, 0, 493,
	0, 679, 494, 495, 487, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 0, 505, 506, 680, 507, 508,
	509, 681, 510, 511, 512, 682, 513, 683, 514, 515,
	0, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	524, 684, 525, 526, 528, 527, 529, 0, 530, 0,
	531, 532, 533, 0, 0, 0, 0, 0, 534, 536,
	0, 537, 538, 539, 540, 535, 541, 542, 543, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 685, 554, 0, 555, 556, 562, 563, 564, 557,
	558, 565, 566, 567, 568, 569, 0, 571, 572, 570,
	573, 574, 575, 0, 576, 577, 559, 560, 578, 579,
	0, 580, 581, 582, 583, 584, 585, 586, 686, 0,
	587, 0, 588, 589, 590, 591, 593, 561, 594, 599,
	600, 687, 595, 596, 597, 598, 688, 602, 603, 0,
	604, 605, 0, 601, 592, 0, 606, 607, 608, 609,
	610, 611, 612, 613, 0, 614, 689, 690, 691, 692,
	0, 623, 0, 615, 616, 617, 693, 618, 694, 0,
	619, 620, 621, 622, 0, 624, 625, 0, 0, 626,
	627, 628, 630, 631, 629, 632, 0, 633, 0, 0,
	634, 635, 636, 695, 696, 697, 0, 638, 637, 639,
	640, 698, 641, 642, 0, 0, 0, 0, 643, 644,
	699, 645, 646, 647, 0, 0, 0, 0, 0, 0,
	1577, 1576, 0, 0, 0, 0, 1574, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 837, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 648, 0, 0, 0, 0, 289, 290, 1217,
	291, 292, 293, 294, 295, 296, 649, 650, 0, 297,
	651, 298, 652, 0, 653, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 654, 655, 656, 0, 306,
	307, 657, 0, 1501, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1218, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 658, 659, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 355, 356, 357, 0, 358,
	359, 660, 360, 361, 362, 364, 366, 363, 365, 367,
	368, 369, 370, 661, 662, 371, 0, 277, 0, 0,
	0, 0, 0, 372, 373, 374, 663, 0, 0, 0,
	375, 0, 376, 377, 378, 0, 0, 1219, 379, 380,
	381, 664, 665, 382, 383, 384, 385, 386, 387, 388,
	389, 390, 0, 391, 666, 0, 667, 392, 0, 393,
	394, 395, 396, 397, 668, 669, 670, 483, 1221, 398,
	399, 0, 400, 401, 402, 403, 404, 0, 0, 0,
	0, 405, 406, 407, 0, 1220, 408, 671, 672, 0,
	673, 0, 409, 410, 1222, 674, 1223, 411, 412, 413,
	1224, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 675, 1225, 425,
	426, 1226, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1227, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 478, 466, 467, 468, 1228, 477,
	465, 0, 0, 1229, 479, 480, 481, 4043, 676, 482,
	677, 484, 485, 0, 0, 486, 0, 0, 0, 488,
	489, 490, 0, 0, 491, 492, 678, 1230, 493, 1231,
	679, 494, 495, 487, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 0, 505, 506, 680, 507, 508, 509,
	681, 510, 511, 512, 682, 513, 683, 514, 515, 0,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 524,
	684, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 536, 0,
	537, 538, 539, 540, 535, 541, 542, 543, 544, 545,
	0, 546, 547, 548, 1232, 549, 550, 551, 552, 553,
	685, 554, 0, 555, 556, 562, 563, 564, 557, 558,
	565, 566, 567, 568, 569, 0, 571, 572, 570, 573,
	574, 575, 0, 576, 577, 559, 560, 578, 579, 1233,
	580, 581, 582, 583, 584, 585, 586, 686, 0, 587,
	0, 588, 589, 590, 591, 593, 561, 594, 599, 600,
	687, 595, 596, 597, 598, 688, 602, 603, 0, 604,
	605, 0, 601, 592, 0, 606, 607, 608, 609, 610,
	611, 612, 613, 0, 614, 689, 690, 691, 692, 0,
	623, 0, 615, 616, 617, 693, 618, 694, 0, 619,
	620, 621, 622, 0, 624, 625, 0, 0, 626, 627,
	628, 630, 631, 629, 632, 0, 633, 0, 0, 634,
	635, 636, 695, 696, 697, 0, 638, 637, 639, 640,
	698, 641, 642, 0, 0, 0, 0, 643, 644, 699,
	645, 646, 647, 1577, 1576, 0, 0, 0, 0, 1574,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 648, 0, 0, 0, 0,
	289, 290, 1217, 291, 292, 293, 294, 295, 296, 649,
	650, 0, 297, 651, 298, 652, 0, 653, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 654, 655,
	656, 0, 306, 307, 657, 0, 1501, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1218, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 658, 659, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 354, 0, 355, 356,
	357, 0, 358, 359, 660, 360, 361, 362, 364, 366,
	363, 365, 367, 368, 369, 370, 661, 662, 371, 0,
	277, 0, 0, 0, 0, 0, 372, 373, 374, 663,
	0, 0, 0, 375, 0, 376, 377, 378, 0, 0,
	1219, 379, 380, 381, 664, 665, 382, 383, 384, 385,
	386, 387, 388, 389, 390, 0, 391, 666, 0, 667,
	392, 0, 393, 394, 395, 396, 397, 668, 669, 670,
	483, 1221, 398, 399, 0, 400, 401, 402, 403, 404,
	0, 0, 0, 0, 405, 406, 407, 0, 1220, 408,
	671, 672, 0, 673, 0, 409, 410, 1222, 674, 1223,
	411, 412, 413, 1224, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	675, 1225, 425, 426, 1226, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1227, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 478, 466, 467,
	468, 1228, 477, 465, 0, 0, 1229, 479, 480, 481,
	3623, 676, 482, 677, 484, 485, 0, 0, 486, 0,
	0, 0, 488, 489, 490, 0, 0, 491, 492, 678,
	1230, 493, 1231, 679, 494, 495, 487, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 0, 505, 506, 680,
	507, 508, 509, 681, 510, 511, 512, 682, 513, 683,
	514, 515, 0, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 524, 684, 525, 526, 528, 527, 529, 0,
	530, 0, 531, 532, 533, 0, 0, 0, 0, 0,
	534, 536, 0, 537, 538, 539, 540, 535, 541, 542,
	543, 544, 545, 0, 546, 547, 548, 1232, 549, 550,
	551, 552, 553, 685, 554, 0, 555, 556, 562, 563,
	564, 557, 558, 565, 566, 567, 568, 569, 0, 571,
	572, 570, 573, 574, 575, 0, 576, 577, 559, 560,
	578, 579, 1233, 580, 581, 582, 583, 584, 585, 586,
	686, 0, 587, 0, 588, 589, 590, 591, 593, 561,
	594, 599, 600, 687, 595, 596, 597, 598, 688, 602,
	603, 0, 604, 605, 0, 601, 592, 0, 606, 607,
	608, 609, 610, 611, 612, 613, 0, 614, 689, 690,
	691, 692, 0, 623, 0, 615, 616, 617, 693, 618,
	694, 0, 619, 620, 621, 622, 0, 624, 625, 0,
	0, 626, 627, 628, 630, 631, 629, 632, 0, 633,
	0, 0, 634, 635, 636, 695, 696, 697, 0, 638,
	637, 639, 640, 698, 641, 642, 0, 0, 0, 0,
	643, 644, 699, 645, 646, 647, 1705, 0, 1577, 1576,
	0, 0, 0, 0, 1574, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	648, 0, 0, 0, 0, 289, 290, 1217, 291, 292,
	293, 294, 295, 296, 649, 650, 0, 297, 651, 298,
	652, 0, 653, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 654, 655, 656, 0, 306, 307, 657,
	0, 1501, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1218, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 658,
	659, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 355, 356, 357, 0, 358, 359, 660,
	360, 361, 362, 364, 366, 363, 365, 367, 368, 369,
	370, 661, 662, 371, 0, 277, 0, 0, 0, 0,
	0, 1704, 373, 374, 663, 0, 0, 0, 375, 0,
	376, 377, 378, 0, 0, 1219, 379, 380, 381, 664,
	665, 382, 383, 384, 385, 386, 387, 388, 389, 390,
	0, 391, 666, 0, 667, 392, 0, 393, 394, 395,
	396, 397, 668, 669, 670, 483, 1221, 398, 399, 0,
	400, 401, 402, 403, 404, 0, 0, 0, 0, 405,
	406, 407, 0, 1220, 408, 671, 672, 0, 673, 0,
	409, 410, 1222, 674, 1223, 411, 412, 413, 1224, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 675, 1225, 425, 426, 1226,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1227,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 478, 466, 467, 468, 1228, 477, 465, 0,
	0, 1229, 479, 480, 481, 0, 676, 482, 677, 484,
	485, 0, 0, 486, 0, 0, 0, 488, 489, 490,
	0, 0, 491, 492, 678, 1230, 493, 1231, 679, 494,
	495, 487, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 0, 505, 506, 680, 507, 508, 509, 681, 510,
	511, 512, 682, 513, 683, 514, 515, 0, 516, 517,
	0, 518, 519, 520, 521, 522, 1703, 524, 684, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 536, 0, 537, 538,
	539, 540, 535, 541, 542, 543, 544, 545, 0, 546,
	547, 548, 1232, 549, 550, 551, 552, 553, 685, 554,
	0, 555, 556, 562, 563, 564, 557, 558, 565, 1702,
	567, 568, 569, 0, 571, 572, 570, 573, 574, 575,
	0, 576, 577, 559, 560, 578, 579, 1233, 580, 581,
	582, 583, 584, 585, 586, 686, 0, 587, 0, 588,
	589, 590, 591, 593, 561, 594, 599, 600, 687, 595,
	596, 597, 598, 688, 602, 603, 0, 604, 605, 0,
	601, 592, 0, 606, 607, 608, 609, 610, 611, 612,
	613, 0, 614, 689, 690, 691, 692, 0, 623, 0,
	615, 616, 617, 693, 618, 694, 0, 619, 620, 621,
	622, 0, 624, 625, 0, 0, 626, 627, 628, 630,
	631, 629, 632, 0, 633, 0, 0, 634, 635, 636,
	695, 696, 697, 0, 638, 637, 639, 640, 698, 641,
	642, 0, 0, 0, 0, 643, 644, 699, 645, 646,
	647, 1570, 0, 1577, 1576, 0, 0, 0, 0, 1574,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 648, 0, 0, 0, 0,
	289, 290, 1217, 291, 292, 293, 294, 295, 296, 649,
	650, 0, 297, 651, 298, 652, 0, 653, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 654, 655,
	656, 0, 306, 307, 657, 0, 1501, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1218, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 658, 659, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 354, 0, 355, 356,
	357, 0, 358, 359, 660, 360, 361, 362, 364, 366,
	363, 365, 367, 368, 369, 370, 661, 662, 371, 0,
	277, 0, 0, 0, 0, 0, 372, 373, 374, 663,
	0, 0, 0, 375, 0, 376, 377, 378, 0, 0,
	1219, 379, 380, 381, 664, 665, 382, 383, 384, 385,
	386, 387, 388, 389, 390, 0, 391, 666, 0, 667,
	392, 0, 393, 394, 395, 396, 397, 1572, 669, 670,
	483, 1221, 398, 399, 0, 400, 401, 402, 403, 404,
	0, 0, 0, 0, 405, 406, 407, 0, 1220, 408,
	671, 672, 0, 673, 0, 409, 410, 1222, 674, 1223,
	411, 412, 413, 1224, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	675, 1225, 425, 426, 1226, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1227, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 478, 466, 467,
	468, 1228, 477, 465, 0, 0, 1229, 479, 480, 481,
	0, 676, 482, 677, 484, 485, 0, 0, 486, 0,
	0, 0, 488, 489, 490, 0, 0, 491, 492, 678,
	1230, 493, 1231, 679, 494, 495, 487, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 0, 505, 506, 680,
	507, 508, 509, 681, 510, 511, 512, 682, 513, 683,
	514, 515, 0, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 524, 684, 525, 526, 528, 527, 529, 0,
	530, 0, 531, 532, 533, 0, 0, 0, 0, 0,
	534, 536, 0, 537, 538, 539, 540, 535, 541, 542,
	543, 544, 545, 0, 546, 547, 548, 1232, 549, 550,
	551, 552, 553, 685, 554, 0, 555, 556, 562, 563,
	564, 557, 558, 565, 566, 567, 568, 569, 0, 571,
	572, 570, 573, 574, 575, 0, 576, 577, 559, 560,
	578, 579, 1233, 580, 581, 582, 583, 584, 585, 586,
	686, 0, 587, 0, 588, 589, 590, 591, 593, 561,
	594, 599, 600, 687, 595, 596, 597, 598, 688, 602,
	603, 0, 604, 605, 0, 601, 592, 0, 606, 607,
	608, 609, 610, 611, 612, 613, 0, 614, 689, 690,
	691, 692, 0, 623, 0, 615, 616, 617, 693, 618,
	694, 0, 619, 620, 621, 622, 0, 624, 625, 0,
	0, 626, 627, 628, 630, 631, 629, 632, 0, 633,
	0, 0, 634, 635, 636, 695, 696, 697, 0, 638,
	637, 639, 640, 698, 641, 642, 0, 0, 0, 0,
	643, 644, 699, 645, 646, 647, 1577, 1576, 0, 0,
	0, 0, 1574, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 648, 0,
	0, 0, 0, 289, 290, 1217, 291, 292, 293, 294,
	295, 296, 649, 650, 0, 297, 651, 298, 652, 0,
	653, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 654, 655, 656, 0, 306, 307, 657, 0, 1501,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1218, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 658, 659, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 355, 356, 357, 0, 358, 359, 660, 360, 361,
	362, 364, 366, 363, 365, 367, 368, 369, 370, 661,
	662, 371, 0, 277, 0, 0, 0, 0, 0, 372,
	373, 374, 663, 0, 0, 0, 375, 0, 376, 377,
	378, 0, 0, 1219, 379, 380, 381, 664, 665, 382,
	383, 384, 385, 386, 387, 388, 389, 390, 0, 391,
	666, 0, 667, 392, 0, 393, 394, 395, 396, 397,
	668, 669, 670, 483, 1221, 398, 399, 0, 400, 401,
	402, 403, 404, 0, 0, 0, 0, 405, 406, 407,
	0, 1220, 408, 671, 672, 0, 673, 0, 409, 410,
	1222, 674, 1223, 411, 412, 413, 1224, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 675, 1225, 425, 426, 1226, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1227, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	478, 466, 467, 468, 1228, 477, 465, 0, 0, 1229,
	479, 480, 481, 0, 676, 482, 677, 484, 485, 0,
	0, 486, 0, 0, 0, 488, 489, 490, 0, 0,
	491, 492, 678, 1230, 493, 1231, 679, 494, 495, 487,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 0,
	505, 506, 680, 507, 508, 509, 681, 510, 511, 512,
	682, 513, 683, 514, 515, 0, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 524, 684, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 536, 0, 537, 538, 539, 540,
	535, 541, 542, 543, 544, 545, 0, 546, 547, 548,
	1232, 549, 550, 551, 552, 553, 685, 554, 0, 555,
	556, 562, 563, 564, 557, 558, 565, 566, 567, 568,
	569, 0, 571, 572, 570, 573, 574, 575, 0, 576,
	577, 559, 560, 578, 579, 1233, 580, 581, 582, 583,
	584, 585, 586, 686, 0, 587, 0, 588, 589, 590,
	591, 593, 561, 594, 599, 600, 687, 595, 596, 597,
	598, 688, 602, 603, 0, 604, 605, 0, 601, 592,
	0, 606, 607, 608, 609, 610, 611, 612, 613, 0,
	614, 689, 690, 691, 692, 0, 623, 0, 615, 616,
	617, 693, 618, 694, 0, 619, 620, 621, 622, 0,
	624, 625, 0, 0, 626, 627, 628, 630, 631, 629,
	632, 0, 633, 0, 0, 634, 635, 636, 695, 696,
	697, 0, 638, 637, 639, 640, 698, 641, 642, 1577,
	1576, 0, 0, 643, 644, 699, 645, 646, 647, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 648, 0, 0, 0, 0, 289, 290, 1217, 291,
	292, 293, 294, 295, 296, 649, 650, 0, 297, 651,
	298, 652, 0, 653, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 654, 655, 656, 0, 306, 307,
	657, 0, 1501, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1218, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	658, 659, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 357, 0, 358, 359,
	660, 360, 361, 362, 364, 366, 363, 365, 367, 368,
	369, 370, 661, 662, 371, 0, 277, 0, 0, 0,
	0, 0, 372, 373, 374, 663, 0, 0, 0, 375,
	0, 376, 377, 378, 0, 0, 1219, 379, 380, 381,
	664, 665, 382, 383, 384, 385, 386, 387, 388, 389,
	390, 0, 391, 666, 0, 667, 392, 0, 393, 394,
	395, 396, 397, 668, 669, 670, 483, 1221, 398, 399,
	0, 400, 401, 402, 403, 404, 0, 0, 0, 0,
	405, 406, 407, 0, 1220, 408, 671, 672, 0, 673,
	0, 409, 410, 1222, 674, 1223, 411, 412, 413, 1224,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 675, 1225, 425, 426,
	1226, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1227, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 478, 466, 467, 468, 1228, 477, 465,
	0, 0, 1229, 479, 480, 481, 0, 676, 482, 677,
	484, 485, 0, 0, 486, 0, 0, 0, 488, 489,
	490, 0, 0, 491, 492, 678, 1230, 493, 1231, 679,
	494, 495, 487, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 0, 505, 506, 680, 507, 508, 509, 681,
	510, 511, 512, 682, 513, 683, 514, 515, 0, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 524, 684,
	525, 526, 528, 527, 529, 0, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 536, 0, 537,
	538, 539, 540, 535, 541, 542, 543, 544, 545, 0,
	546, 547, 548, 1232, 549, 550, 551, 552, 553, 685,
	554, 0, 555, 556, 562, 563, 564, 557, 558, 565,
	566, 567, 568, 569, 0, 571, 572, 570, 573, 574,
	575, 0, 576, 577, 559, 560, 578, 579, 1233, 580,
	581, 582, 583, 584, 585, 586, 686, 0, 587, 0,
	588, 589, 590, 591, 593, 561, 594, 599, 600, 687,
	595, 596, 597, 598, 688, 602, 603, 0, 604, 605,
	0, 601, 592, 0, 606, 607, 608, 609, 610, 611,
	612, 613, 0, 614, 689, 690, 691, 692, 0, 623,
	0, 615, 616, 617, 693, 618, 694, 0, 619, 620,
	621, 622, 0, 624, 625, 0, 0, 626, 627, 628,
	630, 631, 629, 632, 0, 633, 0, 0, 634, 635,
	636, 695, 696, 697, 0, 638, 637, 639, 640, 698,
	641, 642, 1577, 0, 0, 0, 643, 644, 699, 645,
	646, 647, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 648, 0, 0, 0, 0, 289,
	290, 1217, 291, 292, 293, 294, 295, 296, 649, 650,
	0, 297, 651, 298, 652, 0, 653, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 654, 655, 656,
	0, 306, 307, 657, 0, 1501, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1218, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 658, 659, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 355, 356, 357,
	0, 358, 359, 660, 360, 361, 362, 364, 366, 363,
	365, 367, 368, 369, 370, 661, 662, 371, 0, 277,
	0, 0, 0, 0, 0, 372, 373, 374, 663, 0,
	0, 0, 375, 0, 376, 377, 378, 0, 0, 1219,
	379, 380, 381, 664, 665, 382, 383, 384, 385, 386,
	387, 388, 389, 390, 0, 391, 666, 0, 667, 392,
	0, 393, 394, 395, 396, 397, 668, 669, 670, 483,
	1221, 398, 399, 0, 400, 401, 402, 403, 404, 0,
	0, 0, 0, 405, 406, 407, 0, 1220, 408, 671,
	672, 0, 673, 0, 409, 410, 1222, 674, 1223, 411,
	412, 413, 1224, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 675,
	1225, 425, 426, 1226, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1227, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 478, 466, 467, 468,
	1228, 477, 465, 0, 0, 1229, 479, 480, 481, 0,
	676, 482, 677, 484, 485, 0, 0, 486, 0, 0,
	0, 488, 489, 490, 0, 0, 491, 492, 678, 1230,
	493, 1231, 679, 494, 495, 487, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 0, 505, 506, 680, 507,
	508, 509, 681, 510, 511, 512, 682, 513, 683, 514,
	515, 0, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 524, 684, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	536, 0, 537, 538, 539, 540, 535, 541, 542, 543,
	544, 545, 0, 546, 547, 548, 1232, 549, 550, 551,
	552, 553, 685, 554, 0, 555, 556, 562, 563, 564,
	557, 558, 565, 566, 567, 568, 569, 0, 571, 572,
	570, 573, 574, 575, 0, 576, 577, 559, 560, 578,
	579, 1233, 580, 581, 582, 583, 584, 585, 586, 686,
	0, 587, 0, 588, 589, 590, 591, 593, 561, 594,
	599, 600, 687, 595, 596, 597, 598, 688, 602, 603,
	0, 604, 605, 0, 601, 592, 0, 606, 607, 608,
	609, 610, 611, 612, 613, 0, 614, 689, 690, 691,
	692, 0, 623, 0, 615, 616, 617, 693, 618, 694,
	0, 619, 620, 621, 622, 0, 624, 625, 0, 0,
	626, 627, 628, 630, 631, 629, 632, 0, 633, 0,
	0, 634, 635, 636, 695, 696, 697, 0, 638, 637,
	639, 640, 698, 641, 642, 274, 0, 0, 0, 643,
	644, 699, 645, 646, 647, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 648, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 649, 650, 0, 297, 651, 298, 652, 0, 653,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	654, 655, 656, 2936, 306, 307, 657, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 3665, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 658, 659, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 357, 0, 2940, 359, 660, 360, 361, 362,
	364, 366, 363, 365, 367, 368, 369, 370, 661, 662,
	371, 0, 3664, 0, 0, 0, 0, 0, 372, 373,
	374, 663, 0, 0, 0, 375, 0, 376, 377, 378,
	2939, 0, 0, 379, 380, 381, 664, 665, 382, 383,
	384, 385, 386, 387, 388, 389, 390, 0, 391, 666,
	0, 667, 392, 0, 393, 394, 395, 396, 397, 668,
	669, 670, 483, 0, 398, 399, 0, 400, 401, 402,
	403, 404, 0, 0, 0, 3661, 405, 406, 407, 0,
	0, 408, 671, 672, 0, 673, 0, 409, 3663, 0,
	674, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 675, 0, 425, 426, 3660, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 478,
	466, 467, 468, 0, 477, 465, 0, 0, 0, 479,
	480, 481, 0, 676, 482, 677, 484, 485, 0, 0,
	486, 0, 0, 0, 488, 489, 490, 0, 0, 491,
	492, 678, 0, 493, 0, 679, 494, 495, 487, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 0, 505,
	506, 680, 507, 508, 509, 681, 510, 511, 512, 682,
	513, 683, 514, 515, 2938, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 524, 684, 525, 526, 528, 527,
	529, 0, 530, 0, 531, 532, 533, 0, 0, 0,
	0, 0, 534, 536, 0, 537, 538, 539, 540, 535,
	541, 542, 543, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 685, 554, 0, 555, 556,
	562, 563, 564, 557, 558, 565, 566, 567, 568, 569,
	0, 571, 572, 570, 573, 574, 575, 0, 576, 577,
	559, 560, 578, 579, 0, 580, 581, 582, 583, 584,
	585, 586, 686, 0, 587, 0, 588, 589, 590, 591,
	593, 561, 594, 599, 600, 687, 595, 596, 597, 598,
	688, 602, 603, 0, 604, 605, 0, 601, 592, 0,
	606, 607, 608, 609, 610, 611, 612, 613, 0, 614,
	689, 690, 691, 692, 0, 623, 0, 615, 616, 617,
	693, 618, 694, 0, 619, 620, 621, 622, 0, 624,
	625, 0, 3662, 626, 627, 628, 630, 631, 629, 632,
	0, 633, 0, 0, 634, 635, 636, 695, 696, 697,
	0, 638, 637, 639, 640, 698, 641, 642, 274, 0,
	0, 0, 643, 644, 699, 645, 646, 647, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	648, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 649, 650, 0, 297, 651, 298,
	652, 0, 653, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 654, 655, 656, 2936, 306, 307, 657,
	0, 0, 2930, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 2932, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 658,
	659, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 355, 356, 357, 0, 2940, 359, 660,
	360, 361, 362, 364, 366, 363, 365, 367, 368, 369,
	370, 661, 662, 371, 0, 0, 0, 0, 0, 0,
	0, 372, 373, 374, 663, 0, 0, 0, 375, 0,
	376, 377, 378, 2939, 0, 0, 379, 380, 381, 664,
	665, 382, 383, 384, 385, 386, 387, 388, 389, 390,
	0, 391, 666, 0, 667, 392, 0, 393, 394, 395,
	396, 397, 2929, 669, 670, 483, 0, 398, 399, 0,
	400, 401, 402, 403, 404, 0, 0, 0, 0, 405,
	406, 407, 0, 0, 408, 671, 672, 0, 673, 0,
	409, 410, 0, 674, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 675, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 478, 466, 467, 468, 0, 477, 465, 0,
	0, 0, 479, 480, 481, 0, 676, 482, 677, 484,
	485, 0, 0, 486, 0, 0, 0, 488, 489, 490,
	0, 0, 491, 492, 678, 0, 493, 0, 679, 494,
	495, 487, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 0, 505, 506, 680, 507, 508, 509, 681, 510,
	511, 512, 682, 513, 683, 514, 515, 2938, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 524, 684, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 536, 0, 537, 538,
	539, 540, 535, 541, 542, 543, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 685, 554,
	0, 555, 556, 562, 563, 564, 557, 558, 565, 566,
	567, 568, 569, 0, 571, 572, 570, 573, 574, 575,
	0, 576, 577, 559, 560, 578, 579, 0, 580, 581,
	582, 583, 584, 585, 586, 686, 0, 587, 0, 588,
	589, 590, 591, 593, 561, 594, 599, 600, 687, 595,
	596, 597, 598, 688, 602, 603, 0, 604, 605, 0,
	601, 592, 0, 606, 607, 608, 609, 610, 611, 612,
	613, 0, 614, 689, 690, 691, 692, 0, 623, 0,
	615, 616, 617, 693, 618, 694, 0, 619, 620, 621,
	622, 0, 624, 625, 0, 2937, 626, 627, 628, 630,
	631, 629, 632, 0, 633, 0, 0, 634, 635, 636,
	695, 696, 697, 0, 638, 637, 639, 640, 698, 641,
	642, 1782, 0, 274, 0, 643, 644, 699, 645, 646,
	647, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 1781, 287, 288,
	0, 0, 0, 0, 0, 648, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 649,
	650, 0, 297, 651, 298, 652, 0, 653, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 654, 655,
	656, 0, 306, 307, 657, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 1780,
	337, 0, 338, 340, 658, 659, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 354, 0, 355, 356,
	357, 0, 358, 359, 660, 360, 361, 362, 364, 366,
	363, 365, 367, 368, 369, 370, 661, 662, 371, 0,
	277, 0, 0, 0, 0, 0, 372, 373, 374, 663,
	0, 0, 0, 375, 0, 376, 377, 378, 0, 0,
	0, 379, 380, 381, 664, 665, 382, 383, 384, 385,
	386, 387, 388, 389, 390, 0, 391, 666, 0, 667,
	392, 0, 393, 394, 395, 396, 397, 668, 669, 670,
	483, 0, 398, 399, 0, 400, 401, 402, 403, 404,
	0, 0, 0, 278, 405, 406, 407, 0, 0, 408,
	671, 672, 0, 673, 0, 409, 410, 0, 674, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	675, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 478, 466, 467,
	468, 0, 477, 465, 0, 279, 0, 479, 480, 481,
	0, 676, 482, 677, 484, 485, 0, 0, 486, 0,
	0, 0, 488, 489, 490, 0, 0, 491, 492, 678,
	0, 493, 0, 679, 494, 495, 487, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 0, 505, 506, 680,
	507, 508, 509, 681, 510, 511, 512, 682, 513, 683,
	514, 515, 0, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 524, 684, 525, 526, 528, 527, 529, 0,
	530, 0, 531, 532, 533, 0, 0, 0, 0, 0,
	534, 536, 0, 537, 538, 539, 540, 535, 541, 542,
	543, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 685, 554, 0, 555, 556, 562, 563,
	564, 1783, 558, 565, 566, 567, 568, 569, 0, 1779,
	572, 570, 573, 574, 575, 0, 576, 577, 559, 560,
	578, 579, 0, 580, 581, 582, 583, 584, 585, 586,
	686, 0, 587, 0, 588, 589, 590, 591, 593, 561,
	594, 599, 600, 687, 595, 596, 597, 598, 688, 602,
	603, 0, 604, 605, 0, 601, 592, 1777, 606, 607,
	608, 609, 610, 611, 612, 613, 0, 614, 689, 690,
	691, 692, 0, 623, 0, 615, 616, 617, 693, 618,
	694, 0, 619, 620, 621, 622, 0, 624, 625, 0,
	0, 626, 627, 628, 630, 631, 629, 632, 0, 633,
	0, 0, 634, 635, 636, 695, 696, 697, 0, 1778,
	637, 639, 640, 698, 641, 642, 1505, 0, 274, 0,
	643, 644, 699, 645, 646, 647, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	648, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 649, 650, 0, 297, 651, 298,
	652, 0, 653, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 654, 655, 656, 0, 306, 307, 657,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 658,
	659, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 355, 356, 357, 0, 358, 359, 660,
	360, 361, 362, 364, 366, 363, 365, 367, 368, 369,
	370, 661, 662, 371, 0, 277, 0, 0, 0, 0,
	0, 372, 373, 374, 663, 0, 0, 0, 375, 0,
	376, 377, 378, 0, 0, 0, 379, 380, 381, 664,
	665, 382, 383, 384, 385, 386, 387, 388, 389, 390,
	0, 391, 666, 0, 667, 392, 0, 393, 394, 395,
	396, 397, 1507, 669, 670, 483, 0, 398, 399, 0,
	400, 401, 402, 403, 404, 0, 0, 0, 278, 405,
	406, 407, 0, 0, 408, 671, 672, 0, 673, 0,
	409, 410, 0, 674, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 675, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 478, 466, 467, 468, 0, 477, 465, 0,
	279, 0, 479, 480, 481, 0, 676, 482, 677, 484,
	485, 0, 0, 486, 0, 0, 1267, 488, 489, 490,
	0, 0, 491, 492, 678, 0, 493, 0, 679, 494,
	495, 487, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 0, 505, 506, 680, 507, 508, 509, 681, 510,
	511, 512, 682, 513, 683, 514, 515, 0, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 524, 684, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 536, 0, 537, 538,
	539, 540, 535, 541, 542, 543, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 685, 554,
	0, 555, 556, 562, 563, 564, 557, 558, 565, 566,
	567, 568, 569, 0, 571, 572, 570, 573, 574, 575,
	0, 576, 577, 559, 560, 578, 579, 0, 580, 581,
	582, 583, 584, 585, 586, 686, 0, 587, 0, 588,
	589, 590, 591, 593, 561, 594, 599, 600, 687, 595,
	596, 597, 598, 688, 602, 603, 0, 604, 605, 0,
	601, 592, 0, 606, 607, 608, 609, 610, 611, 612,
	613, 0, 614, 689, 690, 691, 692, 0, 623, 0,
	615, 616, 617, 693, 618, 694, 0, 619, 620, 621,
	622, 0, 624, 625, 0, 0, 626, 627, 628, 630,
	631, 629, 632, 0, 633, 0, 0, 634, 635, 636,
	695, 696, 697, 0, 638, 637, 639, 640, 698, 641,
	642, 1502, 0, 274, 0, 643, 644, 699, 645, 646,
	647, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 648, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 649,
	650, 0, 297, 651, 298, 652, 0, 653, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 654, 655,
	656, 0, 306, 307, 657, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 658, 659, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 354, 0, 355, 356,
	357, 0, 358, 359, 660, 360, 361, 362, 364, 366,
	363, 365, 367, 368, 369, 370, 661, 662, 371, 0,
	277, 0, 0, 0, 0, 0, 372, 373, 374, 663,
	0, 0, 0, 375, 0, 376, 377, 378, 0, 0,
	0, 379, 380, 381, 664, 665, 382, 383, 384, 385,
	386, 387, 388, 389, 390, 0, 391, 666, 0, 667,
	392, 0, 393, 394, 395, 396, 397, 1504, 669, 670,
	483, 0, 398, 399, 0, 400, 401, 402, 403, 404,
	0, 0, 0, 278, 405, 406, 407, 0, 0, 408,
	671, 672, 0, 673, 0, 409, 410, 0, 674, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	675, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 478, 466, 467,
	468, 0, 477, 465, 0, 279, 0, 479, 480, 481,
	0, 676, 482, 677, 484, 485, 0, 0, 486, 0,
	0, 1267, 488, 489, 490, 0, 0, 491, 492, 678,
	0, 493, 0, 679, 494, 495, 487, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 0, 505, 506, 680,
	507, 508, 509, 681, 510, 511, 512, 682, 513, 683,
	514, 515, 0, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 524, 684, 525, 526, 528, 527, 529, 0,
	530, 0, 531, 532, 533, 0, 0, 0, 0, 0,
	534, 536, 0, 537, 538, 539, 540, 535, 541, 542,
	543, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 685, 554, 0, 555, 556, 562, 563,
	564, 557, 558, 565, 566, 567, 568, 569, 0, 571,
	572, 570, 573, 574, 575, 0, 576, 577, 559, 560,
	578, 579, 0, 580, 581, 582, 583, 584, 585, 586,
	686, 0, 587, 0, 588, 589, 590, 591, 593, 561,
	594, 599, 600, 687, 595, 596, 597, 598, 688, 602,
	603, 0, 604, 605, 0, 601, 592, 0, 606, 607,
	608, 609, 610, 611, 612, 613, 0, 614, 689, 690,
	691, 692, 0, 623, 0, 615, 616, 617, 693, 618,
	694, 0, 619, 620, 621, 622, 0, 624, 625, 0,
	0, 626, 627, 628, 630, 631, 629, 632, 0, 633,
	0, 0, 634, 635, 636, 695, 696, 697, 0, 638,
	637, 639, 640, 698, 641, 642, 1408, 0, 274, 0,
	643, 644, 699, 645, 646, 647, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	648, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 649, 650, 0, 297, 651, 298,
	652, 0, 653, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 654, 655, 656, 0, 306, 307, 657,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 658,
	659, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 355, 356, 357, 0, 358, 359, 660,
	360, 361, 362, 364, 366, 363, 365, 367, 368, 369,
	370, 661, 662, 371, 0, 277, 0, 0, 0, 0,
	0, 372, 373, 374, 663, 0, 0, 0, 375, 0,
	376, 377, 378, 0, 0, 0, 379, 380, 381, 664,
	665, 382, 383, 384, 385, 386, 387, 388, 389, 390,
	0, 391, 666, 0, 667, 392, 0, 393, 394, 395,
	396, 397, 1410, 669, 670, 483, 0, 398, 399, 0,
	400, 401, 402, 403, 404, 0, 0, 0, 278, 405,
	406, 407, 0, 0, 408, 671, 672, 0, 673, 0,
	409, 410, 0, 674, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 675, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 478, 466, 467, 468, 0, 477, 465, 0,
	279, 0, 479, 480, 481, 0, 676, 482, 677, 484,
	485, 0, 0, 486, 0, 0, 1267, 488, 489, 490,
	0, 0, 491, 492, 678, 0, 493, 0, 679, 494,
	495, 487, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 0, 505, 506, 680, 507, 508, 509, 681, 510,
	511, 512, 682, 513, 683, 514, 515, 0, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 524, 684, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 536, 0, 537, 538,
	539, 540, 535, 541, 542, 543, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 685, 554,
	0, 555, 556, 562, 563, 564, 557, 558, 565, 566,
	567, 568, 569, 0, 571, 572, 570, 573, 574, 575,
	0, 576, 577, 559, 560, 578, 579, 0, 580, 581,
	582, 583, 584, 585, 586, 686, 0, 587, 0, 588,
	589, 590, 591, 593, 561, 594, 599, 600, 687, 595,
	596, 597, 598, 688, 602, 603, 0, 604, 605, 0,
	601, 592, 0, 606, 607, 608, 609, 610, 611, 612,
	613, 0, 614, 689, 690, 691, 692, 0, 623, 0,
	615, 616, 617, 693, 618, 694, 0, 619, 620, 621,
	622, 0, 624, 625, 0, 0, 626, 627, 628, 630,
	631, 629, 632, 0, 633, 0, 0, 634, 635, 636,
	695, 696, 697, 0, 638, 637, 639, 640, 698, 641,
	642, 732, 0, 274, 0, 643, 644, 699, 645, 646,
	647, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 731, 285, 286, 720, 287, 288,
	0, 0, 0, 0, 0, 648, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 649,
	650, 0, 297, 651, 298, 652, 0, 653, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 654, 655,
	656, 0, 306, 307, 657, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 723, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 658, 659, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 354, 0, 355, 356,
	357, 0, 358, 359, 660, 360, 361, 362, 364, 366,
	363, 365, 367, 368, 369, 370, 661, 662, 371, 0,
	0, 0, 0, 0, 0, 0, 372, 373, 374, 663,
	0, 0, 0, 375, 0, 376, 377, 378, 0, 0,
	0, 379, 380, 381, 664, 665, 382, 383, 384, 385,
	386, 387, 388, 389, 390, 729, 391, 666, 0, 667,
	392, 0, 393, 394, 395, 396, 397, 668, 669, 670,
	483, 0, 398, 399, 0, 400, 401, 402, 403, 404,
	0, 0, 0, 0, 405, 406, 407, 0, 0, 408,
	671, 672, 0, 673, 0, 409, 410, 0, 674, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	675, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 478, 466, 467,
	468, 0, 477, 465, 0, 0, 0, 479, 480, 481,
	0, 676, 482, 677, 484, 485, 0, 0, 486, 0,
	0, 0, 488, 489, 490, 0, 0, 491, 492, 678,
	0, 493, 0, 679, 494, 495, 487, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 0, 505, 506, 680,
	507, 508, 509, 681, 510, 511, 512, 682, 513, 683,
	514, 515, 0, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 524, 684, 525, 526, 528, 527, 529, 0,
	530, 0, 531, 532, 533, 0, 0, 0, 0, 0,
	534, 536, 0, 537, 538, 539, 540, 535, 541, 542,
	543, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 685, 554, 0, 555, 556, 562, 563,
	564, 557, 558, 565, 566, 567, 568, 569, 725, 571,
	572, 570, 573, 574, 575, 0, 576, 577, 559, 560,
	578, 579, 0, 580, 581, 582, 583, 584, 585, 586,
	686, 0, 587, 0, 588, 589, 590, 591, 593, 561,
	594, 599, 600, 687, 595, 596, 597, 598, 688, 602,
	603, 0, 604, 605, 0, 601, 592, 0, 606, 607,
	608, 609, 610, 611, 612, 613, 0, 614, 689, 690,
	691, 692, 0, 623, 0, 615, 616, 617, 693, 618,
	694, 0, 619, 620, 621, 622, 0, 624, 625, 0,
	0, 626, 627, 628, 630, 631, 629, 632, 0, 633,
	0, 0, 634, 635, 636, 695, 696, 697, 0, 638,
	637, 639, 640, 698, 641, 642, 719, 0, 274, 0,
	643, 644, 699, 645, 646, 647, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 720, 287, 288, 0, 0, 0, 0, 0,
	648, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 649, 650, 0, 297, 651, 298,
	652, 0, 653, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 654, 655, 656, 0, 306, 307, 657,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 723, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 658,
	659, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 355, 356, 357, 0, 358, 359, 660,
	360, 361, 362, 364, 366, 363, 365, 367, 368, 369,
	370, 661, 662, 371, 0, 0, 0, 0, 0, 0,
	0, 372, 373, 374, 663, 0, 0, 0, 375, 0,
	376, 377, 378, 0, 0, 0, 379, 380, 381, 664,
	665, 382, 383, 384, 385, 386, 387, 388, 389, 390,
	724, 391, 666, 0, 667, 392, 0, 393, 394, 395,
	396, 397, 668, 669, 670, 483, 0, 398, 399, 0,
	400, 401, 402, 403, 404, 0, 0, 0, 0, 405,
	406, 407, 0, 0, 408, 671, 672, 0, 673, 0,
	409, 410, 0, 674, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 675, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 478, 466, 467, 468, 0, 477, 465, 0,
	0, 0, 479, 480, 481, 0, 676, 482, 677, 484,
	485, 0, 0, 486, 0, 0, 0, 488, 489, 490,
	0, 0, 491, 492, 678, 0, 493, 0, 679, 494,
	495, 487, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 0, 505, 506, 680, 507, 508, 509, 681, 510,
	511, 512, 682, 513, 683, 514, 515, 0, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 524, 684, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 536, 0, 537, 538,
	539, 540, 535, 541, 542, 543, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 685, 554,
	0, 555, 556, 562, 563, 564, 557, 558, 565, 566,
	567, 568, 569, 725, 571, 572, 570, 573, 574, 575,
	0, 576, 577, 559, 560, 578, 579, 0, 580, 581,
	582, 583, 584, 585, 586, 686, 0, 587, 0, 588,
	589, 590, 591, 593, 561, 594, 599, 600, 687, 595,
	596, 597, 598, 688, 602, 603, 0, 604, 605, 0,
	601, 592, 0, 606, 607, 608, 609, 610, 611, 612,
	613, 0, 614, 689, 690, 691, 692, 0, 623, 0,
	615, 616, 617, 693, 618, 694, 0, 619, 620, 621,
	622, 0, 624, 625, 0, 0, 626, 627, 628, 630,
	631, 629, 632, 0, 633, 0, 0, 634, 635, 636,
	695, 696, 697, 0, 638, 637, 639, 640, 698, 641,
	642, 274, 0, 0, 0, 643, 644, 699, 645, 646,
	647, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 720, 287, 288, 0, 0,
	0, 0, 0, 648, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 649, 650, 0,
	297, 651, 298, 652, 0, 653, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 654, 655, 656, 0,
	306, 307, 657, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 723,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 658, 659, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 357, 0,
	358, 359, 660, 360, 361, 362, 364, 366, 363, 365,
	367, 368, 369, 370, 661, 662, 371, 0, 0, 0,
	0, 0, 0, 0, 372, 373, 374, 663, 0, 0,
	0, 375, 0, 376, 377, 378, 0, 0, 0, 379,
	380, 381, 664, 665, 382, 383, 384, 385, 386, 387,
	388, 389, 390, 724, 391, 666, 0, 667, 392, 0,
	393, 394, 395, 396, 397, 668, 669, 670, 483, 0,
	398, 399, 0, 400, 401, 402, 403, 404, 0, 0,
	0, 0, 405, 406, 407, 0, 0, 408, 671, 672,
	0, 673, 0, 409, 410, 0, 674, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 675, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 478, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 479, 480, 481, 0, 676,
	482, 677, 484, 485, 0, 0, 486, 0, 0, 0,
	488, 489, 490, 0, 0, 491, 492, 678, 0, 493,
	0, 679, 494, 495, 487, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 0, 505, 506, 680, 507, 508,
	509, 681, 510, 511, 512, 682, 513, 683, 514, 515,
	0, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	524, 684, 525, 526, 528, 527, 529, 0, 530, 0,
	531, 532, 533, 0, 0, 0, 0, 0, 534, 536,
	0, 537, 538, 539, 540, 535, 541, 542, 543, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 685, 554, 0, 555, 556, 562, 563, 564, 557,
	558, 565, 566, 567, 568, 569, 725, 571, 572, 570,
	573, 574, 575, 0, 576, 577, 559, 560, 578, 579,
	0, 580, 581, 582, 583, 584, 585, 586, 686, 0,
	587, 0, 588, 589, 590, 591, 593, 561, 594, 599,
	600, 687, 595, 596, 597, 598, 688, 602, 603, 0,
	604, 605, 0, 601, 592, 0, 606, 607, 608, 609,
	610, 611, 612, 613, 0, 614, 689, 690, 691, 692,
	0, 623, 0, 615, 616, 617, 693, 618, 694, 0,
	619, 620, 621, 622, 0, 624, 625, 0, 0, 626,
	627, 628, 630, 631, 629, 632, 0, 633, 0, 0,
	634, 635, 636, 695, 696, 697, 0, 638, 637, 639,
	640, 698, 641, 642, 274, 0, 0, 0, 643, 644,
	699, 645, 646, 647, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 720, 287,
	288, 0, 0, 0, 0, 0, 648, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	649, 650, 0, 297, 651, 298, 652, 0, 653, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 654,
	655, 656, 0, 306, 307, 657, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 723, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 658, 659, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 355,
	356, 357, 0, 358, 359, 660, 360, 361, 362, 364,
	366, 363, 365, 367, 368, 369, 370, 661, 662, 371,
	0, 0, 0, 0, 0, 0, 0, 372, 373, 374,
	663, 0, 0, 0, 375, 0, 376, 377, 378, 0,
	0, 0, 379, 380, 381, 664, 665, 382, 383, 384,
	385, 386, 387, 388, 389, 390, 4053, 391, 666, 0,
	667, 392, 0, 393, 394, 395, 396, 397, 668, 669,
	670, 483, 0, 398, 399, 0, 400, 401, 402, 403,
	404, 0, 0, 0, 0, 405, 406, 407, 0, 0,
	408, 671, 672, 0, 673, 0, 409, 410, 0, 674,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 675, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 478, 466,
	467, 468, 0, 477, 465, 0, 0, 0, 479, 480,
	481, 0, 676, 482, 677, 484, 485, 0, 0, 486,
	0, 0, 0, 488, 489, 490, 0, 0, 491, 492,
	678, 0, 493, 0, 679, 494, 495, 487, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 0, 505, 506,
	680, 507, 508, 509, 681, 510, 511, 512, 682, 513,
	683, 514, 515, 0, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 524, 684, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 536, 0, 537, 538, 539, 540, 535, 541,
	542, 543, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 685, 554, 0, 555, 556, 562,
	563, 564, 557, 558, 565, 566, 567, 568, 569, 725,
	571, 572, 570, 573, 574, 575, 0, 576, 577, 559,
	560, 578, 579, 0, 580, 581, 582, 583, 584, 585,
	586, 686, 0, 587, 0, 588, 589, 590, 591, 593,
	561, 594, 599, 600, 687, 595, 596, 597, 598, 688,
	602, 603, 0, 604, 605, 0, 601, 592, 0, 606,
	607, 608, 609, 610, 611, 612, 613, 0, 614, 689,
	690, 691, 692, 0, 623, 0, 615, 616, 617, 693,
	618, 694, 0, 619, 620, 621, 622, 0, 624, 625,
	0, 0, 626, 627, 628, 630, 631, 629, 632, 0,
	633, 0, 0, 634, 635, 636, 695, 696, 697, 0,
	638, 637, 639, 640, 698, 641, 642, 274, 0, 0,
	0, 643, 644, 699, 645, 646, 647, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 648,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 649, 650, 0, 297, 651, 298, 652,
	0, 653, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 654, 655, 656, 0, 306, 307, 657, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 658, 659,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	354, 0, 355, 356, 357, 0, 358, 359, 660, 360,
	361, 362, 364, 366, 363, 365, 367, 368, 369, 370,
	661, 662, 371, 0, 277, 0, 0, 0, 0, 0,
	372, 373, 374, 663, 0, 0, 0, 375, 0, 376,
	377, 378, 0, 0, 0, 379, 380, 381, 664, 665,
	382, 383, 384, 385, 386, 387, 388, 389, 390, 0,
	391, 666, 0, 667, 392, 0, 393, 394, 395, 396,
	397, 668, 669, 670, 483, 0, 398, 399, 0, 400,
	401, 402, 403, 404, 0, 0, 0, 278, 405, 406,
	407, 0, 0, 408, 671, 672, 0, 673, 0, 409,
	410, 0, 674, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 675, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 478, 466, 467, 468, 0, 477, 465, 0, 279,
	0, 479, 480, 481, 0, 676, 482, 677, 484, 485,
	0, 0, 486, 0, 0, 1267, 488, 489, 490, 0,
	0, 491, 492, 678, 0, 493, 0, 679, 494, 495,
	487, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	0, 505, 506, 680, 507, 508, 509, 681, 510, 511,
	512, 682, 513, 683, 514, 515, 0, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 524, 684, 525, 526,
	528, 527, 529, 0, 530, 0, 531, 532, 533, 0,
	0, 0, 0, 0, 534, 536, 0, 537, 538, 539,
	540, 535, 541, 542, 543, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 685, 554, 0,
	555, 556, 562, 563, 564, 557, 558, 565, 566, 567,
	568, 569, 0, 571, 572, 570, 573, 574, 575, 0,
	576, 577, 559, 560, 578, 579, 0, 580, 581, 582,
	583, 584, 585, 586, 686, 0, 587, 0, 588, 589,
	590, 591, 593, 561, 594, 599, 600, 687, 595, 596,
	597, 598, 688, 602, 603, 0, 604, 605, 0, 601,
	592, 0, 606, 607, 608, 609, 610, 611, 612, 613,
	0, 614, 689, 690, 691, 692, 0, 623, 0, 615,
	616, 617, 693, 618, 694, 0, 619, 620, 621, 622,
	0, 624, 625, 0, 0, 626, 627, 628, 630, 631,
	629, 632, 0, 633, 0, 0, 634, 635, 636, 695,
	696, 697, 0, 638, 637, 639, 640, 698, 641, 642,
	274, 0, 0, 0, 643, 644, 699, 645, 646, 647,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 648, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 649, 650, 0, 297,
	651, 298, 652, 0, 653, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 654, 655, 656, 0, 306,
	307, 657, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 658, 659, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 355, 356, 357, 0, 358,
	359, 660, 360, 361, 362, 364, 366, 363, 365, 367,
	368, 369, 370, 661, 662, 371, 0, 277, 0, 0,
	0, 0, 0, 372, 373, 374, 663, 0, 0, 0,
	375, 0, 376, 377, 378, 0, 0, 0, 379, 380,
	381, 664, 665, 382, 383, 384, 385, 386, 387, 388,
	389, 390, 0, 391, 666, 0, 667, 392, 0, 393,
	394, 395, 396, 397, 668, 669, 670, 483, 0, 398,
	399, 0, 400, 401, 402, 403, 404, 0, 0, 0,
	278, 405, 406, 407, 0, 0, 408, 671, 672, 0,
	673, 0, 409, 410, 0, 674, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 675, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 478, 466, 467, 468, 3568, 477,
	465, 0, 279, 0, 479, 480, 481, 0, 676, 482,
	677, 484, 485, 0, 0, 486, 0, 0, 0, 488,
	489, 490, 0, 0, 491, 492, 678, 0, 493, 0,
	679, 494, 495, 487, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 0, 505, 506, 680, 507, 508, 509,
	681, 510, 511, 512, 682, 513, 683, 514, 515, 0,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 524,
	684, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 536, 0,
	537, 538, 539, 540, 535, 541, 542, 543, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	685, 554, 0, 555, 556, 562, 563, 564, 557, 558,
	565, 566, 567, 568, 569, 0, 571, 572, 570, 573,
	574, 575, 0, 576, 577, 559, 560, 578, 579, 0,
	580, 581, 582, 583, 584, 585, 586, 686, 0, 587,
	0, 588, 589, 590, 591, 593, 561, 594, 599, 600,
	687, 595, 596, 597, 598, 688, 602, 603, 0, 604,
	605, 0, 601, 592, 0, 606, 607, 608, 609, 610,
	611, 612, 613, 0, 614, 689, 690, 691, 692, 0,
	623, 0, 615, 616, 617, 693, 618, 694, 0, 619,
	620, 621, 622, 0, 624, 625, 0, 0, 626, 627,
	628, 630, 631, 629, 632, 0, 633, 0, 0, 634,
	635, 636, 695, 696, 697, 0, 638, 637, 639, 640,
	698, 641, 642, 3110, 0, 274, 0, 643, 644, 699,
	645, 646, 647, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 648, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 649, 650, 0, 297, 651, 298, 652, 0, 653,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	654, 655, 656, 0, 306, 307, 657, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 658, 659, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 357, 0, 358, 359, 660, 360, 361, 362,
	364, 366, 363, 365, 367, 368, 369, 370, 661, 662,
	371, 0, 277, 0, 0, 0, 0, 0, 372, 373,
	374, 663, 0, 0, 0, 375, 0, 376, 377, 378,
	0, 0, 0, 379, 380, 381, 664, 665, 382, 383,
	384, 385, 386, 387, 388, 389, 390, 0, 391, 666,
	0, 667, 392, 0, 393, 394, 395, 396, 397, 3109,
	669, 670, 483, 0, 398, 399, 0, 400, 401, 402,
	403, 404, 0, 0, 0, 278, 405, 406, 407, 0,
	0, 408, 671, 672, 0, 673, 0, 409, 410, 0,
	674, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 675, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 478,
	466, 467, 468, 0, 477, 465, 0, 279, 0, 479,
	480, 481, 0, 676, 482, 677, 484, 485, 0, 0,
	486, 0, 0, 0, 488, 489, 490, 0, 0, 491,
	492, 678, 0, 493, 0, 679, 494, 495, 487, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 0, 505,
	506, 680, 507, 508, 509, 681, 510, 511, 512, 682,
	513, 683, 514, 515, 0, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 524, 684, 525, 526, 528, 527,
	529, 0, 530, 0, 531, 532, 533, 0, 0, 0,
	0, 0, 534, 536, 0, 537, 538, 539, 540, 535,
	541, 542, 543, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 685, 554, 0, 555, 556,
	562, 563, 564, 557, 558, 565, 566, 567, 568, 569,
	0, 571, 572, 570, 573, 574, 575, 0, 576, 577,
	559, 560, 578, 579, 0, 580, 581, 582, 583, 584,
	585, 586, 686, 0, 587, 0, 588, 589, 590, 591,
	593, 561, 594, 599, 600, 687, 595, 596, 597, 598,
	688, 602, 603, 0, 604, 605, 0, 601, 592, 0,
	606, 607, 608, 609, 610, 611, 612, 613, 0, 614,
	689, 690, 691, 692, 0, 623, 0, 615, 616, 617,
	693, 618, 694, 0, 619, 620, 621, 622, 0, 624,
	625, 0, 0, 626, 627, 628, 630, 631, 629, 632,
	0, 633, 0, 0, 634, 635, 636, 695, 696, 697,
	0, 638, 637, 639, 640, 698, 641, 642, 2379, 0,
	274, 0, 643, 644, 699, 645, 646, 647, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 648, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 649, 650, 0, 297,
	651, 298, 652, 0, 653, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 654, 655, 656, 0, 306,
	307, 657, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 658, 659, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 355, 356, 357, 0, 358,
	359, 660, 360, 361, 362, 364, 366, 363, 365, 367,
	368, 369, 370, 661, 662, 371, 0, 277, 0, 0,
	0, 0, 0, 372, 373, 374, 663, 0, 0, 0,
	375, 0, 376, 377, 378, 0, 0, 0, 379, 380,
	381, 664, 665, 382, 383, 384, 385, 386, 387, 388,
	389, 390, 0, 391, 666, 0, 667, 392, 0, 393,
	394, 395, 396, 397, 668, 669, 670, 483, 0, 398,
	399, 0, 400, 401, 402, 403, 404, 0, 0, 0,
	278, 405, 406, 407, 0, 0, 408, 671, 672, 0,
	673, 0, 409, 410, 0, 674, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 675, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 478, 466, 467, 468, 0, 477,
	465, 0, 279, 0, 479, 480, 481, 0, 676, 482,
	677, 484, 485, 0, 0, 486, 0, 0, 0, 488,
	489, 490, 0, 0, 491, 492, 678, 0, 493, 0,
	679, 494, 495, 487, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 0, 505, 506, 680, 507, 508, 509,
	681, 510, 511, 512, 682, 513, 683, 514, 515, 0,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 524,
	684, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 536, 0,
	537, 538, 539, 540, 535, 541, 542, 543, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	685, 554, 0, 555, 556, 562, 563, 564, 557, 558,
	565, 566, 567, 568, 569, 0, 571, 572, 570, 573,
	574, 575, 0, 576, 577, 559, 560, 578, 579, 0,
	580, 581, 582, 583, 584, 585, 586, 686, 0, 587,
	0, 588, 589, 590, 591, 593, 561, 594, 599, 600,
	687, 595, 596, 597, 598, 688, 602, 603, 0, 604,
	605, 0, 601, 592, 0, 606, 607, 608, 609, 610,
	611, 612, 613, 0, 614, 689, 690, 691, 692, 0,
	623, 0, 615, 616, 617, 693, 618, 694, 0, 619,
	620, 621, 622, 0, 624, 625, 0, 0, 626, 627,
	628, 630, 631, 629, 632, 0, 633, 0, 0, 634,
	635, 636, 695, 696, 697, 0, 638, 637, 639, 640,
	698, 641, 642, 274, 0, 0, 0, 643, 644, 699,
	645, 646, 647, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 648, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 649,
	650, 0, 297, 651, 298, 652, 0, 653, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 654, 655,
	656, 0, 306, 307, 657, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 658, 659, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 354, 0, 355, 356,
	357, 0, 358, 359, 660, 360, 361, 362, 364, 366,
	363, 365, 367, 368, 369, 370, 661, 662, 371, 0,
	277, 0, 0, 0, 0, 0, 372, 373, 374, 663,
	0, 0, 0, 375, 0, 376, 377, 378, 0, 0,
	0, 379, 380, 381, 664, 665, 382, 383, 384, 385,
	386, 387, 388, 389, 390, 0, 391, 666, 0, 667,
	392, 0, 393, 394, 395, 396, 397, 668, 669, 670,
	483, 0, 398, 399, 0, 400, 401, 402, 403, 404,
	0, 0, 0, 278, 405, 406, 407, 0, 0, 408,
	671, 672, 0, 673, 0, 409, 410, 0, 674, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	675, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 478, 466, 467,
	468, 0, 477, 465, 0, 279, 0, 479, 480, 481,
	0, 676, 482, 677, 484, 485, 0, 0, 486, 0,
	0, 0, 488, 489, 490, 0, 0, 491, 492, 678,
	0, 493, 0, 679, 494, 495, 487, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 0, 505, 506, 680,
	507, 508, 509, 681, 510, 511, 512, 682, 513, 683,
	514, 515, 0, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 524, 684, 525, 526, 528, 527, 529, 0,
	530, 0, 531, 532, 533, 0, 0, 0, 0, 0,
	534, 536, 0, 537, 538, 539, 540, 535, 541, 542,
	543, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 685, 554, 0, 555, 556, 562, 563,
	564, 557, 558, 565, 566, 567, 568, 569, 0, 571,
	572, 570, 573, 574, 575, 0, 576, 577, 559, 560,
	578, 579, 0, 580, 581, 582, 583, 584, 585, 586,
	686, 0, 587, 0, 588, 589, 590, 591, 593, 561,
	594, 599, 600, 687, 595, 596, 597, 598, 688, 602,
	603, 0, 604, 605, 0, 601, 592, 2317, 606, 607,
	608, 609, 610, 611, 612, 613, 0, 614, 689, 690,
	691, 692, 0, 623, 0, 615, 616, 617, 693, 618,
	694, 0, 619, 620, 621, 622, 0, 624, 625, 0,
	0, 626, 627, 628, 630, 631, 629, 632, 0, 633,
	0, 0, 634, 635, 636, 695, 696, 697, 0, 638,
	637, 639, 640, 698, 641, 642, 2324, 0, 274, 0,
	643, 644, 699, 645, 646, 647, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	648, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 649, 650, 0, 297, 651, 298,
	652, 0, 653, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 654, 655, 656, 0, 306, 307, 657,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 658,
	659, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 355, 356, 357, 0, 358, 359, 660,
	360, 361, 362, 364, 366, 363, 365, 367, 368, 369,
	370, 661, 662, 371, 0, 277, 0, 0, 0, 0,
	0, 372, 373, 374, 663, 0, 0, 0, 375, 0,
	376, 377, 378, 0, 0, 0, 379, 380, 381, 664,
	665, 382, 383, 384, 385, 386, 387, 388, 389, 390,
	0, 391, 666, 0, 667, 392, 0, 393, 394, 395,
	396, 397, 2323, 669, 670, 483, 0, 398, 399, 0,
	400, 401, 402, 403, 404, 0, 0, 0, 278, 405,
	406, 407, 0, 0, 408, 671, 672, 0, 673, 0,
	409, 410, 0, 674, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 675, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 478, 466, 467, 468, 0, 477, 465, 0,
	279, 0, 479, 480, 481, 0, 676, 482, 677, 484,
	485, 0, 0, 486, 0, 0, 0, 488, 489, 490,
	0, 0, 491, 492, 678, 0, 493, 0, 679, 494,
	495, 487, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 0, 505, 506, 680, 507, 508, 509, 681, 510,
	511, 512, 682, 513, 683, 514, 515, 0, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 524, 684, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 536, 0, 537, 538,
	539, 540, 535, 541, 542, 543, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 685, 554,
	0, 555, 556, 562, 563, 564, 557, 558, 565, 566,
	567, 568, 569, 0, 571, 572, 570, 573, 574, 575,
	0, 576, 577, 559, 560, 578, 579, 0, 580, 581,
	582, 583, 584, 585, 586, 686, 0, 587, 0, 588,
	589, 590, 591, 593, 561, 594, 599, 600, 687, 595,
	596, 597, 598, 688, 602, 603, 0, 604, 605, 0,
	601, 592, 0, 606, 607, 608, 609, 610, 611, 612,
	613, 0, 614, 689, 690, 691, 692, 0, 623, 0,
	615, 616, 617, 693, 618, 694, 0, 619, 620, 621,
	622, 0, 624, 625, 0, 0, 626, 627, 628, 630,
	631, 629, 632, 0, 633, 0, 0, 634, 635, 636,
	695, 696, 697, 0, 638, 637, 639, 640, 698, 641,
	642, 2310, 0, 274, 0, 643, 644, 699, 645, 646,
	647, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 648, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 649,
	650, 0, 297, 651, 298, 652, 0, 653, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 654, 655,
	656, 0, 306, 307, 657, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 658, 659, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 354, 0, 355, 356,
	357, 0, 358, 359, 660, 360, 361, 362, 364, 366,
	363, 365, 367, 368, 369, 370, 661, 662, 371, 0,
	277, 0, 0, 0, 0, 0, 372, 373, 374, 663,
	0, 0, 0, 375, 0, 376, 377, 378, 0, 0,
	0, 379, 380, 381, 664, 665, 382, 383, 384, 385,
	386, 387, 388, 389, 390, 0, 391, 666, 0, 667,
	392, 0, 393, 394, 395, 396, 397, 2312, 669, 670,
	483, 0, 398, 399, 0, 400, 401, 402, 403, 404,
	0, 0, 0, 278, 405, 406, 407, 0, 0, 408,
	671, 672, 0, 673, 0, 409, 410, 0, 674, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	675, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 478, 466, 467,
	468, 0, 477, 465, 0, 279, 0, 479, 480, 481,
	0, 676, 482, 677, 484, 485, 0, 0, 486, 0,
	0, 0, 488, 489, 490, 0, 0, 491, 492, 678,
	0, 493, 0, 679, 494, 495, 487, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 0, 505, 506, 680,
	507, 508, 509, 681, 510, 511, 512, 682, 513, 683,
	514, 515, 0, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 524, 684, 525, 526, 528, 527, 529, 0,
	530, 0, 531, 532, 533, 0, 0, 0, 0, 0,
	534, 536, 0, 537, 538, 539, 540, 535, 541, 542,
	543, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 685, 554, 0, 555, 556, 562, 563,
	564, 557, 558, 565, 566, 567, 568, 569, 0, 571,
	572, 570, 573, 574, 575, 0, 576, 577, 559, 560,
	578, 579, 0, 580, 581, 582, 583, 584, 585, 586,
	686, 0, 587, 0, 588, 589, 590, 591, 593, 561,
	594, 599, 600, 687, 595, 596, 597, 598, 688, 602,
	603, 0, 604, 605, 0, 601, 592, 0, 606, 607,
	608, 609, 610, 611, 612, 613, 0, 614, 689, 690,
	691, 692, 0, 623, 0, 615, 616, 617, 693, 618,
	694, 0, 619, 620, 621, 622, 0, 624, 625, 0,
	0, 626, 627, 628, 630, 631, 629, 632, 0, 633,
	0, 0, 634, 635, 636, 695, 696, 697, 0, 638,
	637, 639, 640, 698, 641, 642, 274, 0, 0, 0,
	643, 644, 699, 645, 646, 647, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 648, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 649, 650, 0, 297, 651, 298, 652, 0,
	653, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 654, 655, 656, 0, 306, 307, 657, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 658, 659, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 355, 356, 357, 0, 358, 359, 660, 360, 361,
	362, 364, 366, 363, 365, 367, 368, 369, 370, 661,
	662, 371, 0, 277, 0, 0, 0, 0, 0, 372,
	373, 374, 663, 0, 0, 0, 375, 0, 376, 377,
	378, 0, 0, 0, 379, 380, 381, 664, 665, 382,
	383, 384, 385, 386, 387, 388, 389, 390, 0, 391,
	666, 0, 667, 392, 0, 393, 394, 395, 396, 397,
	2274, 669, 670, 483, 0, 398, 399, 0, 400, 401,
	402, 403, 404, 0, 0, 0, 278, 405, 406, 407,
	0, 0, 408, 671, 672, 0, 673, 0, 409, 410,
	0, 674, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 675, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	478, 466, 467, 468, 0, 477, 465, 0, 279, 0,
	479, 480, 481, 0, 676, 482, 677, 484, 485, 0,
	0, 486, 0, 0, 1267, 488, 489, 490, 0, 0,
	491, 492, 678, 0, 493, 0, 679, 494, 495, 487,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 0,
	505, 506, 680, 507, 508, 509, 681, 510, 511, 512,
	682, 513, 683, 514, 515, 0, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 524, 684, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 536, 0, 537, 538, 539, 540,
	535, 541, 542, 543, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 685, 554, 0, 555,
	556, 562, 563, 564, 557, 558, 565, 566, 567, 568,
	569, 0, 571, 572, 570, 573, 574, 575, 0, 576,
	577, 559, 560, 578, 579, 0, 580, 581, 582, 583,
	584, 585, 586, 686, 0, 587, 0, 588, 589, 590,
	591, 593, 561, 594, 599, 600, 687, 595, 596, 597,
	598, 688, 602, 603, 0, 604, 605, 0, 601, 592,
	0, 606, 607, 608, 609, 610, 611, 612, 613, 0,
	614, 689, 690, 691, 692, 0, 623, 0, 615, 616,
	617, 693, 618, 694, 0, 619, 620, 621, 622, 0,
	624, 625, 0, 0, 626, 627, 628, 630, 631, 629,
	632, 0, 633, 0, 0, 634, 635, 636, 695, 696,
	697, 0, 638, 637, 639, 640, 698, 641, 642, 1623,
	0, 274, 0, 643, 644, 699, 645, 646, 647, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 648, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 649, 650, 0,
	297, 651, 298, 652, 0, 653, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 654, 655, 656, 0,
	306, 307, 657, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 658, 659, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 357, 0,
	358, 359, 660, 360, 361, 362, 364, 366, 363, 365,
	367, 368, 369, 370, 661, 662, 371, 0, 277, 0,
	0, 0, 0, 0, 372, 373, 374, 663, 0, 0,
	0, 375, 0, 376, 377, 378, 0, 0, 0, 379,
	380, 381, 664, 665, 382, 383, 384, 385, 386, 387,
	388, 389, 390, 0, 391, 666, 0, 667, 392, 0,
	393, 394, 395, 396, 397, 1622, 669, 670, 483, 0,
	398, 399, 0, 400, 401, 402, 403, 404, 0, 0,
	0, 278, 405, 406, 407, 0, 0, 408, 671, 672,
	0, 673, 0, 409, 410, 0, 674, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 675, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 478, 466, 467, 468, 0,
	477, 465, 0, 279, 0, 479, 480, 481, 0, 676,
	482, 677, 484, 485, 0, 0, 486, 0, 0, 0,
	488, 489, 490, 0, 0, 491, 492, 678, 0, 493,
	0, 679, 494, 495, 487, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 0, 505, 506, 680, 507, 508,
	509, 681, 510, 511, 512, 682, 513, 683, 514, 515,
	0, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	524, 684, 525, 526, 528, 527, 529, 0, 530, 0,
	531, 532, 533, 0, 0, 0, 0, 0, 534, 536,
	0, 537, 538, 539, 540, 535, 541, 542, 543, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 685, 554, 0, 555, 556, 562, 563, 564, 557,
	558, 565, 566, 567, 568, 569, 0, 571, 572, 570,
	573, 574, 575, 0, 576, 577, 559, 560, 578, 579,
	0, 580, 581, 582, 583, 584, 585, 586, 686, 0,
	587, 0, 588, 589, 590, 591, 593, 561, 594, 599,
	600, 687, 595, 596, 597, 598, 688, 602, 603, 0,
	604, 605, 0, 601, 592, 0, 606, 607, 608, 609,
	610, 611, 612, 613, 0, 614, 689, 690, 691, 692,
	0, 623, 0, 615, 616, 617, 693, 618, 694, 0,
	619, 620, 621, 622, 0, 624, 625, 0, 0, 626,
	627, 628, 630, 631, 629, 632, 0, 633, 0, 0,
	634, 635, 636, 695, 696, 697, 0, 638, 637, 639,
	640, 698, 641, 642, 1525, 0, 274, 0, 643, 644,
	699, 645, 646, 647, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 648, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 649, 650, 0, 297, 651, 298, 652, 0,
	653, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 654, 655, 656, 0, 306, 307, 657, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 658, 659, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 355, 356, 357, 0, 358, 359, 660, 360, 361,
	362, 364, 366, 363, 365, 367, 368, 369, 370, 661,
	662, 371, 0, 277, 0, 0, 0, 0, 0, 372,
	373, 374, 663, 0, 0, 0, 375, 0, 376, 377,
	378, 0, 0, 0, 379, 380, 381, 664, 665, 382,
	383, 384, 385, 386, 387, 388, 389, 390, 0, 391,
	666, 0, 667, 392, 0, 393, 394, 395, 396, 397,
	668, 669, 670, 483, 0, 398, 399, 0, 400, 401,
	402, 403, 404, 0, 0, 0, 278, 405, 406, 407,
	0, 0, 408, 671, 672, 0, 673, 0, 409, 410,
	0, 674, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 675, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	478, 466, 467, 468, 0, 477, 465, 0, 279, 0,
	479, 480, 481, 0, 676, 482, 677, 484, 485, 0,
	0, 486, 0, 0, 0, 488, 489, 490, 0, 0,
	491, 492, 678, 0, 493, 0, 679, 494, 495, 487,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 0,
	505, 506, 680, 507, 508, 509, 681, 510, 511, 512,
	682, 513, 683, 514, 515, 0, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 524, 684, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 536, 0, 537, 538, 539, 540,
	535, 541, 542, 543, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 685, 554, 0, 555,
	556, 562, 563, 564, 557, 558, 565, 566, 567, 568,
	569, 0, 571, 572, 570, 573, 574, 575, 0, 576,
	577, 559, 560, 578, 579, 0, 580, 581, 582, 583,
	584, 585, 586, 686, 0, 587, 0, 588, 589, 590,
	591, 593, 561, 594, 599, 600, 687, 595, 596, 597,
	598, 688, 602, 603, 0, 604, 605, 0, 601, 592,
	0, 606, 607, 608, 609, 610, 611, 612, 613, 0,
	614, 689, 690, 691, 692, 0, 623, 0, 615, 616,
	617, 693, 618, 694, 0, 619, 620, 621, 622, 0,
	624, 625, 0, 0, 626, 627, 628, 630, 631, 629,
	632, 0, 633, 0, 0, 634, 635, 636, 695, 696,
	697, 0, 638, 637, 639, 640, 698, 641, 642, 1518,
	0, 274, 0, 643, 644, 699, 645, 646, 647, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 648, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 649, 650, 0,
	297, 651, 298, 652, 0, 653, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 654, 655, 656, 0,
	306, 307, 657, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 658, 659, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 357, 0,
	358, 359, 660, 360, 361, 362, 364, 366, 363, 365,
	367, 368, 369, 370, 661, 662, 371, 0, 277, 0,
	0, 0, 0, 0, 372, 373, 374, 663, 0, 0,
	0, 375, 0, 376, 377, 378, 0, 0, 0, 379,
	380, 381, 664, 665, 382, 383, 384, 385, 386, 387,
	388, 389, 390, 0, 391, 666, 0, 667, 392, 0,
	393, 394, 395, 396, 397, 1520, 669, 670, 483, 0,
	398, 399, 0, 400, 401, 402, 403, 404, 0, 0,
	0, 278, 405, 406, 407, 0, 0, 408, 671, 672,
	0, 673, 0, 409, 410, 0, 674, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 675, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 478, 466, 467, 468, 0,
	477, 465, 0, 279, 0, 479, 480, 481, 0, 676,
	482, 677, 484, 485, 0, 0, 486, 0, 0, 0,
	488, 489, 490, 0, 0, 491, 492, 678, 0, 493,
	0, 679, 494, 495, 487, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 0, 505, 506, 680, 507, 508,
	509, 681, 510, 511, 512, 682, 513, 683, 514, 515,
	0, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	524, 684, 525, 526, 528, 527, 529, 0, 530, 0,
	531, 532, 533, 0, 0, 0, 0, 0, 534, 536,
	0, 537, 538, 539, 540, 535, 541, 542, 543, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 685, 554, 0, 555, 556, 562, 563, 564, 557,
	558, 565, 566, 567, 568, 569, 0, 571, 572, 570,
	573, 574, 575, 0, 576, 577, 559, 560, 578, 579,
	0, 580, 581, 582, 583, 584, 585, 586, 686, 0,
	587, 0, 588, 589, 590, 591, 593, 561, 594, 599,
	600, 687, 595, 596, 597, 598, 688, 602, 603, 0,
	604, 605, 0, 601, 592, 0, 606, 607, 608, 609,
	610, 611, 612, 613, 0, 614, 689, 690, 691, 692,
	0, 623, 0, 615, 616, 617, 693, 618, 694, 0,
	619, 620, 621, 622, 0, 624, 625, 0, 0, 626,
	627, 628, 630, 631, 629, 632, 0, 633, 0, 0,
	634, 635, 636, 695, 696, 697, 0, 638, 637, 639,
	640, 698, 641, 642, 1344, 0, 274, 0, 643, 644,
	699, 645, 646, 647, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 648, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 649, 650, 0, 297, 651, 298, 652, 0,
	653, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 654, 655, 656, 0, 306, 307, 657, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 658, 659, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 355, 356, 357, 0, 358, 359, 660, 360, 361,
	362, 364, 366, 363, 365, 367, 368, 369, 370, 661,
	662, 371, 0, 277, 0, 0, 0, 0, 0, 372,
	373, 374, 663, 0, 0, 0, 375, 0, 376, 377,
	378, 0, 0, 0, 379, 380, 381, 664, 665, 382,
	383, 384, 385, 386, 387, 388, 389, 390, 0, 391,
	666, 0, 667, 392, 0, 393, 394, 395, 396, 397,
	1343, 669, 670, 483, 0, 398, 399, 0, 400, 401,
	402, 403, 404, 0, 0, 0, 278, 405, 406, 407,
	0, 0, 408, 671, 672, 0, 673, 0, 409, 410,
	0, 674, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 675, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	478, 466, 467, 468, 0, 477, 465, 0, 279, 0,
	479, 480, 481, 0, 676, 482, 677, 484, 485, 0,
	0, 486, 0, 0, 0, 488, 489, 490, 0, 0,
	491, 492, 678, 0, 493, 0, 679, 494, 495, 487,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 0,
	505, 506, 680, 507, 508, 509, 681, 510, 511, 512,
	682, 513, 683, 514, 515, 0, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 524, 684, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 536, 0, 537, 538, 539, 540,
	535, 541, 542, 543, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 685, 554, 0, 555,
	556, 562, 563, 564, 557, 558, 565, 566, 567, 568,
	569, 0, 571, 572, 570, 573, 574, 575, 0, 576,
	577, 559, 560, 578, 579, 0, 580, 581, 582, 583,
	584, 585, 586, 686, 0, 587, 0, 588, 589, 590,
	591, 593, 561, 594, 599, 600, 687, 595, 596, 597,
	598, 688, 602, 603, 0, 604, 605, 0, 601, 592,
	0, 606, 607, 608, 609, 610, 611, 612, 613, 0,
	614, 689, 690, 691, 692, 0, 623, 0, 615, 616,
	617, 693, 618, 694, 0, 619, 620, 621, 622, 0,
	624, 625, 0, 0, 626, 627, 628, 630, 631, 629,
	632, 0, 633, 0, 0, 634, 635, 636, 695, 696,
	697, 0, 638, 637, 639, 640, 698, 641, 642, 1334,
	0, 274, 0, 643, 644, 699, 645, 646, 647, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 648, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 649, 650, 0,
	297, 651, 298, 652, 0, 653, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 654, 655, 656, 0,
	306, 307, 657, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 658, 659, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 357, 0,
	358, 359, 660, 360, 361, 362, 364, 366, 363, 365,
	367, 368, 369, 370, 661, 662, 371, 0, 277, 0,
	0, 0, 0, 0, 372, 373, 374, 663, 0, 0,
	0, 375, 0, 376, 377, 378, 0, 0, 0, 379,
	380, 381, 664, 665, 382, 383, 384, 385, 386, 387,
	388, 389, 390, 0, 391, 666, 0, 667, 392, 0,
	393, 394, 395, 396, 397, 1333, 669, 670, 483, 0,
	398, 399, 0, 400, 401, 402, 403, 404, 0, 0,
	0, 278, 405, 406, 407, 0, 0, 408, 671, 672,
	0, 673, 0, 409, 410, 0, 674, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 675, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 478, 466, 467, 468, 0,
	477, 465, 0, 279, 0, 479, 480, 481, 0, 676,
	482, 677, 484, 485, 0, 0, 486, 0, 0, 0,
	488, 489, 490, 0, 0, 491, 492, 678, 0, 493,
	0, 679, 494, 495, 487, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 0, 505, 506, 680, 507, 508,
	509, 681, 510, 511, 512, 682, 513, 683, 514, 515,
	0, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	524, 684, 525, 526, 528, 527, 529, 0, 530, 0,
	531, 532, 533, 0, 0, 0, 0, 0, 534, 536,
	0, 537, 538, 539, 540, 535, 541, 542, 543, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 685, 554, 0, 555, 556, 562, 563, 564, 557,
	558, 565, 566, 567, 568, 569, 0, 571, 572, 570,
	573, 574, 575, 0, 576, 577, 559, 560, 578, 579,
	0, 580, 581, 582, 583, 584, 585, 586, 686, 0,
	587, 0, 588, 589, 590, 591, 593, 561, 594, 599,
	600, 687, 595, 596, 597, 598, 688, 602, 603, 0,
	604, 605, 0, 601, 592, 0, 606, 607, 608, 609,
	610, 611, 612, 613, 0, 614, 689, 690, 691, 692,
	0, 623, 0, 615, 616, 617, 693, 618, 694, 0,
	619, 620, 621, 622, 0, 624, 625, 0, 0, 626,
	627, 628, 630, 631, 629, 632, 0, 633, 0, 0,
	634, 635, 636, 695, 696, 697, 0, 638, 637, 639,
	640, 698, 641, 642, 1331, 0, 274, 0, 643, 644,
	699, 645, 646, 647, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 648, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 649, 650, 0, 297, 651, 298, 652, 0,
	653, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 654, 655, 656, 0, 306, 307, 657, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 658, 659, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 355, 356, 357, 0, 358, 359, 660, 360, 361,
	362, 364, 366, 363, 365, 367, 368, 369, 370, 661,
	662, 371, 0, 277, 0, 0, 0, 0, 0, 372,
	373, 374, 663, 0, 0, 0, 375, 0, 376, 377,
	378, 0, 0, 0, 379, 380, 381, 664, 665, 382,
	383, 384, 385, 386, 387, 388, 389, 390, 0, 391,
	666, 0, 667, 392, 0, 393, 394, 395, 396, 397,
	1330, 669, 670, 483, 0, 398, 399, 0, 400, 401,
	402, 403, 404, 0, 0, 0, 278, 405, 406, 407,
	0, 0, 408, 671, 672, 0, 673, 0, 409, 410,
	0, 674, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 675, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	478, 466, 467, 468, 0, 477, 465, 0, 279, 0,
	479, 480, 481, 0, 676, 482, 677, 484, 485, 0,
	0, 486, 0, 0, 0, 488, 489, 490, 0, 0,
	491, 492, 678, 0, 493, 0, 679, 494, 495, 487,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 0,
	505, 506, 680, 507, 508, 509, 681, 510, 511, 512,
	682, 513, 683, 514, 515, 0, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 524, 684, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 536, 0, 537, 538, 539, 540,
	535, 541, 542, 543, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 685, 554, 0, 555,
	556, 562, 563, 564, 557, 558, 565, 566, 567, 568,
	569, 0, 571, 572, 570, 573, 574, 575, 0, 576,
	577, 559, 560, 578, 579, 0, 580, 581, 582, 583,
	584, 585, 586, 686, 0, 587, 0, 588, 589, 590,
	591, 593, 561, 594, 599, 600, 687, 595, 596, 597,
	598, 688, 602, 603, 0, 604, 605, 0, 601, 592,
	0, 606, 607, 608, 609, 610, 611, 612, 613, 0,
	614, 689, 690, 691, 692, 0, 623, 0, 615, 616,
	617, 693, 618, 694, 0, 619, 620, 621, 622, 0,
	624, 625, 0, 0, 626, 627, 628, 630, 631, 629,
	632, 0, 633, 0, 0, 634, 635, 636, 695, 696,
	697, 0, 638, 637, 639, 640, 698, 641, 642, 1326,
	0, 274, 0, 643, 644, 699, 645, 646, 647, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 648, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 649, 650, 0,
	297, 651, 298, 652, 0, 653, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 654, 655, 656, 0,
	306, 307, 657, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 658, 659, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 357, 0,
	358, 359, 660, 360, 361, 362, 364, 366, 363, 365,
	367, 368, 369, 370, 661, 662, 371, 0, 277, 0,
	0, 0, 0, 0, 372, 373, 374, 663, 0, 0,
	0, 375, 0, 376, 377, 378, 0, 0, 0, 379,
	380, 381, 664, 665, 382, 383, 384, 385, 386, 387,
	388, 389, 390, 0, 391, 666, 0, 667, 392, 0,
	393, 394, 395, 396, 397, 1325, 669, 670, 483, 0,
	398, 399, 0, 400, 401, 402, 403, 404, 0, 0,
	0, 278, 405, 406, 407, 0, 0, 408, 671, 672,
	0, 673, 0, 409, 410, 0, 674, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 675, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 478, 466, 467, 468, 0,
	477, 465, 0, 279, 0, 479, 480, 481, 0, 676,
	482, 677, 484, 485, 0, 0, 486, 0, 0, 0,
	488, 489, 490, 0, 0, 491, 492, 678, 0, 493,
	0, 679, 494, 495, 487, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 0, 505, 506, 680, 507, 508,
	509, 681, 510, 511, 512, 682, 513, 683, 514, 515,
	0, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	524, 684, 525, 526, 528, 527, 529, 0, 530, 0,
	531, 532, 533, 0, 0, 0, 0, 0, 534, 536,
	0, 537, 538, 539, 540, 535, 541, 542, 543, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 685, 554, 0, 555, 556, 562, 563, 564, 557,
	558, 565, 566, 567, 568, 569, 0, 571, 572, 570,
	573, 574, 575, 0, 576, 577, 559, 560, 578, 579,
	0, 580, 581, 582, 583, 584, 585, 586, 686, 0,
	587, 0, 588, 589, 590, 591, 593, 561, 594, 599,
	600, 687, 595, 596, 597, 598, 688, 602, 603, 0,
	604, 605, 0, 601, 592, 0, 606, 607, 608, 609,
	610, 611, 612, 613, 0, 614, 689, 690, 691, 692,
	0, 623, 0, 615, 616, 617, 693, 618, 694, 0,
	619, 620, 621, 622, 0, 624, 625, 0, 0, 626,
	627, 628, 630, 631, 629, 632, 0, 633, 0, 0,
	634, 635, 636, 695, 696, 697, 0, 638, 637, 639,
	640, 698, 641, 642, 701, 0, 274, 0, 643, 644,
	699, 645, 646, 647, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 648, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 649, 650, 0, 297, 651, 298, 652, 0,
	653, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 654, 655, 656, 0, 306, 307, 657, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 658, 659, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 355, 356, 357, 0, 358, 359, 660, 360, 361,
	362, 364, 366, 363, 365, 367, 368, 369, 370, 661,
	662, 371, 0, 277, 0, 0, 0, 0, 0, 372,
	373, 374, 663, 0, 0, 0, 375, 0, 376, 377,
	378, 0, 0, 0, 379, 380, 381, 664, 665, 382,
	383, 384, 385, 386, 387, 388, 389, 390, 0, 391,
	666, 0, 667, 392, 0, 393, 394, 395, 396, 397,
	668, 669, 670, 483, 0, 398, 399, 0, 400, 401,
	402, 403, 404, 0, 0, 0, 278, 405, 406, 407,
	0, 0, 408, 671, 672, 0, 673, 0, 409, 410,
	0, 674, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 675, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	478, 466, 467, 468, 0, 477, 465, 0, 279, 0,
	479, 480, 481, 0, 676, 482, 677, 484, 485, 0,
	0, 486, 0, 0, 0, 488, 489, 490, 0, 0,
	491, 492, 678, 0, 493, 0, 679, 494, 495, 487,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 0,
	505, 506, 680, 507, 508, 509, 681, 510, 511, 512,
	682, 513, 683, 514, 515, 0, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 524, 684, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 536, 0, 537, 538, 539, 540,
	535, 541, 542, 543, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 685, 554, 0, 555,
	556, 562, 563, 564, 557, 558, 565, 566, 567, 568,
	569, 0, 571, 572, 570, 573, 574, 575, 0, 576,
	577, 559, 560, 578, 579, 0, 580, 581, 582, 583,
	584, 585, 586, 686, 0, 587, 0, 588, 589, 590,
	591, 593, 561, 594, 599, 600, 687, 595, 596, 597,
	598, 688, 602, 603, 0, 604, 605, 0, 601, 592,
	0, 606, 607, 608, 609, 610, 611, 612, 613, 0,
	614, 689, 690, 691, 692, 0, 623, 0, 615, 616,
	617, 693, 618, 694, 0, 619, 620, 621, 622, 0,
	624, 625, 0, 0, 626, 627, 628, 630, 631, 629,
	632, 0, 633, 0, 0, 634, 635, 636, 695, 696,
	697, 0, 638, 637, 639, 640, 698, 641, 642, 265,
	0, 274, 0, 643, 644, 699, 645, 646, 647, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 648, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 649, 650, 0,
	297, 651, 298, 652, 0, 653, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 654, 655, 656, 0,
	306, 307, 657, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 658, 659, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 357, 0,
	358, 359, 660, 360, 361, 362, 364, 366, 363, 365,
	367, 368, 369, 370, 661, 662, 371, 0, 277, 0,
	0, 0, 0, 0, 372, 373, 374, 663, 0, 0,
	0, 375, 0, 376, 377, 378, 0, 0, 0, 379,
	380, 381, 664, 665, 382, 383, 384, 385, 386, 387,
	388, 389, 390, 0, 391, 666, 0, 667, 392, 0,
	393, 394, 395, 396, 397, 668, 669, 670, 483, 0,
	398, 399, 0, 400, 401, 402, 403, 404, 0, 0,
	0, 278, 405, 406, 407, 0, 0, 408, 671, 672,
	0, 673, 0, 409, 410, 0, 674, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 675, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 478, 466, 467, 468, 0,
	477, 465, 0, 279, 0, 479, 480, 481, 0, 676,
	482, 677, 484, 485, 0, 0, 486, 0, 0, 0,
	488, 489, 490, 0, 0, 491, 492, 678, 0, 493,
	0, 679, 494, 495, 487, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 0, 505, 506, 680, 507, 508,
	509, 681, 510, 511, 512, 682, 513, 683, 514, 515,
	0, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	524, 684, 525, 526, 528, 527, 529, 0, 530, 0,
	531, 532, 533, 0, 0, 0, 0, 0, 534, 536,
	0, 537, 538, 539, 540, 535, 541, 542, 543, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 685, 554, 0, 555, 556, 562, 563, 564, 557,
	558, 565, 566, 567, 568, 569, 0, 571, 572, 570,
	573, 574, 575, 0, 576, 577, 559, 560, 578, 579,
	0, 580, 581, 582, 583, 584, 585, 586, 686, 0,
	587, 0, 588, 589, 590, 591, 593, 561, 594, 599,
	600, 687, 595, 596, 597, 598, 688, 602, 603, 0,
	604, 605, 0, 601, 592, 0, 606, 607, 608, 609,
	610, 611, 612, 613, 0, 614, 689, 690, 691, 692,
	0, 623, 0, 615, 616, 617, 693, 618, 694, 0,
	619, 620, 621, 622, 0, 624, 625, 0, 0, 626,
	627, 628, 630, 631, 629, 632, 0, 633, 0, 0,
	634, 635, 636, 695, 696, 697, 0, 638, 637, 639,
	640, 698, 641, 642, 274, 0, 0, 0, 643, 644,
	699, 645, 646, 647, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 648, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	649, 650, 0, 297, 651, 298, 652, 0, 653, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 654,
	655, 656, 0, 306, 307, 657, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 658, 659, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 355,
	356, 357, 0, 358, 359, 660, 360, 361, 362, 364,
	366, 363, 365, 367, 368, 369, 370, 661, 662, 371,
	0, 277, 0, 0, 0, 0, 0, 372, 373, 374,
	663, 0, 0, 0, 375, 0, 376, 377, 378, 0,
	0, 0, 379, 380, 381, 664, 665, 382, 383, 384,
	385, 386, 387, 388, 389, 390, 0, 391, 666, 0,
	667, 392, 0, 393, 394, 395, 396, 397, 668, 669,
	670, 483, 0, 398, 399, 0, 400, 401, 402, 403,
	404, 0, 0, 0, 278, 405, 406, 407, 0, 0,
	408, 671, 672, 0, 673, 0, 409, 410, 0, 674,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 675, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 478, 466,
	467, 468, 0, 477, 465, 0, 279, 0, 479, 480,
	481, 0, 676, 482, 677, 484, 485, 0, 0, 486,
	0, 0, 0, 488, 489, 490, 0, 0, 491, 492,
	678, 0, 493, 0, 679, 494, 495, 487, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 0, 505, 506,
	680, 507, 508, 509, 681, 510, 511, 512, 682, 513,
	683, 514, 515, 0, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 524, 684, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 536, 0, 537, 538, 539, 540, 535, 541,
	542, 543, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 685, 554, 0, 555, 556, 562,
	563, 564, 557, 558, 565, 566, 567, 568, 569, 0,
	571, 572, 570, 573, 574, 575, 0, 576, 577, 559,
	560, 578, 579, 0, 580, 581, 582, 583, 584, 585,
	586, 686, 0, 587, 0, 588, 589, 590, 591, 593,
	561, 594, 599, 600, 687, 595, 596, 597, 598, 688,
	602, 603, 0, 604, 605, 0, 601, 592, 0, 606,
	607, 608, 609, 610, 611, 612, 613, 0, 614, 689,
	690, 691, 692, 0, 623, 0, 615, 616, 617, 693,
	618, 694, 0, 619, 620, 621, 622, 0, 624, 625,
	0, 0, 626, 627, 628, 630, 631, 629, 632, 0,
	633, 0, 0, 634, 635, 636, 695, 696, 697, 0,
	638, 637, 639, 640, 698, 641, 642, 274, 0, 0,
	0, 643, 644, 699, 645, 646, 647, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 648,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 649, 650, 0, 297, 651, 298, 652,
	0, 653, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 654, 655, 656, 0, 306, 307, 657, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 723, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 658, 659,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	354, 0, 355, 356, 357, 0, 358, 359, 660, 360,
	361, 362, 364, 366, 363, 365, 367, 368, 369, 370,
	661, 662, 371, 0, 0, 0, 0, 0, 0, 0,
	372, 373, 374, 663, 0, 0, 0, 375, 0, 376,
	377, 378, 0, 0, 0, 379, 380, 381, 664, 665,
	382, 383, 384, 385, 386, 387, 388, 389, 390, 724,
	391, 666, 0, 667, 392, 0, 393, 394, 395, 396,
	397, 668, 669, 670, 483, 0, 398, 399, 0, 400,
	401, 402, 403, 404, 0, 0, 0, 0, 405, 406,
	407, 0, 0, 408, 671, 672, 0, 673, 0, 409,
	410, 0, 674, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 675, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 478, 466, 467, 468, 0, 477, 465, 0, 0,
	0, 479, 480, 481, 0, 676, 482, 677, 484, 485,
	0, 0, 486, 0, 0, 0, 488, 489, 490, 0,
	0, 491, 492, 678, 0, 493, 0, 679, 494, 495,
	487, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	0, 505, 506, 680, 507, 508, 509, 681, 510, 511,
	512, 682, 513, 683, 514, 515, 0, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 524, 684, 525, 526,
	528, 527, 529, 0, 530, 0, 531, 532, 533, 0,
	0, 0, 0, 0, 534, 536, 0, 537, 538, 539,
	540, 535, 541, 542, 543, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 685, 554, 0,
	555, 556, 562, 563, 564, 557, 558, 565, 566, 567,
	568, 569, 725, 571, 572, 570, 573, 574, 575, 0,
	576, 577, 559, 560, 578, 579, 0, 580, 581, 582,
	583, 584, 585, 586, 686, 0, 587, 0, 588, 589,
	590, 591, 593, 561, 594, 599, 600, 687, 595, 596,
	597, 598, 688, 602, 603, 0, 604, 605, 0, 601,
	592, 0, 606, 607, 608, 609, 610, 611, 612, 613,
	0, 614, 689, 690, 691, 692, 0, 623, 0, 615,
	616, 617, 693, 618, 694, 0, 619, 620, 621, 622,
	0, 624, 625, 0, 0, 626, 627, 628, 630, 631,
	629, 632, 0, 633, 0, 0, 634, 635, 636, 695,
	696, 697, 0, 638, 637, 639, 640, 698, 641, 642,
	274, 0, 0, 0, 643, 644, 699, 645, 646, 647,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 648, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 649, 650, 0, 297,
	651, 298, 652, 0, 653, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 654, 655, 656, 0, 306,
	307, 657, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 2419, 337, 0, 338,
	340, 658, 659, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 355, 356, 357, 0, 358,
	359, 660, 360, 361, 362, 364, 366, 363, 365, 367,
	368, 369, 370, 661, 662, 371, 0, 277, 0, 0,
	0, 0, 0, 372, 373, 374, 663, 0, 0, 0,
	375, 0, 376, 377, 378, 0, 0, 0, 379, 380,
	381, 664, 665, 382, 383, 384, 385, 386, 387, 388,
	389, 390, 0, 391, 666, 0, 667, 392, 0, 393,
	394, 395, 396, 397, 668, 669, 670, 483, 0, 398,
	399, 0, 400, 401, 402, 403, 404, 0, 0, 0,
	278, 405, 406, 407, 0, 0, 408, 671, 672, 0,
	673, 0, 409, 410, 0, 674, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 675, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 478, 466, 467, 468, 0, 477,
	465, 0, 279, 0, 479, 480, 481, 0, 676, 482,
	677, 484, 485, 0, 0, 486, 0, 0, 0, 488,
	489, 490, 0, 0, 491, 492, 678, 0, 493, 0,
	679, 494, 495, 487, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 0, 505, 506, 680, 507, 508, 509,
	681, 510, 511, 512, 682, 513, 683, 514, 515, 0,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 524,
	684, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 536, 0,
	537, 538, 539, 540, 535, 541, 542, 543, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	685, 554, 0, 555, 556, 562, 563, 564, 557, 558,
	565, 566, 567, 568, 569, 0, 571, 572, 570, 573,
	574, 575, 0, 576, 577, 559, 560, 578, 579, 0,
	580, 581, 582, 583, 584, 585, 586, 686, 0, 587,
	0, 588, 589, 590, 591, 593, 561, 594, 599, 600,
	687, 595, 596, 597, 598, 688, 602, 603, 0, 604,
	605, 0, 601, 592, 0, 606, 607, 608, 609, 610,
	611, 612, 613, 0, 614, 689, 690, 691, 692, 0,
	623, 0, 615, 616, 617, 693, 618, 694, 0, 619,
	620, 621, 622, 0, 624, 625, 0, 0, 626, 627,
	628, 630, 631, 629, 632, 0, 633, 0, 0, 634,
	635, 636, 695, 696, 697, 0, 638, 637, 639, 640,
	698, 641, 642, 274, 0, 0, 0, 643, 644, 699,
	645, 646, 647, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 648, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 649,
	650, 0, 297, 651, 298, 652, 0, 653, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 654, 655,
	656, 0, 306, 307, 657, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 2417,
	337, 0, 338, 340, 658, 659, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 354, 0, 355, 356,
	357, 0, 358, 359, 660, 360, 361, 362, 364, 366,
	363, 365, 367, 368, 369, 370, 661, 662, 371, 0,
	277, 0, 0, 0, 0, 0, 372, 373, 374, 663,
	0, 0, 0, 375, 0, 376, 377, 378, 0, 0,
	0, 379, 380, 381, 664, 665, 382, 383, 384, 385,
	386, 387, 388, 389, 390, 0, 391, 666, 0, 667,
	392, 0, 393, 394, 395, 396, 397, 668, 669, 670,
	483, 0, 398, 399, 0, 400, 401, 402, 403, 404,
	0, 0, 0, 278, 405, 406, 407, 0, 0, 408,
	671, 672, 0, 673, 0, 409, 410, 0, 674, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	675, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 478, 466, 467,
	468, 0, 477, 465, 0, 279, 0, 479, 480, 481,
	0, 676, 482, 677, 484, 485, 0, 0, 486, 0,
	0, 0, 488, 489, 490, 0, 0, 491, 492, 678,
	0, 493, 0, 679, 494, 495, 487, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 0, 505, 506, 680,
	507, 508, 509, 681, 510, 511, 512, 682, 513, 683,
	514, 515, 0, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 524, 684, 525, 526, 528, 527, 529, 0,
	530, 0, 531, 532, 533, 0, 0, 0, 0, 0,
	534, 536, 0, 537, 538, 539, 540, 535, 541, 542,
	543, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 685, 554, 0, 555, 556, 562, 563,
	564, 557, 558, 565, 566, 567, 568, 569, 0, 571,
	572, 570, 573, 574, 575, 0, 576, 577, 559, 560,
	578, 579, 0, 580, 581, 582, 583, 584, 585, 586,
	686, 0, 587, 0, 588, 589, 590, 591, 593, 561,
	594, 599, 600, 687, 595, 596, 597, 598, 688, 602,
	603, 0, 604, 605, 0, 601, 592, 0, 606, 607,
	608, 609, 610, 611, 612, 613, 0, 614, 689, 690,
	691, 692, 0, 623, 0, 615, 616, 617, 693, 618,
	694, 0, 619, 620, 621, 622, 0, 624, 625, 0,
	0, 626, 627, 628, 630, 631, 629, 632, 0, 633,
	0, 0, 634, 635, 636, 695, 696, 697, 0, 638,
	637, 639, 640, 698, 641, 642, 274, 0, 0, 0,
	643, 644, 699, 645, 646, 647, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 648, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 649, 650, 0, 297, 651, 298, 652, 0,
	653, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 654, 655, 656, 0, 306, 307, 657, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 2415, 337, 0, 338, 340, 658, 659, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 355, 356, 357, 0, 358, 359, 660, 360, 361,
	362, 364, 366, 363, 365, 367, 368, 369, 370, 661,
	662, 371, 0, 277, 0, 0, 0, 0, 0, 372,
	373, 374, 663, 0, 0, 0, 375, 0, 376, 377,
	378, 0, 0, 0, 379, 380, 381, 664, 665, 382,
	383, 384, 385, 386, 387, 388, 389, 390, 0, 391,
	666, 0, 667, 392, 0, 393, 394, 395, 396, 397,
	668, 669, 670, 483, 0, 398, 399, 0, 400, 401,
	402, 403, 404, 0, 0, 0, 278, 405, 406, 407,
	0, 0, 408, 671, 672, 0, 673, 0, 409, 410,
	0, 674, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 675, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	478, 466, 467, 468, 0, 477, 465, 0, 279, 0,
	479, 480, 481, 0, 676, 482, 677, 484, 485, 0,
	0, 486, 0, 0, 0, 488, 489, 490, 0, 0,
	491, 492, 678, 0, 493, 0, 679, 494, 495, 487,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 0,
	505, 506, 680, 507, 508, 509, 681, 510, 511, 512,
	682, 513, 683, 514, 515, 0, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 524, 684, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 536, 0, 537, 538, 539, 540,
	535, 541, 542, 543, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 685, 554, 0, 555,
	556, 562, 563, 564, 557, 558, 565, 566, 567, 568,
	569, 0, 571, 572, 570, 573, 574, 575, 0, 576,
	577, 559, 560, 578, 579, 0, 580, 581, 582, 583,
	584, 585, 586, 686, 0, 587, 0, 588, 589, 590,
	591, 593, 561, 594, 599, 600, 687, 595, 596, 597,
	598, 688, 602, 603, 0, 604, 605, 0, 601, 592,
	0, 606, 607, 608, 609, 610, 611, 612, 613, 0,
	614, 689, 690, 691, 692, 0, 623, 0, 615, 616,
	617, 693, 618, 694, 0, 619, 620, 621, 622, 0,
	624, 625, 0, 0, 626, 627, 628, 630, 631, 629,
	632, 0, 633, 0, 0, 634, 635, 636, 695, 696,
	697, 0, 638, 637, 639, 640, 698, 641, 642, 274,
	0, 0, 0, 643, 644, 699, 645, 646, 647, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 648, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 649, 650, 0, 297, 651,
	298, 652, 0, 653, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 654, 655, 656, 0, 306, 307,
	657, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	658, 659, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 357, 0, 358, 359,
	660, 360, 361, 362, 364, 366, 363, 365, 367, 368,
	369, 370, 661, 662, 371, 0, 277, 0, 0, 0,
	0, 0, 372, 373, 374, 663, 0, 0, 0, 375,
	0, 376, 377, 378, 0, 0, 0, 379, 380, 381,
	664, 665, 382, 383, 384, 385, 386, 387, 388, 389,
	390, 0, 391, 666, 0, 667, 392, 0, 393, 394,
	395, 396, 397, 2330, 669, 670, 483, 0, 398, 399,
	0, 400, 401, 402, 403, 404, 0, 0, 0, 278,
	405, 406, 407, 0, 0, 408, 671, 672, 0, 673,
	0, 409, 410, 0, 674, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 675, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 478, 466, 467, 468, 0, 477, 465,
	0, 279, 0, 479, 480, 481, 0, 676, 482, 677,
	484, 485, 0, 0, 486, 0, 0, 0, 488, 489,
	490, 0, 0, 491, 492, 678, 0, 493, 0, 679,
	494, 495, 487, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 0, 505, 506, 680, 507, 508, 509, 681,
	510, 511, 512, 682, 513, 683, 514, 515, 0, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 524, 684,
	525, 526, 528, 527, 529, 0, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 536, 0, 537,
	538, 539, 540, 535, 541, 542, 543, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 685,
	554, 0, 555, 556, 562, 563, 564, 557, 558, 565,
	566, 567, 568, 569, 0, 571, 572, 570, 573, 574,
	575, 0, 576, 577, 559, 560, 578, 579, 0, 580,
	581, 582, 583, 584, 585, 586, 686, 0, 587, 0,
	588, 589, 590, 591, 593, 561, 594, 599, 600, 687,
	595, 596, 597, 598, 688, 602, 603, 0, 604, 605,
	0, 601, 592, 0, 606, 607, 608, 609, 610, 611,
	612, 613, 0, 614, 689, 690, 691, 692, 0, 623,
	0, 615, 616, 617, 693, 618, 694, 0, 619, 620,
	621, 622, 0, 624, 625, 0, 0, 626, 627, 628,
	630, 631, 629, 632, 0, 633, 0, 0, 634, 635,
	636, 695, 696, 697, 0, 638, 637, 639, 640, 698,
	641, 642, 274, 0, 0, 0, 643, 644, 699, 645,
	646, 647, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 648, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 649, 650,
	0, 297, 651, 298, 652, 0, 653, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 654, 655, 656,
	0, 306, 307, 657, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 658, 659, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 355, 356, 357,
	0, 358, 359, 660, 360, 361, 362, 364, 366, 363,
	365, 367, 368, 369, 370, 661, 662, 371, 0, 277,
	0, 0, 0, 0, 0, 372, 373, 374, 663, 0,
	0, 0, 375, 0, 376, 377, 378, 0, 0, 0,
	379, 380, 381, 664, 665, 382, 383, 384, 385, 386,
	387, 388, 389, 390, 0, 391, 666, 0, 667, 392,
	0, 393, 394, 395, 396, 397, 2116, 669, 670, 483,
	0, 398, 399, 0, 400, 401, 402, 403, 404, 0,
	0, 0, 278, 405, 406, 407, 0, 0, 408, 671,
	672, 0, 673, 0, 409, 410, 0, 674, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 675,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 478, 466, 467, 468,
	0, 477, 465, 0, 279, 0, 479, 480, 481, 0,
	676, 482, 677, 484, 485, 0, 0, 486, 0, 0,
	0, 488, 489, 490, 0, 0, 491, 492, 678, 0,
	493, 0, 679, 494, 495, 487, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 0, 505, 506, 680, 507,
	508, 509, 681, 510, 511, 512, 682, 513, 683, 514,
	515, 0, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 524, 684, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	536, 0, 537, 538, 539, 540, 535, 541, 542, 543,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 685, 554, 0, 555, 556, 562, 563, 564,
	557, 558, 565, 566, 567, 568, 569, 0, 571, 572,
	570, 573, 574, 575, 0, 576, 577, 559, 560, 578,
	579, 0, 580, 581, 582, 583, 584, 585, 586, 686,
	0, 587, 0, 588, 589, 590, 591, 593, 561, 594,
	599, 600, 687, 595, 596, 597, 598, 688, 602, 603,
	0, 604, 605, 0, 601, 592, 0, 606, 607, 608,
	609, 610, 611, 612, 613, 0, 614, 689, 690, 691,
	692, 0, 623, 0, 615, 616, 617, 693, 618, 694,
	0, 619, 620, 621, 622, 0, 624, 625, 0, 0,
	626, 627, 628, 630, 631, 629, 632, 0, 633, 0,
	0, 634, 635, 636, 695, 696, 697, 0, 638, 637,
	639, 640, 698, 641, 642, 274, 0, 0, 0, 643,
	644, 699, 645, 646, 647, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 648, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 649, 650, 0, 297, 651, 298, 652, 0, 653,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	654, 655, 656, 0, 306, 307, 657, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 658, 659, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 357, 0, 358, 359, 660, 360, 361, 362,
	364, 366, 363, 365, 367, 368, 369, 370, 661, 662,
	371, 0, 277, 0, 0, 0, 0, 0, 372, 373,
	374, 663, 0, 0, 0, 375, 0, 376, 377, 378,
	0, 0, 0, 379, 380, 381, 664, 665, 382, 383,
	384, 385, 386, 387, 388, 389, 390, 0, 391, 666,
	0, 667, 392, 0, 393, 394, 395, 396, 397, 2110,
	669, 670, 483, 0, 398, 399, 0, 400, 401, 402,
	403, 404, 0, 0, 0, 278, 405, 406, 407, 0,
	0, 408, 671, 672, 0, 673, 0, 409, 410, 0,
	674, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 675, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 478,
	466, 467, 468, 0, 477, 465, 0, 279, 0, 479,
	480, 481, 0, 676, 482, 677, 484, 485, 0, 0,
	486, 0, 0, 0, 488, 489, 490, 0, 0, 491,
	492, 678, 0, 493, 0, 679, 494, 495, 487, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 0, 505,
	506, 680, 507, 508, 509, 681, 510, 511, 512, 682,
	513, 683, 514, 515, 0, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 524, 684, 525, 526, 528, 527,
	529, 0, 530, 0, 531, 532, 533, 0, 0, 0,
	0, 0, 534, 536, 0, 537, 538, 539, 540, 535,
	541, 542, 543, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 685, 554, 0, 555, 556,
	562, 563, 564, 557, 558, 565, 566, 567, 568, 569,
	0, 571, 572, 570, 573, 574, 575, 0, 576, 577,
	559, 560, 578, 579, 0, 580, 581, 582, 583, 584,
	585, 586, 686, 0, 587, 0, 588, 589, 590, 591,
	593, 561, 594, 599, 600, 687, 595, 596, 597, 598,
	688, 602, 603, 0, 604, 605, 0, 601, 592, 0,
	606, 607, 608, 609, 610, 611, 612, 613, 0, 614,
	689, 690, 691, 692, 0, 623, 0, 615, 616, 617,
	693, 618, 694, 0, 619, 620, 621, 622, 0, 624,
	625, 0, 0, 626, 627, 628, 630, 631, 629, 632,
	0, 633, 0, 0, 634, 635, 636, 695, 696, 697,
	0, 638, 637, 639, 640, 698, 641, 642, 911, 0,
	274, 0, 643, 644, 699, 645, 646, 647, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 648, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 649, 650, 0, 297,
	651, 298, 652, 0, 653, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 654, 655, 656, 0, 306,
	307, 657, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 658, 659, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 355, 356, 357, 0, 358,
	359, 660, 360, 361, 362, 364, 366, 363, 365, 367,
	368, 369, 370, 661, 662, 371, 0, 0, 0, 0,
	0, 0, 0, 372, 373, 374, 663, 0, 0, 0,
	375, 0, 376, 377, 378, 0, 0, 0, 379, 380,
	381, 664, 665, 382, 383, 384, 385, 386, 387, 388,
	389, 390, 0, 391, 666, 0, 667, 392, 0, 393,
	394, 395, 396, 397, 668, 669, 670, 483, 0, 398,
	399, 0, 400, 401, 402, 403, 404, 0, 0, 0,
	0, 405, 406, 407, 0, 0, 408, 671, 672, 0,
	673, 910, 409, 410, 0, 674, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 675, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 478, 466, 467, 468, 0, 477,
	465, 0, 0, 0, 479, 480, 481, 0, 676, 482,
	677, 484, 485, 0, 0, 486, 0, 0, 0, 488,
	489, 490, 0, 0, 491, 492, 678, 0, 493, 0,
	679, 494, 495, 487, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 0, 505, 506, 680, 507, 508, 509,
	681, 510, 511, 512, 682, 513, 683, 514, 515, 0,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 524,
	684, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 536, 0,
	537, 538, 539, 540, 535, 541, 542, 543, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	685, 554, 0, 555, 556, 562, 563, 564, 557, 558,
	565, 566, 567, 568, 569, 0, 571, 572, 570, 573,
	574, 575, 0, 576, 577, 559, 560, 578, 579, 0,
	580, 581, 582, 583, 584, 585, 586, 686, 0, 587,
	0, 588, 589, 590, 591, 593, 561, 594, 599, 600,
	687, 595, 596, 597, 598, 688, 602, 603, 0, 604,
	605, 0, 601, 592, 909, 606, 607, 608, 609, 610,
	611, 612, 613, 0, 614, 689, 690, 691, 692, 0,
	623, 0, 615, 616, 617, 693, 618, 694, 0, 619,
	620, 621, 622, 0, 624, 625, 0, 0, 626, 627,
	628, 630, 631, 629, 632, 0, 633, 0, 0, 634,
	635, 636, 695, 696, 697, 0, 638, 637, 639, 640,
	698, 641, 642, 274, 0, 0, 0, 643, 644, 699,
	645, 646, 647, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 648, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 649,
	650, 0, 297, 651, 298, 652, 0, 653, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 654, 655,
	656, 0, 306, 307, 657, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 658, 659, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 354, 0, 355, 356,
	357, 0, 358, 359, 660, 360, 361, 362, 364, 366,
	363, 365, 367, 368, 369, 370, 661, 662, 371, 0,
	3664, 0, 0, 0, 0, 0, 372, 373, 374, 663,
	0, 0, 0, 375, 0, 376, 377, 378, 0, 0,
	0, 379, 380, 381, 664, 665, 382, 383, 384, 385,
	386, 387, 388, 389, 390, 0, 391, 666, 0, 667,
	392, 0, 393, 394, 395, 396, 397, 668, 669, 670,
	483, 0, 398, 399, 0, 400, 401, 402, 403, 404,
	0, 0, 0, 0, 405, 406, 407, 0, 0, 408,
	671, 672, 0, 673, 0, 409, 410, 0, 674, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	675, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 478, 466, 467,
	468, 0, 477, 465, 0, 0, 0, 479, 480, 481,
	0, 676, 482, 677, 484, 485, 0, 0, 486, 0,
	0, 0, 488, 489, 490, 0, 0, 491, 492, 678,
	0, 493, 0, 679, 494, 495, 487, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 0, 505, 506, 680,
	507, 508, 509, 681, 510, 511, 512, 682, 513, 683,
	514, 515, 4369, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 524, 684, 525, 526, 528, 527, 529, 0,
	530, 0, 531, 532, 533, 0, 0, 0, 0, 0,
	534, 536, 0, 537, 538, 539, 540, 535, 541, 542,
	543, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 685, 554, 0, 555, 556, 562, 563,
	564, 557, 558, 565, 566, 567, 568, 569, 0, 571,
	572, 570, 573, 574, 575, 0, 576, 577, 559, 560,
	578, 579, 0, 580, 581, 582, 583, 584, 585, 586,
	686, 0, 587, 0, 588, 589, 590, 591, 593, 561,
	594, 599, 600, 687, 595, 596, 597, 598, 688, 602,
	603, 0, 604, 605, 0, 601, 592, 0, 606, 607,
	608, 609, 610, 611, 612, 613, 0, 614, 689, 690,
	691, 692, 0, 623, 0, 615, 616, 617, 693, 618,
	694, 0, 619, 620, 621, 622, 0, 624, 625, 0,
	0, 626, 627, 628, 630, 631, 629, 632, 0, 633,
	0, 0, 634, 635, 636, 695, 696, 697, 0, 638,
	637, 639, 640, 698, 641, 642, 1372, 0, 274, 0,
	643, 644, 699, 645, 646, 647, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	648, 0, 0, 0, 0, 289, 290, 1375, 291, 292,
	293, 294, 295, 296, 649, 650, 0, 297, 651, 298,
	652, 0, 653, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 654, 655, 1373, 0, 306, 307, 657,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 658,
	659, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 355, 356, 357, 0, 358, 359, 660,
	360, 361, 362, 364, 366, 363, 365, 367, 368, 369,
	370, 661, 662, 371, 0, 0, 0, 0, 0, 0,
	0, 372, 373, 374, 663, 0, 0, 0, 375, 0,
	376, 377, 378, 0, 0, 0, 379, 380, 381, 664,
	665, 382, 383, 384, 385, 386, 387, 388, 389, 390,
	0, 391, 666, 0, 667, 392, 0, 393, 394, 395,
	396, 397, 668, 669, 670, 483, 0, 398, 399, 0,
	400, 401, 402, 403, 404, 0, 0, 0, 0, 405,
	406, 407, 0, 0, 408, 671, 672, 0, 673, 0,
	409, 410, 0, 674, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 675, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 792, 0,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 478, 466, 467, 468, 0, 477, 465, 0,
	0, 0, 479, 480, 481, 0, 676, 482, 677, 484,
	485, 0, 0, 486, 0, 0, 0, 488, 489, 490,
	0, 0, 491, 492, 678, 0, 493, 0, 679, 494,
	495, 487, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 0, 505, 506, 680, 507, 508, 509, 681, 510,
	511, 512, 682, 513, 683, 514, 515, 0, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 524, 684, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 536, 0, 537, 538,
	539, 540, 535, 541, 542, 543, 544, 545, 0, 546,
	547, 548, 0, 791, 550, 551, 552, 553, 685, 554,
	0, 555, 556, 562, 563, 564, 557, 558, 790, 566,
	567, 568, 569, 0, 571, 572, 570, 573, 1376, 575,
	0, 576, 577, 559, 560, 578, 579, 0, 580, 581,
	582, 583, 584, 585, 586, 686, 0, 587, 0, 588,
	589, 590, 591, 593, 561, 594, 599, 600, 687, 595,
	596, 597, 598, 688, 602, 603, 0, 604, 605, 0,
	601, 592, 0, 606, 607, 608, 609, 610, 611, 612,
	613, 0, 614, 788, 690, 691, 692, 0, 623, 0,
	615, 616, 617, 693, 618, 694, 0, 619, 620, 621,
	622, 0, 624, 625, 0, 0, 626, 627, 628, 630,
	631, 629, 632, 0, 633, 0, 0, 634, 635, 636,
	695, 696, 697, 0, 638, 637, 639, 640, 698, 641,
	642, 1372, 0, 274, 0, 643, 644, 699, 645, 646,
	647, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 648, 0, 0, 0, 0,
	289, 290, 1375, 291, 292, 293, 294, 295, 296, 649,
	650, 0, 297, 651, 298, 652, 0, 653, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 654, 655,
	1373, 0, 306, 307, 657, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 658, 659, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 354, 0, 355, 356,
	357, 0, 358, 359, 660, 360, 361, 362, 364, 366,
	363, 365, 367, 368, 369, 370, 661, 662, 371, 0,
	0, 0, 0, 0, 0, 0, 372, 373, 374, 663,
	0, 0, 0, 375, 0, 376, 377, 378, 0, 0,
	0, 379, 380, 381, 664, 665, 382, 383, 384, 385,
	386, 387, 388, 389, 390, 0, 391, 666, 0, 667,
	392, 0, 393, 394, 395, 396, 397, 668, 669, 670,
	483, 0, 398, 399, 0, 400, 401, 402, 403, 404,
	0, 0, 0, 0, 405, 406, 407, 0, 0, 408,
	671, 672, 0, 673, 0, 409, 410, 0, 674, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	675, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 792, 0, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 478, 466, 467,
	468, 0, 477, 465, 0, 0, 0, 479, 480, 481,
	0, 676, 482, 677, 484, 485, 0, 0, 486, 0,
	0, 0, 488, 489, 490, 0, 0, 491, 492, 678,
	0, 493, 0, 679, 494, 495, 487, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 0, 505, 506, 680,
	507, 508, 509, 681, 510, 511, 512, 682, 513, 683,
	514, 515, 0, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 524, 684, 525, 526, 528, 527, 529, 0,
	530, 0, 531, 532, 533, 0, 0, 0, 0, 0,
	534, 536, 0, 537, 538, 539, 540, 535, 541, 542,
	543, 544, 545, 0, 546, 547, 548, 0, 791, 550,
	551, 552, 553, 685, 554, 0, 555, 556, 562, 563,
	564, 557, 558, 790, 566, 567, 568, 569, 0, 571,
	572, 570, 573, 1376, 575, 0, 576, 577, 559, 560,
	578, 579, 0, 580, 581, 582, 583, 584, 585, 586,
	686, 0, 587, 0, 588, 589, 590, 591, 593, 561,
	594, 599, 600, 687, 595, 596, 597, 598, 688, 602,
	603, 0, 604, 605, 0, 601, 592, 0, 606, 607,
	608, 609, 610, 611, 612, 613, 0, 614, 788, 690,
	691, 692, 0, 623, 0, 615, 1374, 617, 693, 618,
	694, 0, 619, 620, 621, 622, 0, 624, 625, 0,
	0, 626, 627, 628, 630, 631, 629, 632, 0, 633,
	0, 0, 634, 635, 636, 695, 696, 697, 0, 638,
	637, 639, 640, 698, 641, 642, 710, 0, 274, 0,
	643, 644, 699, 645, 646, 647, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 709, 287, 288, 0, 0, 0, 0, 0,
	648, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 649, 650, 0, 297, 651, 298,
	652, 0, 653, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 654, 655, 656, 0, 306, 307, 657,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 658,
	659, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 355, 356, 357, 0, 358, 359, 660,
	360, 361, 362, 364, 366, 363, 365, 367, 368, 369,
	370, 661, 662, 371, 0, 0, 0, 0, 0, 0,
	0, 372, 373, 374, 663, 0, 0, 0, 375, 0,
	376, 377, 378, 0, 0, 0, 379, 380, 381, 664,
	665, 382, 383, 384, 385, 386, 387, 388, 389, 390,
	0, 391, 666, 0, 667, 392, 0, 393, 394, 395,
	396, 397, 668, 669, 670, 483, 0, 398, 399, 0,
	400, 401, 402, 403, 404, 0, 0, 0, 0, 405,
	406, 407, 0, 0, 408, 671, 672, 0, 673, 0,
	409, 410, 0, 674, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 675, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 478, 466, 467, 468, 0, 477, 465, 0,
	0, 0, 479, 480, 481, 0, 676, 482, 677, 484,
	485, 0, 0, 486, 0, 0, 0, 488, 489, 490,
	0, 0, 491, 492, 678, 0, 493, 0, 679, 494,
	495, 487, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 0, 505, 506, 680, 507, 508, 509, 681, 510,
	511, 512, 682, 513, 683, 708, 515, 0, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 524, 684, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 536, 0, 537, 538,
	539, 540, 535, 541, 542, 543, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 685, 554,
	0, 555, 556, 562, 563, 564, 557, 558, 565, 566,
	567, 568, 569, 0, 571, 572, 570, 573, 574, 575,
	0, 576, 577, 559, 560, 578, 579, 0, 580, 581,
	582, 583, 584, 585, 586, 686, 0, 587, 0, 588,
	589, 590, 591, 593, 561, 594, 599, 600, 687, 595,
	596, 597, 598, 688, 602, 603, 0, 604, 605, 0,
	601, 592, 0, 606, 607, 608, 609, 610, 611, 612,
	613, 0, 614, 689, 690, 691, 692, 0, 623, 0,
	615, 616, 617, 693, 618, 694, 0, 619, 620, 621,
	622, 0, 624, 625, 0, 0, 626, 627, 628, 630,
	631, 629, 632, 0, 633, 0, 0, 634, 635, 636,
	695, 696, 697, 0, 638, 637, 639, 640, 698, 641,
	642, 274, 3152, 0, 0, 643, 644, 699, 645, 646,
	647, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 648, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 649, 650, 0,
	297, 651, 298, 652, 0, 653, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 654, 655, 656, 0,
	306, 307, 657, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 658, 659, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 357, 0,
	358, 359, 660, 360, 361, 362, 364, 366, 363, 365,
	367, 368, 369, 370, 661, 662, 371, 0, 0, 0,
	0, 0, 0, 0, 372, 373, 374, 663, 0, 0,
	0, 375, 0, 376, 377, 378, 0, 0, 0, 379,
	380, 381, 664, 665, 382, 383, 384, 385, 386, 387,
	388, 389, 390, 0, 391, 666, 0, 667, 392, 0,
	393, 394, 395, 396, 397, 668, 669, 670, 483, 0,
	398, 399, 0, 400, 401, 402, 403, 404, 0, 0,
	0, 0, 405, 406, 407, 0, 0, 408, 671, 672,
	0, 673, 0, 409, 410, 0, 674, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 675, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 478, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 479, 480, 481, 0, 676,
	482, 677, 484, 485, 0, 0, 486, 0, 0, 0,
	488, 489, 490, 0, 0, 491, 492, 678, 0, 493,
	0, 679, 494, 495, 487, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 0, 505, 506, 680, 507, 508,
	509, 681, 510, 511, 512, 682, 513, 683, 514, 515,
	0, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	524, 684, 525, 526, 528, 527, 529, 0, 530, 0,
	531, 532, 533, 0, 0, 0, 0, 0, 534, 536,
	0, 537, 538, 539, 540, 535, 541, 542, 543, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 685, 554, 0, 555, 556, 562, 563, 564, 557,
	558, 565, 566, 567, 568, 569, 0, 571, 572, 570,
	573, 574, 575, 0, 576, 577, 559, 560, 578, 579,
	0, 580, 581, 582, 583, 584, 585, 586, 686, 0,
	587, 0, 588, 589, 590, 591, 593, 561, 594, 599,
	600, 687, 595, 596, 597, 598, 688, 602, 603, 0,
	604, 605, 0, 601, 592, 0, 606, 607, 608, 609,
	610, 611, 612, 613, 0, 614, 689, 690, 691, 692,
	0, 623, 0, 615, 616, 617, 693, 618, 694, 0,
	619, 620, 621, 622, 0, 624, 625, 0, 0, 626,
	627, 628, 630, 631, 629, 632, 0, 633, 0, 0,
	634, 635, 636, 695, 696, 697, 0, 638, 637, 639,
	640, 698, 641, 642, 274, 0, 0, 0, 643, 644,
	699, 645, 646, 647, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 648, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	649, 650, 0, 297, 651, 298, 652, 0, 653, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 654,
	655, 656, 0, 306, 307, 657, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 658, 659, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 355,
	356, 357, 0, 358, 359, 660, 360, 361, 362, 364,
	366, 363, 365, 367, 368, 369, 370, 661, 662, 371,
	0, 0, 0, 0, 0, 0, 0, 372, 373, 374,
	663, 0, 0, 0, 375, 0, 376, 377, 378, 0,
	0, 0, 379, 380, 381, 664, 665, 382, 383, 384,
	385, 386, 387, 388, 389, 390, 0, 391, 666, 0,
	667, 392, 0, 393, 394, 395, 396, 397, 668, 669,
	670, 483, 0, 398, 399, 0, 400, 401, 402, 403,
	404, 0, 0, 0, 0, 405, 406, 407, 0, 0,
	408, 671, 672, 0, 673, 0, 409, 410, 0, 674,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 675, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 478, 466,
	467, 468, 0, 477, 465, 0, 0, 0, 479, 480,
	481, 0, 676, 482, 677, 484, 485, 0, 0, 486,
	0, 0, 0, 488, 489, 490, 0, 0, 491, 492,
	678, 0, 493, 0, 679, 494, 495, 487, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 0, 505, 506,
	680, 507, 508, 509, 681, 510, 511, 512, 682, 513,
	683, 514, 515, 4662, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 524, 684, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 536, 0, 537, 538, 539, 540, 535, 541,
	542, 543, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 685, 554, 0, 555, 556, 562,
	563, 564, 557, 558, 565, 566, 567, 568, 569, 0,
	571, 572, 570, 573, 574, 575, 0, 576, 577, 559,
	560, 578, 579, 0, 580, 581, 582, 583, 584, 585,
	586, 686, 0, 587, 0, 588, 589, 590, 591, 593,
	561, 594, 599, 600, 687, 595, 596, 597, 598, 688,
	602, 603, 0, 604, 605, 0, 601, 592, 0, 606,
	607, 608, 609, 610, 611, 612, 613, 0, 614, 689,
	690, 691, 692, 0, 623, 0, 615, 616, 617, 693,
	618, 694, 0, 619, 620, 621, 622, 0, 624, 625,
	0, 0, 626, 627, 628, 630, 631, 629, 632, 0,
	633, 0, 0, 634, 635, 636, 695, 696, 697, 0,
	638, 637, 639, 640, 698, 641, 642, 274, 3509, 0,
	0, 643, 644, 699, 645, 646, 647, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 648,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 649, 650, 0, 297, 651, 298, 652,
	0, 653, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 654, 655, 656, 0, 306, 307, 657, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 658, 659,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	354, 0, 355, 356, 357, 0, 358, 359, 660, 360,
	361, 362, 364, 366, 363, 365, 367, 368, 369, 370,
	661, 662, 371, 0, 0, 0, 0, 0, 0, 0,
	372, 373, 374, 663, 0, 0, 0, 375, 0, 376,
	377, 378, 0, 0, 0, 379, 380, 381, 664, 665,
	382, 383, 384, 385, 386, 387, 388, 389, 390, 0,
	391, 666, 0, 667, 392, 0, 393, 394, 395, 396,
	397, 668, 669, 670, 483, 0, 398, 399, 0, 400,
	401, 402, 403, 404, 0, 0, 0, 0, 405, 406,
	407, 0, 0, 408, 671, 672, 0, 673, 0, 409,
	410, 0, 674, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 675, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 478, 466, 467, 468, 0, 477, 465, 0, 0,
	0, 479, 480, 481, 0, 676, 482, 677, 484, 485,
	0, 0, 486, 0, 0, 0, 488, 489, 490, 0,
	0, 491, 492, 678, 0, 493, 0, 679, 494, 495,
	487, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	0, 505, 506, 680, 507, 508, 509, 681, 510, 511,
	512, 682, 513, 683, 514, 515, 0, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 524, 684, 525, 526,
	528, 527, 529, 0, 530, 0, 531, 532, 533, 0,
	0, 0, 0, 0, 534, 536, 0, 537, 538, 539,
	540, 535, 541, 542, 543, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 685, 554, 0,
	555, 556, 562, 563, 564, 557, 558, 565, 566, 567,
	568, 569, 0, 571, 572, 570, 573, 574, 575, 0,
	576, 577, 559, 560, 578, 579, 0, 580, 581, 582,
	583, 584, 585, 586, 686, 0, 587, 0, 588, 589,
	590, 591, 593, 561, 594, 599, 600, 687, 595, 596,
	597, 598, 688, 602, 603, 0, 604, 605, 0, 601,
	592, 0, 606, 607, 608, 609, 610, 611, 612, 613,
	0, 614, 689, 690, 691, 692, 0, 623, 0, 615,
	616, 617, 693, 618, 694, 0, 619, 620, 621, 622,
	0, 624, 625, 0, 0, 626, 627, 628, 630, 631,
	629, 632, 0, 633, 0, 0, 634, 635, 636, 695,
	696, 697, 0, 638, 637, 639, 640, 698, 641, 642,
	274, 0, 0, 0, 643, 644, 699, 645, 646, 647,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 648, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 649, 650, 0, 297,
	651, 298, 652, 0, 653, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 654, 655, 656, 0, 306,
	307, 657, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 658, 659, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 355, 356, 357, 0, 358,
	359, 660, 360, 361, 362, 364, 366, 363, 365, 367,
	368, 369, 370, 661, 662, 371, 0, 0, 0, 0,
	0, 0, 0, 372, 373, 374, 663, 0, 0, 0,
	375, 0, 376, 377, 378, 0, 0, 0, 379, 380,
	381, 664, 665, 382, 383, 384, 385, 386, 387, 388,
	389, 390, 0, 391, 666, 0, 667, 392, 0, 393,
	394, 395, 396, 397, 668, 669, 670, 483, 0, 398,
	399, 0, 400, 401, 402, 403, 404, 0, 0, 0,
	0, 405, 406, 407, 0, 0, 408, 671, 672, 0,
	673, 0, 409, 410, 0, 674, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 675, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 478, 466, 467, 468, 0, 477,
	465, 0, 0, 0, 479, 480, 481, 0, 676, 482,
	677, 484, 485, 0, 0, 486, 0, 0, 0, 488,
	489, 490, 0, 0, 491, 492, 678, 0, 493, 0,
	679, 494, 495, 487, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 0, 505, 506, 680, 507, 508, 509,
	681, 510, 511, 512, 682, 513, 683, 514, 515, 4259,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 524,
	684, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 536, 0,
	537, 538, 539, 540, 535, 541, 542, 543, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	685, 554, 0, 555, 556, 562, 563, 564, 557, 558,
	565, 566, 567, 568, 569, 0, 571, 572, 570, 573,
	574, 575, 0, 576, 577, 559, 560, 578, 579, 0,
	580, 581, 582, 583, 584, 585, 586, 686, 0, 587,
	0, 588, 589, 590, 591, 593, 561, 594, 599, 600,
	687, 595, 596, 597, 598, 688, 602, 603, 0, 604,
	605, 0, 601, 592, 0, 606, 607, 608, 609, 610,
	611, 612, 613, 0, 614, 689, 690, 691, 692, 0,
	623, 0, 615, 616, 617, 693, 618, 694, 0, 619,
	620, 621, 622, 0, 624, 625, 0, 0, 626, 627,
	628, 630, 631, 629, 632, 0, 633, 0, 0, 634,
	635, 636, 695, 696, 697, 0, 638, 637, 639, 640,
	698, 641, 642, 274, 0, 0, 0, 643, 644, 699,
	645, 646, 647, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 648, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 649,
	650, 0, 297, 651, 298, 652, 0, 653, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 654, 655,
	656, 0, 306, 307, 657, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 658, 659, 4004, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 354, 0, 355, 356,
	357, 0, 358, 359, 660, 360, 361, 362, 364, 366,
	363, 365, 367, 368, 369, 370, 661, 662, 371, 0,
	0, 0, 0, 0, 0, 0, 372, 373, 374, 663,
	0, 0, 0, 375, 0, 376, 377, 378, 0, 0,
	0, 379, 380, 381, 664, 665, 382, 383, 384, 385,
	386, 387, 388, 389, 390, 0, 391, 666, 0, 667,
	392, 0, 393, 394, 395, 396, 397, 668, 669, 670,
	483, 0, 398, 399, 0, 400, 401, 402, 403, 404,
	0, 0, 0, 0, 405, 406, 407, 0, 0, 408,
	671, 672, 0, 673, 0, 409, 410, 0, 674, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	675, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 478, 466, 467,
	468, 0, 477, 465, 0, 0, 0, 479, 480, 481,
	0, 676, 482, 677, 484, 485, 0, 0, 486, 0,
	0, 0, 488, 489, 490, 0, 0, 491, 492, 678,
	0, 493, 0, 679, 494, 495, 487, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 0, 505, 506, 680,
	507, 508, 509, 681, 510, 511, 512, 682, 513, 683,
	514, 515, 0, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 524, 684, 525, 526, 528, 527, 529, 0,
	530, 0, 531, 532, 533, 0, 0, 0, 0, 0,
	534, 536, 0, 537, 538, 539, 540, 535, 541, 542,
	543, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 685, 554, 0, 555, 556, 562, 563,
	564, 557, 558, 565, 566, 567, 568, 569, 0, 571,
	572, 570, 573, 574, 575, 0, 576, 577, 559, 560,
	578, 579, 0, 580, 581, 582, 583, 584, 585, 586,
	686, 0, 587, 0, 588, 589, 590, 591, 593, 561,
	594, 599, 600, 687, 595, 596, 597, 598, 688, 602,
	603, 0, 604, 605, 0, 601, 592, 0, 606, 607,
	608, 609, 610, 611, 612, 613, 0, 614, 689, 690,
	691, 692, 0, 623, 0, 615, 616, 617, 693, 618,
	694, 0, 619, 620, 621, 622, 0, 624, 625, 0,
	0, 626, 627, 628, 630, 631, 629, 632, 0, 633,
	0, 0, 634, 635, 636, 695, 696, 697, 0, 638,
	637, 639, 640, 698, 641, 642, 274, 0, 0, 0,
	643, 644, 699, 645, 646, 647, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 648, 0,
	2816, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 649, 650, 0, 297, 651, 298, 652, 0,
	653, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 654, 655, 656, 0, 306, 307, 657, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 658, 659, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 355, 356, 357, 0, 358, 359, 660, 360, 361,
	362, 364, 366, 363, 365, 367, 368, 369, 370, 661,
	662, 371, 0, 0, 0, 0, 0, 0, 0, 372,
	373, 374, 663, 0, 0, 0, 375, 0, 376, 377,
	378, 0, 0, 0, 379, 380, 381, 664, 665, 382,
	383, 384, 385, 386, 387, 388, 389, 390, 0, 391,
	666, 0, 667, 392, 0, 393, 394, 395, 396, 397,
	668, 669, 670, 483, 0, 398, 399, 0, 400, 401,
	402, 403, 404, 0, 0, 0, 0, 405, 406, 407,
	0, 0, 408, 671, 672, 0, 673, 0, 409, 410,
	0, 674, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 675, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	478, 466, 467, 468, 0, 477, 465, 0, 0, 0,
	479, 480, 481, 0, 676, 482, 677, 484, 485, 0,
	0, 486, 0, 0, 0, 488, 489, 490, 0, 0,
	491, 492, 678, 0, 493, 0, 679, 494, 495, 487,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 0,
	505, 506, 680, 507, 508, 509, 681, 510, 511, 512,
	682, 513, 683, 514, 515, 0, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 524, 684, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 536, 0, 537, 538, 539, 540,
	535, 541, 542, 543, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 685, 554, 0, 555,
	556, 562, 563, 564, 557, 558, 565, 566, 567, 568,
	569, 0, 571, 572, 570, 573, 574, 575, 0, 576,
	577, 559, 560, 578, 579, 0, 580, 581, 582, 583,
	584, 585, 586, 686, 0, 587, 0, 588, 589, 590,
	591, 593, 561, 594, 599, 600, 687, 595, 596, 597,
	598, 688, 602, 603, 0, 604, 605, 0, 601, 592,
	0, 606, 607, 608, 609, 610, 611, 612, 613, 0,
	614, 689, 690, 691, 692, 0, 623, 0, 615, 616,
	617, 693, 618, 694, 0, 619, 620, 621, 622, 0,
	624, 625, 0, 0, 626, 627, 628, 630, 631, 629,
	632, 0, 633, 0, 0, 634, 635, 636, 695, 696,
	697, 0, 638, 637, 639, 640, 698, 641, 642, 274,
	3152, 0, 0, 643, 644, 699, 645, 646, 647, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 648, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 649, 650, 0, 297, 651,
	298, 652, 0, 653, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 654, 655, 656, 0, 306, 307,
	657, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	658, 659, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 357, 0, 358, 359,
	660, 360, 361, 362, 364, 366, 363, 365, 367, 368,
	369, 370, 661, 662, 371, 0, 0, 0, 0, 0,
	0, 0, 372, 373, 374, 663, 0, 0, 0, 375,
	0, 376, 377, 378, 0, 0, 0, 379, 380, 381,
	664, 665, 382, 383, 384, 385, 386, 387, 388, 389,
	390, 0, 391, 666, 0, 667, 392, 0, 393, 394,
	395, 396, 397, 668, 669, 670, 483, 0, 398, 399,
	0, 400, 401, 402, 403, 404, 0, 0, 0, 0,
	405, 406, 407, 0, 0, 408, 671, 672, 0, 673,
	0, 409, 410, 0, 674, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 675, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 478, 466, 467, 468, 0, 477, 465,
	0, 0, 0, 479, 480, 481, 0, 676, 482, 677,
	484, 485, 0, 0, 486, 0, 0, 0, 488, 489,
	3149, 0, 0, 491, 492, 678, 0, 493, 0, 679,
	494, 495, 487, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 0, 505, 506, 680, 507, 508, 509, 681,
	510, 511, 512, 682, 513, 683, 514, 515, 0, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 524, 684,
	525, 526, 528, 527, 529, 0, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 536, 0, 537,
	538, 539, 540, 535, 541, 542, 543, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 685,
	554, 0, 555, 556, 562, 563, 564, 557, 558, 565,
	566, 567, 568, 569, 0, 571, 572, 570, 573, 574,
	575, 0, 576, 577, 559, 560, 578, 579, 0, 580,
	581, 582, 583, 584, 585, 586, 686, 0, 587, 0,
	588, 589, 590, 591, 593, 561, 594, 599, 600, 687,
	595, 596, 597, 598, 688, 602, 603, 0, 604, 605,
	0, 601, 592, 0, 606, 607, 608, 609, 610, 611,
	612, 613, 0, 614, 689, 690, 691, 692, 0, 623,
	0, 615, 616, 617, 693, 618, 694, 0, 619, 620,
	621, 622, 0, 624, 625, 0, 0, 626, 627, 628,
	630, 631, 629, 632, 0, 633, 0, 0, 634, 635,
	636, 695, 696, 697, 0, 638, 637, 639, 640, 698,
	641, 642, 274, 0, 0, 0, 643, 644, 699, 645,
	646, 647, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 648, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 649, 650,
	0, 297, 651, 298, 652, 0, 653, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 654, 655, 656,
	0, 306, 307, 657, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 658, 659, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 355, 356, 357,
	0, 358, 359, 660, 360, 361, 362, 364, 366, 363,
	365, 367, 368, 369, 370, 661, 662, 371, 0, 0,
	0, 0, 0, 0, 0, 372, 373, 374, 663, 0,
	0, 0, 375, 0, 376, 377, 378, 0, 0, 0,
	379, 380, 381, 664, 665, 382, 383, 384, 385, 386,
	387, 388, 389, 390, 0, 391, 666, 0, 667, 392,
	0, 393, 394, 395, 396, 397, 668, 669, 670, 483,
	0, 398, 399, 0, 400, 401, 402, 403, 404, 0,
	0, 0, 0, 405, 406, 407, 0, 0, 408, 671,
	672, 0, 673, 0, 409, 410, 0, 674, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 675,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 478, 466, 467, 468,
	0, 477, 465, 0, 0, 0, 479, 480, 481, 0,
	676, 482, 677, 484, 485, 0, 0, 486, 0, 0,
	0, 488, 489, 490, 0, 0, 491, 492, 678, 0,
	493, 0, 679, 494, 495, 487, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 0, 505, 506, 680, 507,
	508, 509, 681, 510, 511, 512, 682, 513, 683, 514,
	515, 2235, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 524, 684, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	536, 0, 537, 538, 539, 540, 535, 541, 542, 543,
	544, 545, 0, 546, 547, 548, 0, 791, 550, 551,
	552, 553, 685, 554, 0, 555, 556, 562, 563, 564,
	557, 558, 790, 566, 567, 568, 569, 0, 571, 572,
	570, 573, 574, 575, 0, 576, 577, 559, 560, 578,
	579, 0, 580, 581, 582, 583, 584, 585, 586, 686,
	0, 587, 0, 588, 589, 590, 591, 593, 561, 594,
	599, 600, 687, 595, 596, 597, 598, 688, 602, 603,
	0, 604, 605, 0, 601, 592, 0, 606, 607, 608,
	609, 610, 611, 612, 613, 0, 614, 788, 690, 691,
	692, 0, 623, 0, 615, 616, 617, 693, 618, 694,
	0, 619, 620, 621, 622, 0, 624, 625, 0, 0,
	626, 627, 628, 630, 631, 629, 632, 0, 633, 0,
	0, 634, 635, 636, 695, 696, 697, 0, 638, 637,
	639, 640, 698, 641, 642, 274, 0, 0, 0, 643,
	644, 699, 645, 646, 647, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 2389,
	287, 288, 0, 0, 0, 0, 0, 648, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 649, 650, 0, 297, 651, 298, 652, 0, 653,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	654, 655, 656, 0, 306, 307, 657, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 658, 659, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 357, 0, 358, 359, 660, 360, 361, 362,
	364, 366, 363, 365, 367, 368, 369, 370, 661, 662,
	371, 0, 0, 0, 0, 0, 0, 0, 372, 373,
	374, 663, 0, 0, 0, 375, 0, 376, 377, 378,
	0, 0, 0, 379, 380, 381, 664, 665, 382, 383,
	384, 385, 386, 387, 388, 389, 390, 0, 391, 666,
	0, 667, 392, 0, 393, 394, 395, 396, 397, 668,
	669, 670, 483, 0, 398, 399, 0, 400, 401, 402,
	403, 404, 0, 0, 0, 0, 405, 406, 407, 0,
	0, 408, 671, 672, 0, 673, 0, 409, 410, 0,
	674, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 675, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 478,
	466, 467, 468, 0, 477, 465, 0, 0, 0, 479,
	480, 481, 0, 676, 482, 677, 484, 485, 0, 0,
	486, 0, 0, 0, 488, 489, 490, 0, 0, 491,
	492, 678, 0, 493, 0, 679, 494, 495, 487, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 0, 505,
	506, 680, 507, 508, 509, 681, 510, 511, 512, 682,
	513, 683, 514, 515, 0, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 524, 684, 525, 526, 528, 527,
	529, 0, 530, 0, 531, 532, 533, 0, 0, 0,
	0, 0, 534, 536, 0, 537, 538, 539, 540, 535,
	541, 542, 543, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 685, 554, 0, 555, 556,
	562, 563, 564, 557, 558, 565, 566, 567, 568, 569,
	0, 571, 572, 570, 573, 574, 575, 0, 576, 577,
	559, 560, 578, 579, 0, 580, 581, 582, 583, 584,
	585, 586, 686, 0, 587, 0, 588, 589, 590, 591,
	593, 561, 594, 599, 600, 687, 595, 596, 597, 598,
	688, 602, 603, 0, 604, 605, 0, 601, 592, 0,
	606, 607, 608, 609, 610, 611, 612, 613, 0, 614,
	689, 690, 691, 692, 0, 623, 0, 615, 616, 617,
	693, 618, 694, 0, 619, 620, 621, 622, 0, 624,
	625, 0, 0, 626, 627, 628, 630, 631, 629, 632,
	0, 633, 0, 0, 634, 635, 636, 695, 696, 697,
	0, 638, 637, 639, 640, 698, 641, 642, 2377, 0,
	274, 0, 643, 644, 699, 645, 646, 647, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 648, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 649, 650, 0, 297,
	651, 298, 652, 0, 653, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 654, 655, 656, 0, 306,
	307, 657, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 658, 659, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 355, 356, 357, 0, 358,
	359, 660, 360, 361, 362, 364, 366, 363, 365, 367,
	368, 369, 370, 661, 662, 371, 0, 0, 0, 0,
	0, 0, 0, 372, 373, 374, 663, 0, 0, 0,
	375, 0, 376, 377, 378, 0, 0, 0, 379, 380,
	381, 664, 665, 382, 383, 384, 385, 386, 387, 388,
	389, 390, 0, 391, 666, 0, 667, 392, 0, 393,
	394, 395, 396, 397, 668, 669, 670, 483, 0, 398,
	399, 0, 400, 401, 402, 403, 404, 0, 0, 0,
	0, 405, 406, 407, 0, 0, 408, 671, 672, 0,
	673, 0, 409, 410, 0, 674, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 675, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 478, 466, 467, 468, 0, 477,
	465, 0, 0, 0, 479, 480, 481, 0, 676, 482,
	677, 484, 485, 0, 0, 486, 0, 0, 0, 488,
	489, 490, 0, 0, 491, 492, 678, 0, 493, 0,
	679, 494, 495, 487, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 0, 505, 506, 680, 507, 508, 509,
	681, 510, 511, 512, 682, 513, 683, 514, 515, 0,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 524,
	684, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 536, 0,
	537, 538, 539, 540, 535, 541, 542, 543, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	685, 554, 0, 555, 556, 562, 563, 564, 557, 558,
	565, 566, 567, 568, 569, 0, 571, 572, 570, 573,
	574, 575, 0, 576, 577, 559, 560, 578, 579, 0,
	580, 581, 582, 583, 584, 585, 586, 686, 0, 587,
	0, 588, 589, 590, 591, 593, 561, 594, 599, 600,
	687, 595, 596, 597, 598, 688, 602, 603, 0, 604,
	605, 0, 601, 592, 0, 606, 607, 608, 609, 610,
	611, 612, 613, 0, 614, 689, 690, 691, 692, 0,
	623, 0, 615, 616, 617, 693, 618, 694, 0, 619,
	620, 621, 622, 0, 624, 625, 0, 0, 626, 627,
	628, 630, 631, 629, 632, 0, 633, 0, 0, 634,
	635, 636, 695, 696, 697, 0, 638, 637, 639, 640,
	698, 641, 642, 1678, 0, 274, 0, 643, 644, 699,
	645, 646, 647, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 648, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 649, 650, 0, 297, 651, 298, 652, 0, 653,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	654, 655, 656, 0, 306, 307, 657, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 658, 659, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 357, 0, 358, 359, 660, 360, 361, 362,
	364, 366, 363, 365, 367, 368, 369, 370, 661, 662,
	371, 0, 0, 0, 0, 0, 0, 0, 372, 373,
	374, 663, 0, 0, 0, 375, 0, 376, 377, 378,
	0, 0, 0, 379, 380, 381, 664, 665, 382, 383,
	384, 385, 386, 387, 388, 389, 390, 0, 391, 666,
	0, 667, 392, 0, 393, 394, 395, 396, 397, 668,
	669, 670, 483, 0, 398, 399, 0, 400, 401, 402,
	403, 404, 0, 0, 0, 0, 405, 406, 407, 0,
	0, 408, 671, 672, 0, 673, 0, 409, 410, 0,
	674, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 675, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 478,
	466, 467, 468, 0, 477, 465, 0, 0, 0, 479,
	480, 481, 0, 676, 482, 677, 484, 485, 0, 0,
	486, 0, 0, 0, 488, 489, 490, 0, 0, 491,
	492, 678, 0, 493, 0, 679, 494, 495, 487, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 0, 505,
	506, 680, 507, 508, 509, 681, 510, 511, 512, 682,
	513, 683, 514, 515, 0, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 524, 684, 525, 526, 528, 527,
	529, 0, 530, 0, 531, 532, 533, 0, 0, 0,
	0, 0, 534, 536, 0, 537, 538, 539, 540, 535,
	541, 542, 543, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 685, 554, 0, 555, 556,
	562, 563, 564, 557, 558, 565, 566, 567, 568, 569,
	0, 571, 572, 570, 573, 574, 575, 0, 576, 577,
	559, 560, 578, 579, 0, 580, 581, 582, 583, 584,
	585, 586, 686, 0, 587, 0, 588, 589, 590, 591,
	593, 561, 594, 599, 600, 687, 595, 596, 597, 598,
	688, 602, 603, 0, 604, 605, 0, 601, 592, 0,
	606, 607, 608, 609, 610, 611, 612, 613, 0, 614,
	689, 690, 691, 692, 0, 623, 0, 615, 616, 617,
	693, 618, 694, 0, 619, 620, 621, 622, 0, 624,
	625, 0, 0, 626, 627, 628, 630, 631, 629, 632,
	0, 633, 0, 0, 634, 635, 636, 695, 696, 697,
	0, 638, 637, 639, 640, 698, 641, 642, 1671, 0,
	274, 0, 643, 644, 699, 645, 646, 647, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 648, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 649, 650, 0, 297,
	651, 298, 652, 0, 653, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 654, 655, 656, 0, 306,
	307, 657, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 658, 659, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 355, 356, 357, 0, 358,
	359, 660, 360, 361, 362, 364, 366, 363, 365, 367,
	368, 369, 370, 661, 662, 371, 0, 0, 0, 0,
	0, 0, 0, 372, 373, 374, 663, 0, 0, 0,
	375, 0, 376, 377, 378, 0, 0, 0, 379, 380,
	381, 664, 665, 382, 383, 384, 385, 386, 387, 388,
	389, 390, 0, 391, 666, 0, 667, 392, 0, 393,
	394, 395, 396, 397, 668, 669, 670, 483, 0, 398,
	399, 0, 400, 401, 402, 403, 404, 0, 0, 0,
	0, 405, 406, 407, 0, 0, 408, 671, 672, 0,
	673, 0, 409, 410, 0, 674, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 675, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 478, 466, 467, 468, 0, 477,
	465, 0, 0, 0, 479, 480, 481, 0, 676, 482,
	677, 484, 485, 0, 0, 486, 0, 0, 0, 488,
	489, 490, 0, 0, 491, 492, 678, 0, 493, 0,
	679, 494, 495, 487, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 0, 505, 506, 680, 507, 508, 509,
	681, 510, 511, 512, 682, 513, 683, 514, 515, 0,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 524,
	684, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 536, 0,
	537, 538, 539, 540, 535, 541, 542, 543, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	685, 554, 0, 555, 556, 562, 563, 564, 557, 558,
	565, 566, 567, 568, 569, 0, 571, 572, 570, 573,
	574, 575, 0, 576, 577, 559, 560, 578, 579, 0,
	580, 581, 582, 583, 584, 585, 586, 686, 0, 587,
	0, 588, 589, 590, 591, 593, 561, 594, 599, 600,
	687, 595, 596, 597, 598, 688, 602, 603, 0, 604,
	605, 0, 601, 592, 0, 606, 607, 608, 609, 610,
	611, 612, 613, 0, 614, 689, 690, 691, 692, 0,
	623, 0, 615, 616, 617, 693, 618, 694, 0, 619,
	620, 621, 622, 0, 624, 625, 0, 0, 626, 627,
	628, 630, 631, 629, 632, 0, 633, 0, 0, 634,
	635, 636, 695, 696, 697, 0, 638, 637, 639, 640,
	698, 641, 642, 782, 0, 274, 0, 643, 644, 699,
	645, 646, 647, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 648, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 649, 650, 0, 297, 651, 298, 652, 0, 653,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	654, 655, 656, 0, 306, 778, 657, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 658, 659, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 357, 0, 358, 359, 660, 360, 361, 362,
	364, 366, 363, 365, 367, 368, 369, 370, 661, 662,
	371, 0, 0, 0, 0, 0, 0, 0, 372, 373,
	374, 663, 0, 0, 0, 375, 0, 376, 377, 378,
	0, 0, 0, 379, 380, 381, 664, 665, 382, 383,
	384, 385, 386, 387, 388, 389, 390, 0, 391, 666,
	0, 667, 392, 0, 393, 394, 395, 396, 397, 668,
	669, 670, 483, 0, 398, 399, 0, 400, 401, 402,
	403, 404, 0, 0, 0, 0, 405, 406, 407, 0,
	0, 408, 671, 672, 0, 673, 0, 409, 410, 0,
	674, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 675, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 783, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 792, 0, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 478,
	466, 467, 468, 0, 477, 465, 0, 0, 0, 479,
	480, 481, 0, 676, 482, 677, 484, 485, 0, 0,
	486, 0, 0, 0, 488, 489, 490, 0, 0, 491,
	492, 678, 0, 493, 0, 679, 494, 495, 487, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 0, 505,
	506, 680, 507, 508, 509, 681, 510, 511, 512, 682,
	513, 683, 514, 515, 0, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 524, 684, 525, 526, 528, 527,
	529, 0, 530, 0, 531, 532, 533, 0, 0, 0,
	0, 0, 534, 536, 0, 537, 538, 539, 540, 535,
	541, 542, 543, 544, 545, 0, 546, 547, 548, 0,
	791, 550, 551, 552, 553, 685, 554, 0, 555, 556,
	562, 563, 564, 557, 558, 790, 566, 567, 568, 569,
	0, 571, 572, 570, 573, 1656, 575, 0, 576, 577,
	559, 560, 578, 579, 0, 580, 581, 582, 583, 584,
	585, 586, 686, 0, 587, 0, 588, 589, 590, 591,
	593, 561, 594, 599, 600, 687, 595, 596, 597, 598,
	688, 602, 603, 0, 604, 605, 0, 601, 592, 0,
	606, 607, 608, 609, 610, 611, 612, 613, 0, 614,
	788, 690, 691, 692, 0, 623, 0, 615, 616, 617,
	693, 618, 694, 0, 619, 620, 621, 622, 0, 624,
	625, 0, 0, 626, 627, 628, 630, 631, 629, 632,
	0, 633, 0, 0, 634, 635, 636, 695, 696, 697,
	0, 638, 637, 639, 640, 698, 641, 642, 1629, 0,
	274, 0, 643, 644, 699, 645, 646, 647, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 648, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 649, 650, 0, 297,
	651, 298, 652, 0, 653, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 654, 655, 656, 0, 306,
	307, 657, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 658, 659, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 355, 356, 357, 0, 358,
	359, 660, 360, 361, 362, 364, 366, 363, 365, 367,
	368, 369, 370, 661, 662, 371, 0, 0, 0, 0,
	0, 0, 0, 372, 373, 374, 663, 0, 0, 0,
	375, 0, 376, 377, 378, 0, 0, 0, 379, 380,
	381, 664, 665, 382, 383, 384, 385, 386, 387, 388,
	389, 390, 0, 391, 666, 0, 667, 392, 0, 393,
	394, 395, 396, 397, 1628, 669, 670, 483, 0, 398,
	399, 0, 400, 401, 402, 403, 404, 0, 0, 0,
	0, 405, 406, 407, 0, 0, 408, 671, 672, 0,
	673, 0, 409, 410, 0, 674, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 675, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 478, 466, 467, 468, 0, 477,
	465, 0, 0, 0, 479, 480, 481, 0, 676, 482,
	677, 484, 485, 0, 0, 486, 0, 0, 0, 488,
	489, 490, 0, 0, 491, 492, 678, 0, 493, 0,
	679, 494, 495, 487, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 0, 505, 506, 680, 507, 508, 509,
	681, 510, 511, 512, 682, 513, 683, 514, 515, 0,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 524,
	684, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 536, 0,
	537, 538, 539, 540, 535, 541, 542, 543, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	685, 554, 0, 555, 556, 562, 563, 564, 557, 558,
	565, 566, 567, 568, 569, 0, 571, 572, 570, 573,
	574, 575, 0, 576, 577, 559, 560, 578, 579, 0,
	580, 581, 582, 583, 584, 585, 586, 686, 0, 587,
	0, 588, 589, 590, 591, 593, 561, 594, 599, 600,
	687, 595, 596, 597, 598, 688, 602, 603, 0, 604,
	605, 0, 601, 592, 0, 606, 607, 608, 609, 610,
	611, 612, 613, 0, 614, 689, 690, 691, 692, 0,
	623, 0, 615, 616, 617, 693, 618, 694, 0, 619,
	620, 621, 622, 0, 624, 625, 0, 0, 626, 627,
	628, 630, 631, 629, 632, 0, 633, 0, 0, 634,
	635, 636, 695, 696, 697, 0, 638, 637, 639, 640,
	698, 641, 642, 1613, 0, 274, 0, 643, 644, 699,
	645, 646, 647, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 648, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 649, 650, 0, 297, 651, 298, 652, 0, 653,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	654, 655, 656, 0, 306, 307, 657, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 658, 659, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 357, 0, 358, 359, 660, 360, 361, 362,
	364, 366, 363, 365, 367, 368, 369, 370, 661, 662,
	371, 0, 0, 0, 0, 0, 0, 0, 372, 373,
	374, 663, 0, 0, 0, 375, 0, 376, 377, 378,
	0, 0, 0, 379, 380, 381, 664, 665, 382, 383,
	384, 385, 386, 387, 388, 389, 390, 0, 391, 666,
	0, 667, 392, 0, 393, 394, 395, 396, 397, 1611,
	669, 670, 483, 0, 398, 399, 0, 400, 401, 402,
	403, 404, 0, 0, 0, 0, 405, 406, 407, 0,
	0, 408, 671, 672, 0, 673, 0, 409, 410, 0,
	674, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 675, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 478,
	466, 467, 468, 0, 477, 465, 0, 0, 0, 479,
	480, 481, 0, 676, 482, 677, 484, 485, 0, 0,
	486, 0, 0, 0, 488, 489, 490, 0, 0, 491,
	492, 678, 0, 493, 0, 679, 494, 495, 487, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 0, 505,
	506, 680, 507, 508, 509, 681, 510, 511, 512, 682,
	513, 683, 514, 515, 0, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 524, 684, 525, 526, 528, 527,
	529, 0, 530, 0, 531, 532, 533, 0, 0, 0,
	0, 0, 534, 536, 0, 537, 538, 539, 540, 535,
	541, 542, 543, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 685, 554, 0, 555, 556,
	562, 563, 564, 557, 558, 565, 566, 567, 568, 569,
	0, 571, 572, 570, 573, 574, 575, 0, 576, 577,
	559, 560, 578, 579, 0, 580, 581, 582, 583, 584,
	585, 586, 686, 0, 587, 0, 588, 589, 590, 591,
	593, 561, 594, 599, 600, 687, 595, 596, 597, 598,
	688, 602, 603, 0, 604, 605, 0, 601, 592, 0,
	606, 607, 608, 609, 610, 611, 612, 613, 0, 614,
	689, 690, 691, 692, 0, 623, 0, 615, 616, 617,
	693, 618, 694, 0, 619, 620, 621, 622, 0, 624,
	625, 0, 0, 626, 627, 628, 630, 631, 629, 632,
	0, 633, 0, 0, 634, 635, 636, 695, 696, 697,
	0, 638, 637, 639, 640, 698, 641, 642, 1606, 0,
	274, 0, 643, 644, 699, 645, 646, 647, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 648, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 649, 650, 0, 297,
	651, 298, 652, 0, 653, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 654, 655, 656, 0, 306,
	307, 657, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 658, 659, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 355, 356, 357, 0, 358,
	359, 660, 360, 361, 362, 364, 366, 363, 365, 367,
	368, 369, 370, 661, 662, 371, 0, 0, 0, 0,
	0, 0, 0, 372, 373, 374, 663, 0, 0, 0,
	375, 0, 376, 377, 378, 0, 0, 0, 379, 380,
	381, 664, 665, 382, 383, 384, 385, 386, 387, 388,
	389, 390, 0, 391, 666, 0, 667, 392, 0, 393,
	394, 395, 396, 397, 668, 669, 670, 483, 0, 398,
	399, 0, 400, 401, 402, 403, 404, 0, 0, 0,
	0, 405, 406, 407, 0, 0, 408, 671, 672, 0,
	673, 0, 409, 410, 0, 674, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 675, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 478, 466, 467, 468, 0, 477,
	465, 0, 0, 0, 479, 480, 481, 0, 676, 482,
	677, 484, 485, 0, 0, 486, 0, 0, 0, 488,
	489, 490, 0, 0, 491, 492, 678, 0, 493, 0,
	679, 494, 495, 487, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 0, 505, 506, 680, 507, 508, 509,
	681, 510, 511, 512, 682, 513, 683, 514, 515, 0,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 524,
	684, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 536, 0,
	537, 538, 539, 540, 535, 541, 542, 543, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	685, 554, 0, 555, 556, 562, 563, 564, 557, 558,
	565, 566, 567, 568, 569, 0, 571, 572, 570, 573,
	574, 575, 0, 576, 577, 559, 560, 578, 579, 0,
	580, 581, 582, 583, 584, 585, 586, 686, 0, 587,
	0, 588, 589, 590, 591, 593, 561, 594, 599, 600,
	687, 595, 596, 597, 598, 688, 602, 603, 0, 604,
	605, 0, 601, 592, 0, 606, 607, 608, 609, 610,
	611, 612, 613, 0, 614, 689, 690, 691, 692, 0,
	623, 0, 615, 616, 617, 693, 618, 694, 0, 619,
	620, 621, 622, 0, 624, 625, 0, 0, 626, 627,
	628, 630, 631, 629, 632, 0, 633, 0, 0, 634,
	635, 636, 695, 696, 697, 0, 638, 637, 639, 640,
	698, 641, 642, 1583, 0, 274, 0, 643, 644, 699,
	645, 646, 647, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 648, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 649, 650, 0, 297, 651, 298, 652, 0, 653,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	654, 655, 656, 0, 306, 307, 657, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 658, 659, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 357, 0, 358, 359, 660, 360, 361, 362,
	364, 366, 363, 365, 367, 368, 369, 370, 661, 662,
	371, 0, 0, 0, 0, 0, 0, 0, 372, 373,
	374, 663, 0, 0, 0, 375, 0, 376, 377, 378,
	0, 0, 0, 379, 380, 381, 664, 665, 382, 383,
	384, 385, 386, 387, 388, 389, 390, 0, 391, 666,
	0, 667, 392, 0, 393, 394, 395, 396, 397, 1581,
	669, 670, 483, 0, 398, 399, 0, 400, 401, 402,
	403, 404, 0, 0, 0, 0, 405, 406, 407, 0,
	0, 408, 671, 672, 0, 673, 0, 409, 410, 0,
	674, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 675, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 478,
	466, 467, 468, 0, 477, 465, 0, 0, 0, 479,
	480, 481, 0, 676, 482, 677, 484, 485, 0, 0,
	486, 0, 0, 0, 488, 489, 490, 0, 0, 491,
	492, 678, 0, 493, 0, 679, 494, 495, 487, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 0, 505,
	506, 680, 507, 508, 509, 681, 510, 511, 512, 682,
	513, 683, 514, 515, 0, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 524, 684, 525, 526, 528, 527,
	529, 0, 530, 0, 531, 532, 533, 0, 0, 0,
	0, 0, 534, 536, 0, 537, 538, 539, 540, 535,
	541, 542, 543, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 685, 554, 0, 555, 556,
	562, 563, 564, 557, 558, 565, 566, 567, 568, 569,
	0, 571, 572, 570, 573, 574, 575, 0, 576, 577,
	559, 560, 578, 579, 0, 580, 581, 582, 583, 584,
	585, 586, 686, 0, 587, 0, 588, 589, 590, 591,
	593, 561, 594, 599, 600, 687, 595, 596, 597, 598,
	688, 602, 603, 0, 604, 605, 0, 601, 592, 0,
	606, 607, 608, 609, 610, 611, 612, 613, 0, 614,
	689, 690, 691, 692, 0, 623, 0, 615, 616, 617,
	693, 618, 694, 0, 619, 620, 621, 622, 0, 624,
	625, 0, 0, 626, 627, 628, 630, 631, 629, 632,
	0, 633, 0, 0, 634, 635, 636, 695, 696, 697,
	0, 638, 637, 639, 640, 698, 641, 642, 1568, 0,
	274, 0, 643, 644, 699, 645, 646, 647, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 648, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 649, 650, 0, 297,
	651, 298, 652, 0, 653, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 654, 655, 656, 0, 306,
	307, 657, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 658, 659, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 355, 356, 357, 0, 358,
	359, 660, 360, 361, 362, 364, 366, 363, 365, 367,
	368, 369, 370, 661, 662, 371, 0, 0, 0, 0,
	0, 0, 0, 372, 373, 374, 663, 0, 0, 0,
	375, 0, 376, 377, 378, 0, 0, 0, 379, 380,
	381, 664, 665, 382, 383, 384, 385, 386, 387, 388,
	389, 390, 0, 391, 666, 0, 667, 392, 0, 393,
	394, 395, 396, 397, 668, 669, 670, 483, 0, 398,
	399, 0, 400, 401, 402, 403, 404, 0, 0, 0,
	0, 405, 406, 407, 0, 0, 408, 671, 672, 0,
	673, 0, 409, 410, 0, 674, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 675, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 478, 466, 467, 468, 0, 477,
	465, 0, 0, 0, 479, 480, 481, 0, 676, 482,
	677, 484, 485, 0, 0, 486, 0, 0, 0, 488,
	489, 490, 0, 0, 491, 492, 678, 0, 493, 0,
	679, 494, 495, 487, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 0, 505, 506, 680, 507, 508, 509,
	681, 510, 511, 512, 682, 513, 683, 514, 515, 0,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 524,
	684, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 536, 0,
	537, 538, 539, 540, 535, 541, 542, 543, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	685, 554, 0, 555, 556, 562, 563, 564, 557, 558,
	565, 566, 567, 568, 569, 0, 571, 572, 570, 573,
	574, 575, 0, 576, 577, 559, 560, 578, 579, 0,
	580, 581, 582, 583, 584, 585, 586, 686, 0, 587,
	0, 588, 589, 590, 591, 593, 561, 594, 599, 600,
	687, 595, 596, 597, 598, 688, 602, 603, 0, 604,
	605, 0, 601, 592, 0, 606, 607, 608, 609, 610,
	611, 612, 613, 0, 614, 689, 690, 691, 692, 0,
	623, 0, 615, 616, 617, 693, 618, 694, 0, 619,
	620, 621, 622, 0, 624, 625, 0, 0, 626, 627,
	628, 630, 631, 629, 632, 0, 633, 0, 0, 634,
	635, 636, 695, 696, 697, 0, 638, 637, 639, 640,
	698, 641, 642, 1530, 0, 274, 0, 643, 644, 699,
	645, 646, 647, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 648, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 649, 650, 0, 297, 651, 298, 652, 0, 653,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	654, 655, 656, 0, 306, 307, 657, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 658, 659, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 357, 0, 358, 359, 660, 360, 361, 362,
	364, 366, 363, 365, 367, 368, 369, 370, 661, 662,
	371, 0, 0, 0, 0, 0, 0, 0, 372, 373,
	374, 663, 0, 0, 0, 375, 0, 376, 377, 378,
	0, 0, 0, 379, 380, 381, 664, 665, 382, 383,
	384, 385, 386, 387, 388, 389, 390, 0, 391, 666,
	0, 667, 392, 0, 393, 394, 395, 396, 397, 668,
	669, 670, 483, 0, 398, 399, 0, 400, 401, 402,
	403, 404, 0, 0, 0, 0, 405, 406, 407, 0,
	0, 408, 671, 672, 0, 673, 0, 409, 410, 0,
	674, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 675, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 478,
	466, 467, 468, 0, 477, 465, 0, 0, 0, 479,
	480, 481, 0, 676, 482, 677, 484, 485, 0, 0,
	486, 0, 0, 0, 488, 489, 490, 0, 0, 491,
	492, 678, 0, 493, 0, 679, 494, 495, 487, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 0, 505,
	506, 680, 507, 508, 509, 681, 510, 511, 512, 682,
	513, 683, 514, 515, 0, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 524, 684, 525, 526, 528, 527,
	529, 0, 530, 0, 531, 532, 533, 0, 0, 0,
	0, 0, 534, 536, 0, 537, 538, 539, 540, 535,
	541, 542, 543, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 685, 554, 0, 555, 556,
	562, 563, 564, 557, 558, 565, 566, 567, 568, 569,
	0, 571, 572, 570, 573, 574, 575, 0, 576, 577,
	559, 560, 578, 579, 0, 580, 581, 582, 583, 584,
	585, 586, 686, 0, 587, 0, 588, 589, 590, 591,
	593, 561, 594, 599, 600, 687, 595, 596, 597, 598,
	688, 602, 603, 0, 604, 605, 0, 601, 592, 0,
	606, 607, 608, 609, 610, 611, 612, 613, 0, 614,
	689, 690, 691, 692, 0, 623, 0, 615, 616, 617,
	693, 618, 694, 0, 619, 620, 621, 622, 0, 624,
	625, 0, 0, 626, 627, 628, 630, 631, 629, 632,
	0, 633, 0, 0, 634, 635, 636, 695, 696, 697,
	0, 638, 637, 639, 640, 698, 641, 642, 1510, 0,
	274, 0, 643, 644, 699, 645, 646, 647, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 648, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 649, 650, 0, 297,
	651, 298, 652, 0, 653, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 654, 655, 656, 0, 306,
	307, 657, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 658, 659, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 355, 356, 357, 0, 358,
	359, 660, 360, 361, 362, 364, 366, 363, 365, 367,
	368, 369, 370, 661, 662, 371, 0, 0, 0, 0,
	0, 0, 0, 372, 373, 374, 663, 0, 0, 0,
	375, 0, 376, 377, 378, 0, 0, 0, 379, 380,
	381, 664, 665, 382, 383, 384, 385, 386, 387, 388,
	389, 390, 0, 391, 666, 0, 667, 392, 0, 393,
	394, 395, 396, 397, 668, 669, 670, 483, 0, 398,
	399, 0, 400, 401, 402, 403, 404, 0, 0, 0,
	0, 405, 406, 407, 0, 0, 408, 671, 672, 0,
	673, 0, 409, 410, 0, 674, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 675, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 478, 466, 467, 468, 0, 477,
	465, 0, 0, 0, 479, 480, 481, 0, 676, 482,
	677, 484, 485, 0, 0, 486, 0, 0, 0, 488,
	489, 490, 0, 0, 491, 492, 678, 0, 493, 0,
	679, 494, 495, 487, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 0, 505, 506, 680, 507, 508, 509,
	681, 510, 511, 512, 682, 513, 683, 514, 515, 0,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 524,
	684, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 536, 0,
	537, 538, 539, 540, 535, 541, 542, 543, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	685, 554, 0, 555, 556, 562, 563, 564, 557, 558,
	565, 566, 567, 568, 569, 0, 571, 572, 570, 573,
	574, 575, 0, 576, 577, 559, 560, 578, 579, 0,
	580, 581, 582, 583, 584, 585, 586, 686, 0, 587,
	0, 588, 589, 590, 591, 593, 561, 594, 599, 600,
	687, 595, 596, 597, 598, 688, 602, 603, 0, 604,
	605, 0, 601, 592, 0, 606, 607, 608, 609, 610,
	611, 612, 613, 0, 614, 689, 690, 691, 692, 0,
	623, 0, 615, 616, 617, 693, 618, 694, 0, 619,
	620, 621, 622, 0, 624, 625, 0, 0, 626, 627,
	628, 630, 631, 629, 632, 0, 633, 0, 0, 634,
	635, 636, 695, 696, 697, 0, 638, 637, 639, 640,
	698, 641, 642, 1378, 0, 274, 0, 643, 644, 699,
	645, 646, 647, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 648, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 649, 650, 0, 297, 651, 298, 652, 0, 653,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	654, 655, 656, 0, 306, 307, 657, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 658, 659, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 357, 0, 358, 359, 660, 360, 361, 362,
	364, 366, 363, 365, 367, 368, 369, 370, 661, 662,
	371, 0, 0, 0, 0, 0, 0, 0, 372, 373,
	374, 663, 0, 0, 0, 375, 0, 376, 377, 378,
	0, 0, 0, 379, 380, 381, 664, 665, 382, 383,
	384, 385, 386, 387, 388, 389, 390, 0, 391, 666,
	0, 667, 392, 0, 393, 394, 395, 396, 397, 668,
	669, 670, 483, 0, 398, 399, 0, 400, 401, 402,
	403, 404, 0, 0, 0, 0, 405, 406, 407, 0,
	0, 408, 671, 672, 0, 673, 0, 409, 410, 0,
	674, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 675, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 478,
	466, 467, 468, 0, 477, 465, 0, 0, 0, 479,
	480, 481, 0, 676, 482, 677, 484, 485, 0, 0,
	486, 0, 0, 0, 488, 489, 490, 0, 0, 491,
	492, 678, 0, 493, 0, 679, 494, 495, 487, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 0, 505,
	506, 680, 507, 508, 509, 681, 510, 511, 512, 682,
	513, 683, 514, 515, 0, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 524, 684, 525, 526, 528, 527,
	529, 0, 530, 0, 531, 532, 533, 0, 0, 0,
	0, 0, 534, 536, 0, 537, 538, 539, 540, 535,
	541, 542, 543, 544, 545, 0, 546, 547, 548, 0,
	791, 550, 551, 552, 553, 685, 554, 0, 555, 556,
	562, 563, 564, 557, 558, 790, 566, 567, 568, 569,
	0, 571, 572, 570, 573, 574, 575, 0, 576, 577,
	559, 560, 578, 579, 0, 580, 581, 582, 583, 584,
	585, 586, 686, 0, 587, 0, 588, 589, 590, 591,
	593, 561, 594, 599, 600, 687, 595, 596, 597, 598,
	688, 602, 603, 0, 604, 605, 0, 601, 592, 0,
	606, 607, 608, 609, 610, 611, 612, 613, 0, 614,
	788, 690, 691, 692, 0, 623, 0, 615, 616, 617,
	693, 618, 694, 0, 619, 620, 621, 622, 0, 624,
	625, 0, 0, 626, 627, 628, 630, 631, 629, 632,
	0, 633, 0, 0, 634, 635, 636, 695, 696, 697,
	0, 638, 637, 639, 640, 698, 641, 642, 1349, 0,
	274, 0, 643, 644, 699, 645, 646, 647, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 648, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 649, 650, 0, 297,
	651, 298, 652, 0, 653, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 654, 655, 656, 0, 306,
	307, 657, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 658, 659, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 355, 356, 357, 0, 358,
	359, 660, 360, 361, 362, 364, 366, 363, 365, 367,
	368, 369, 370, 661, 662, 371, 0, 0, 0, 0,
	0, 0, 0, 372, 373, 374, 663, 0, 0, 0,
	375, 0, 376, 377, 378, 0, 0, 0, 379, 380,
	381, 664, 665, 382, 383, 384, 385, 386, 387, 388,
	389, 390, 0, 391, 666, 0, 667, 392, 0, 393,
	394, 395, 396, 397, 1348, 669, 670, 483, 0, 398,
	399, 0, 400, 401, 402, 403, 404, 0, 0, 0,
	0, 405, 406, 407, 0, 0, 408, 671, 672, 0,
	673, 0, 409, 410, 0, 674, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 675, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 478, 466, 467, 468, 0, 477,
	465, 0, 0, 0, 479, 480, 481, 0, 676, 482,
	677, 484, 485, 0, 0, 486, 0, 0, 0, 488,
	489, 490, 0, 0, 491, 492, 678, 0, 493, 0,
	679, 494, 495, 487, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 0, 505, 506, 680, 507, 508, 509,
	681, 510, 511, 512, 682, 513, 683, 514, 515, 0,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 524,
	684, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 536, 0,
	537, 538, 539, 540, 535, 541, 542, 543, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	685, 554, 0, 555, 556, 562, 563, 564, 557, 558,
	565, 566, 567, 568, 569, 0, 571, 572, 570, 573,
	574, 575, 0, 576, 577, 559, 560, 578, 579, 0,
	580, 581, 582, 583, 584, 585, 586, 686, 0, 587,
	0, 588, 589, 590, 591, 593, 561, 594, 599, 600,
	687, 595, 596, 597, 598, 688, 602, 603, 0, 604,
	605, 0, 601, 592, 0, 606, 607, 608, 609, 610,
	611, 612, 613, 0, 614, 689, 690, 691, 692, 0,
	623, 0, 615, 616, 617, 693, 618, 694, 0, 619,
	620, 621, 622, 0, 624, 625, 0, 0, 626, 627,
	628, 630, 631, 629, 632, 0, 633, 0, 0, 634,
	635, 636, 695, 696, 697, 0, 638, 637, 639, 640,
	698, 641, 642, 1340, 0, 274, 0, 643, 644, 699,
	645, 646, 647, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 648, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 649, 650, 0, 297, 651, 298, 652, 0, 653,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	654, 655, 656, 0, 306, 307, 657, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 658, 659, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 357, 0, 358, 359, 660, 360, 361, 362,
	364, 366, 363, 365, 367, 368, 369, 370, 661, 662,
	371, 0, 0, 0, 0, 0, 0, 0, 372, 373,
	374, 663, 0, 0, 0, 375, 0, 376, 377, 378,
	0, 0, 0, 379, 380, 381, 664, 665, 382, 383,
	384, 385, 386, 387, 388, 389, 390, 0, 391, 666,
	0, 667, 392, 0, 393, 394, 395, 396, 397, 1339,
	669, 670, 483, 0, 398, 399, 0, 400, 401, 402,
	403, 404, 0, 0, 0, 0, 405, 406, 407, 0,
	0, 408, 671, 672, 0, 673, 0, 409, 410, 0,
	674, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 675, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 478,
	466, 467, 468, 0, 477, 465, 0, 0, 0, 479,
	480, 481, 0, 676, 482, 677, 484, 485, 0, 0,
	486, 0, 0, 0, 488, 489, 490, 0, 0, 491,
	492, 678, 0, 493, 0, 679, 494, 495, 487, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 0, 505,
	506, 680, 507, 508, 509, 681, 510, 511, 512, 682,
	513, 683, 514, 515, 0, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 524, 684, 525, 526, 528, 527,
	529, 0, 530, 0, 531, 532, 533, 0, 0, 0,
	0, 0, 534, 536, 0, 537, 538, 539, 540, 535,
	541, 542, 543, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 685, 554, 0, 555, 556,
	562, 563, 564, 557, 558, 565, 566, 567, 568, 569,
	0, 571, 572, 570, 573, 574, 575, 0, 576, 577,
	559, 560, 578, 579, 0, 580, 581, 582, 583, 584,
	585, 586, 686, 0, 587, 0, 588, 589, 590, 591,
	593, 561, 594, 599, 600, 687, 595, 596, 597, 598,
	688, 602, 603, 0, 604, 605, 0, 601, 592, 0,
	606, 607, 608, 609, 610, 611, 612, 613, 0, 614,
	689, 690, 691, 692, 0, 623, 0, 615, 616, 617,
	693, 618, 694, 0, 619, 620, 621, 622, 0, 624,
	625, 0, 0, 626, 627, 628, 630, 631, 629, 632,
	0, 633, 0, 0, 634, 635, 636, 695, 696, 697,
	0, 638, 637, 639, 640, 698, 641, 642, 274, 0,
	0, 0, 643, 644, 699, 645, 646, 647, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 1292, 287, 288, 0, 0, 0, 0, 0,
	648, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 649, 650, 0, 297, 651, 298,
	652, 0, 653, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 654, 655, 656, 0, 306, 307, 657,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 658,
	659, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 355, 356, 357, 0, 358, 359, 660,
	360, 361, 362, 364, 366, 363, 365, 367, 368, 369,
	370, 661, 662, 371, 0, 0, 0, 0, 0, 0,
	0, 372, 373, 374, 663, 0, 0, 0, 375, 0,
	376, 377, 378, 0, 0, 0, 379, 380, 381, 664,
	665, 382, 383, 384, 385, 386, 387, 388, 389, 390,
	0, 391, 666, 0, 667, 392, 0, 393, 394, 395,
	396, 397, 668, 669, 670, 483, 0, 398, 399, 0,
	400, 401, 402, 403, 404, 0, 0, 0, 0, 405,
	406, 407, 0, 0, 408, 671, 672, 0, 673, 0,
	409, 410, 0, 674, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 675, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 478, 466, 467, 468, 0, 477, 465, 0,
	0, 0, 479, 480, 481, 0, 676, 482, 677, 484,
	485, 0, 0, 486, 0, 0, 0, 488, 489, 490,
	0, 0, 491, 492, 678, 0, 493, 0, 679, 494,
	495, 487, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 0, 505, 506, 680, 507, 508, 509, 681, 510,
	511, 512, 682, 513, 683, 514, 515, 0, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 524, 684, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 536, 0, 537, 538,
	539, 540, 535, 541, 542, 543, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 685, 554,
	0, 555, 556, 562, 563, 564, 557, 558, 565, 566,
	567, 568, 569, 0, 571, 572, 570, 573, 574, 575,
	0, 576, 577, 559, 560, 578, 579, 0, 580, 581,
	582, 583, 584, 585, 586, 686, 0, 587, 0, 588,
	589, 590, 591, 593, 561, 594, 599, 600, 687, 595,
	596, 597, 598, 688, 602, 603, 0, 604, 605, 0,
	601, 592, 0, 606, 607, 608, 609, 610, 611, 612,
	613, 0, 614, 689, 690, 691, 692, 0, 623, 0,
	615, 616, 617, 693, 618, 694, 0, 619, 620, 621,
	622, 0, 624, 625, 0, 0, 626, 627, 628, 630,
	631, 629, 632, 0, 633, 0, 0, 634, 635, 636,
	695, 696, 697, 0, 638, 637, 639, 640, 698, 641,
	642, 274, 0, 0, 0, 643, 644, 699, 645, 646,
	647, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 797, 287, 288, 0, 0,
	0, 0, 0, 648, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 649, 650, 0,
	297, 651, 298, 652, 0, 653, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 654, 655, 656, 0,
	306, 307, 657, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 658, 659, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 357, 0,
	358, 359, 660, 360, 361, 362, 364, 366, 363, 365,
	367, 368, 369, 370, 661, 662, 371, 0, 0, 0,
	0, 0, 0, 0, 372, 373, 374, 663, 0, 0,
	0, 375, 0, 376, 377, 378, 0, 0, 0, 379,
	380, 381, 664, 665, 382, 383, 384, 385, 386, 387,
	388, 389, 390, 0, 391, 666, 0, 667, 392, 0,
	393, 394, 395, 396, 397, 668, 669, 670, 483, 0,
	398, 399, 0, 400, 401, 402, 403, 404, 0, 0,
	0, 0, 405, 406, 407, 0, 0, 408, 671, 672,
	0, 673, 0, 409, 410, 0, 674, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 675, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 478, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 479, 480, 481, 0, 676,
	482, 677, 484, 485, 0, 0, 486, 0, 0, 0,
	488, 489, 490, 0, 0, 491, 492, 678, 0, 493,
	0, 679, 494, 495, 487, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 0, 505, 506, 680, 507, 508,
	509, 681, 510, 511, 512, 682, 513, 683, 514, 515,
	0, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	524, 684, 525, 526, 528, 527, 529, 0, 530, 0,
	531, 532, 533, 0, 0, 0, 0, 0, 534, 536,
	0, 537, 538, 539, 540, 535, 541, 542, 543, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 685, 554, 0, 555, 556, 562, 563, 564, 557,
	558, 565, 566, 567, 568, 569, 0, 571, 572, 570,
	573, 574, 575, 0, 576, 577, 559, 560, 578, 579,
	0, 580, 581, 582, 583, 584, 585, 586, 686, 0,
	587, 0, 588, 589, 590, 591, 593, 561, 594, 599,
	600, 687, 595, 596, 597, 598, 688, 602, 603, 0,
	604, 605, 0, 601, 592, 0, 606, 607, 608, 609,
	610, 611, 612, 613, 0, 614, 689, 690, 691, 692,
	0, 623, 0, 615, 616, 617, 693, 618, 694, 0,
	619, 620, 621, 622, 0, 624, 625, 0, 0, 626,
	627, 628, 630, 631, 629, 632, 0, 633, 0, 0,
	634, 635, 636, 695, 696, 697, 0, 638, 637, 639,
	640, 698, 641, 642, 782, 0, 274, 0, 643, 644,
	699, 645, 646, 647, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 648, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 649, 650, 0, 297, 651, 298, 652, 0,
	653, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 654, 655, 656, 0, 306, 778, 657, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 777, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 658, 659, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 355, 356, 357, 0, 358, 359, 660, 360, 361,
	362, 364, 366, 363, 365, 367, 368, 369, 370, 661,
	662, 371, 0, 0, 0, 0, 0, 0, 0, 372,
	373, 374, 663, 0, 0, 0, 375, 0, 376, 377,
	378, 0, 0, 0, 379, 380, 381, 664, 665, 382,
	383, 384, 385, 386, 387, 388, 389, 390, 0, 391,
	666, 0, 667, 392, 0, 393, 394, 395, 396, 397,
	668, 669, 670, 483, 0, 398, 399, 0, 400, 401,
	402, 403, 404, 0, 0, 0, 0, 405, 406, 407,
	0, 0, 408, 671, 672, 0, 673, 0, 409, 410,
	0, 674, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 675, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 783, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 792, 0, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	478, 466, 467, 468, 0, 477, 465, 0, 0, 0,
	479, 480, 481, 0, 676, 482, 677, 484, 485, 0,
	0, 486, 0, 0, 0, 488, 489, 490, 0, 0,
	491, 492, 678, 0, 493, 0, 679, 494, 495, 487,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 0,
	505, 506, 680, 507, 508, 509, 681, 510, 511, 512,
	682, 513, 683, 514, 515, 0, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 524, 684, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 536, 0, 537, 538, 539, 540,
	535, 541, 542, 543, 544, 545, 0, 546, 547, 548,
	0, 791, 550, 551, 552, 553, 779, 554, 0, 555,
	556, 562, 563, 564, 557, 558, 790, 566, 567, 568,
	569, 0, 571, 572, 570, 573, 780, 575, 0, 576,
	577, 559, 560, 578, 579, 0, 580, 581, 582, 583,
	584, 585, 586, 686, 0, 587, 0, 588, 589, 590,
	591, 593, 561, 594, 599, 600, 687, 595, 596, 597,
	598, 688, 602, 603, 0, 604, 605, 0, 601, 592,
	0, 606, 607, 608, 609, 610, 611, 612, 613, 0,
	614, 788, 690, 691, 692, 0, 623, 0, 615, 784,
	617, 693, 618, 694, 0, 619, 620, 621, 622, 0,
	624, 625, 0, 0, 626, 627, 628, 630, 631, 629,
	632, 0, 633, 0, 0, 634, 635, 636, 695, 696,
	697, 0, 638, 637, 639, 640, 698, 641, 642, 771,
	0, 274, 0, 643, 644, 699, 645, 646, 647, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 648, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 649, 650, 0,
	297, 651, 298, 652, 0, 653, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 654, 655, 656, 0,
	306, 307, 657, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 658, 659, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 357, 0,
	358, 359, 660, 360, 361, 362, 364, 366, 363, 365,
	367, 368, 369, 370, 661, 662, 371, 0, 0, 0,
	0, 0, 0, 0, 372, 373, 374, 663, 0, 0,
	0, 375, 0, 376, 377, 378, 0, 0, 0, 379,
	380, 381, 664, 665, 382, 383, 384, 385, 386, 387,
	388, 389, 390, 0, 391, 666, 0, 667, 392, 0,
	393, 394, 395, 396, 397, 668, 669, 670, 483, 0,
	398, 399, 0, 400, 401, 402, 403, 404, 0, 0,
	0, 0, 405, 406, 407, 0, 0, 408, 671, 672,
	0, 673, 0, 409, 410, 0, 674, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 675, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 478, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 479, 480, 481, 0, 676,
	482, 677, 484, 485, 0, 0, 486, 0, 0, 0,
	488, 489, 490, 0, 0, 491, 492, 678, 0, 493,
	0, 679, 494, 495, 487, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 0, 505, 506, 680, 507, 508,
	509, 681, 510, 511, 512, 682, 513, 683, 514, 515,
	0, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	524, 684, 525, 526, 528, 527, 529, 0, 530, 0,
	531, 532, 533, 0, 0, 0, 0, 0, 534, 536,
	0, 537, 538, 539, 540, 535, 541, 542, 543, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 685, 554, 0, 555, 556, 772, 563, 564, 557,
	558, 565, 566, 567, 568, 569, 0, 571, 572, 570,
	573, 574, 575, 0, 576, 577, 559, 560, 578, 579,
	0, 580, 581, 582, 583, 584, 585, 586, 686, 0,
	587, 0, 588, 589, 590, 591, 593, 561, 594, 599,
	600, 687, 595, 596, 597, 598, 688, 602, 603, 0,
	604, 605, 0, 601, 592, 0, 606, 607, 608, 609,
	610, 611, 612, 613, 0, 614, 689, 690, 691, 692,
	0, 623, 0, 615, 616, 617, 693, 618, 694, 0,
	619, 620, 621, 622, 0, 624, 625, 0, 0, 626,
	627, 628, 630, 631, 629, 632, 0, 633, 0, 0,
	634, 635, 636, 695, 696, 697, 0, 638, 637, 639,
	640, 698, 641, 642, 734, 0, 274, 0, 643, 644,
	699, 645, 646, 647, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 648, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 649, 650, 0, 297, 651, 298, 652, 0,
	653, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 654, 655, 656, 0, 306, 307, 657, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 658, 659, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 355, 356, 357, 0, 358, 359, 660, 360, 361,
	362, 364, 366, 363, 365, 367, 368, 369, 370, 661,
	662, 371, 0, 0, 0, 0, 0, 0, 0, 372,
	373, 374, 663, 0, 0, 0, 375, 0, 376, 377,
	378, 0, 0, 0, 379, 380, 381, 664, 665, 382,
	383, 384, 385, 386, 387, 388, 389, 390, 0, 391,
	666, 0, 667, 392, 0, 393, 394, 395, 396, 397,
	668, 669, 670, 483, 0, 398, 399, 0, 400, 401,
	402, 403, 404, 0, 0, 0, 0, 405, 406, 407,
	0, 0, 408, 671, 672, 0, 673, 0, 409, 410,
	0, 674, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 675, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	478, 466, 467, 468, 0, 477, 465, 0, 0, 0,
	479, 480, 481, 0, 676, 482, 677, 484, 485, 0,
	0, 486, 0, 0, 0, 488, 489, 490, 0, 0,
	491, 492, 678, 0, 493, 0, 679, 494, 495, 487,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 0,
	505, 506, 680, 507, 508, 509, 681, 510, 511, 512,
	682, 513, 683, 514, 515, 0, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 524, 684, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 536, 0, 537, 538, 539, 540,
	535, 541, 542, 543, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 685, 554, 0, 555,
	556, 562, 563, 564, 557, 558, 565, 566, 567, 568,
	569, 0, 571, 572, 570, 573, 574, 575, 0, 576,
	577, 559, 560, 578, 579, 0, 580, 581, 582, 583,
	584, 585, 586, 686, 0, 587, 0, 588, 589, 590,
	591, 593, 561, 594, 599, 600, 687, 595, 596, 597,
	598, 688, 602, 603, 0, 604, 605, 0, 601, 592,
	0, 606, 607, 608, 609, 610, 611, 612, 613, 0,
	614, 689, 690, 691, 692, 0, 623, 0, 615, 616,
	617, 693, 618, 694, 0, 619, 620, 621, 622, 0,
	624, 625, 0, 0, 626, 627, 628, 630, 631, 629,
	632, 0, 633, 0, 0, 634, 635, 636, 695, 696,
	697, 0, 638, 637, 639, 640, 698, 641, 642, 727,
	0, 274, 0, 643, 644, 699, 645, 646, 647, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 648, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 649, 650, 0,
	297, 651, 298, 652, 0, 653, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 654, 655, 656, 0,
	306, 307, 657, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 658, 659, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 357, 0,
	358, 359, 660, 360, 361, 362, 364, 366, 363, 365,
	367, 368, 369, 370, 661, 662, 371, 0, 0, 0,
	0, 0, 0, 0, 372, 373, 374, 663, 0, 0,
	0, 375, 0, 376, 377, 378, 0, 0, 0, 379,
	380, 381, 664, 665, 382, 383, 384, 385, 386, 387,
	388, 389, 390, 0, 391, 666, 0, 667, 392, 0,
	393, 394, 395, 396, 397, 668, 669, 670, 483, 0,
	398, 399, 0, 400, 401, 402, 403, 404, 0, 0,
	0, 0, 405, 406, 407, 0, 0, 408, 671, 672,
	0, 673, 0, 409, 410, 0, 674, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 675, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 478, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 479, 480, 481, 0, 676,
	482, 677, 484, 485, 0, 0, 486, 0, 0, 0,
	488, 489, 490, 0, 0, 491, 492, 678, 0, 493,
	0, 679, 494, 495, 487, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 0, 505, 506, 680, 507, 508,
	509, 681, 510, 511, 512, 682, 513, 683, 514, 515,
	0, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	524, 684, 525, 526, 528, 527, 529, 0, 530, 0,
	531, 532, 533, 0, 0, 0, 0, 0, 534, 536,
	0, 537, 538, 539, 540, 535, 541, 542, 543, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 685, 554, 0, 555, 556, 562, 563, 564, 557,
	558, 565, 566, 567, 568, 569, 0, 571, 572, 570,
	573, 574, 575, 0, 576, 577, 559, 560, 578, 579,
	0, 580, 581, 582, 583, 584, 585, 586, 686, 0,
	587, 0, 588, 589, 590, 591, 593, 561, 594, 599,
	600, 687, 595, 596, 597, 598, 688, 602, 603, 0,
	604, 605, 0, 601, 592, 0, 606, 607, 608, 609,
	610, 611, 612, 613, 0, 614, 689, 690, 691, 692,
	0, 623, 0, 615, 616, 617, 693, 618, 694, 0,
	619, 620, 621, 622, 0, 624, 625, 0, 0, 626,
	627, 628, 630, 631, 629, 632, 0, 633, 0, 0,
	634, 635, 636, 695, 696, 697, 0, 638, 637, 639,
	640, 698, 641, 642, 705, 0, 274, 0, 643, 644,
	699, 645, 646, 647, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 648, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 649, 650, 0, 297, 651, 298, 652, 0,
	653, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 654, 655, 656, 0, 306, 307, 657, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 658, 659, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 355, 356, 357, 0, 358, 359, 660, 360, 361,
	362, 364, 366, 363, 365, 367, 368, 369, 370, 661,
	662, 371, 0, 0, 0, 0, 0, 0, 0, 372,
	373, 374, 663, 0, 0, 0, 375, 0, 376, 377,
	378, 0, 0, 0, 379, 380, 381, 664, 665, 382,
	383, 384, 385, 386, 387, 388, 389, 390, 0, 391,
	666, 0, 667, 392, 0, 393, 394, 395, 396, 397,
	668, 669, 670, 483, 0, 398, 399, 0, 400, 401,
	402, 403, 404, 0, 0, 0, 0, 405, 406, 407,
	0, 0, 408, 671, 672, 0, 673, 0, 409, 410,
	0, 674, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 675, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	478, 466, 467, 468, 0, 477, 465, 0, 0, 0,
	479, 480, 481, 0, 676, 482, 677, 484, 485, 0,
	0, 486, 0, 0, 0, 488, 489, 490, 0, 0,
	491, 492, 678, 0, 493, 0, 679, 494, 495, 487,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 0,
	505, 506, 680, 507, 508, 509, 681, 510, 511, 512,
	682, 513, 683, 514, 515, 0, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 524, 684, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 536, 0, 537, 538, 539, 540,
	535, 541, 542, 543, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 685, 554, 0, 555,
	556, 562, 563, 564, 557, 558, 565, 566, 567, 568,
	569, 0, 571, 572, 570, 573, 574, 575, 0, 576,
	577, 559, 560, 578, 579, 0, 580, 581, 582, 583,
	584, 585, 586, 686, 0, 587, 0, 588, 589, 590,
	591, 593, 561, 594, 599, 600, 687, 595, 596, 597,
	598, 688, 602, 603, 0, 604, 605, 0, 601, 592,
	0, 606, 607, 608, 609, 610, 611, 612, 613, 0,
	614, 689, 690, 691, 692, 0, 623, 0, 615, 616,
	617, 693, 618, 694, 0, 619, 620, 621, 622, 0,
	624, 625, 0, 0, 626, 627, 628, 630, 631, 629,
	632, 0, 633, 0, 0, 634, 635, 636, 695, 696,
	697, 0, 638, 637, 639, 640, 698, 641, 642, 274,
	0, 0, 0, 643, 644, 699, 645, 646, 647, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 648, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 649, 650, 0, 297, 651,
	298, 652, 0, 653, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 654, 655, 656, 0, 306, 307,
	657, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	658, 659, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 357, 0, 358, 359,
	660, 360, 361, 362, 364, 366, 363, 365, 367, 368,
	369, 370, 661, 662, 371, 0, 0, 0, 0, 0,
	0, 0, 372, 373, 374, 663, 0, 0, 0, 375,
	0, 376, 377, 378, 0, 0, 0, 379, 380, 381,
	664, 665, 382, 383, 384, 385, 386, 387, 388, 389,
	390, 0, 391, 666, 0, 667, 392, 0, 393, 394,
	395, 396, 397, 668, 669, 670, 483, 0, 398, 399,
	0, 400, 401, 402, 403, 404, 0, 0, 0, 0,
	405, 406, 407, 0, 0, 408, 671, 672, 0, 673,
	0, 409, 410, 0, 674, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 675, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 478, 466, 467, 468, 0, 477, 465,
	0, 0, 0, 479, 480, 481, 0, 676, 482, 677,
	484, 485, 0, 0, 486, 0, 0, 0, 488, 489,
	490, 0, 0, 491, 492, 678, 0, 493, 0, 679,
	494, 495, 487, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 0, 505, 506, 680, 507, 508, 509, 681,
	510, 511, 512, 682, 513, 683, 514, 515, 0, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 524, 684,
	525, 526, 528, 527, 529, 0, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 536, 0, 537,
	538, 539, 540, 535, 541, 542, 543, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 685,
	554, 0, 555, 556, 562, 563, 564, 557, 558, 565,
	566, 567, 568, 569, 0, 571, 572, 570, 573, 574,
	575, 0, 576, 577, 559, 560, 578, 579, 0, 580,
	581, 582, 583, 584, 585, 586, 686, 0, 587, 0,
	588, 589, 590, 591, 593, 561, 594, 599, 600, 687,
	595, 596, 597, 598, 688, 602, 603, 0, 604, 605,
	0, 601, 592, 0, 606, 607, 608, 609, 610, 611,
	612, 613, 0, 614, 689, 690, 691, 692, 0, 623,
	0, 615, 616, 617, 693, 618, 694, 0, 619, 620,
	621, 622, 0, 624, 625, 0, 0, 626, 627, 628,
	630, 631, 629, 632, 0, 633, 0, 0, 634, 635,
	636, 695, 696, 697, 0, 638, 637, 639, 640, 698,
	641, 642, 274, 0, 0, 0, 643, 644, 699, 645,
	646, 647, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 648, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 649, 650,
	0, 297, 651, 298, 652, 0, 653, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 654, 655, 656,
	0, 306, 307, 657, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 658, 659, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 355, 356, 357,
	0, 358, 359, 660, 360, 361, 362, 364, 366, 363,
	365, 367, 368, 369, 370, 661, 662, 371, 0, 0,
	0, 0, 0, 0, 0, 372, 373, 374, 663, 0,
	0, 0, 375, 0, 376, 377, 378, 0, 0, 0,
	379, 380, 381, 664, 665, 382, 383, 384, 385, 386,
	387, 388, 389, 390, 0, 391, 666, 0, 667, 392,
	0, 393, 394, 395, 396, 397, 3693, 669, 670, 483,
	0, 398, 399, 0, 400, 401, 402, 403, 404, 0,
	0, 0, 0, 405, 406, 407, 0, 0, 408, 671,
	672, 0, 673, 0, 409, 410, 0, 674, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 675,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 478, 466, 467, 468,
	0, 477, 465, 0, 0, 0, 479, 480, 481, 0,
	676, 482, 677, 484, 485, 0, 0, 486, 0, 0,
	0, 488, 489, 490, 0, 0, 491, 492, 678, 0,
	493, 0, 679, 494, 495, 487, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 0, 505, 506, 680, 507,
	508, 509, 681, 510, 511, 512, 682, 513, 683, 514,
	515, 0, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 524, 684, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	536, 0, 537, 538, 539, 540, 535, 541, 542, 543,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 685, 554, 0, 555, 556, 562, 563, 564,
	557, 558, 565, 566, 567, 568, 569, 0, 571, 572,
	570, 573, 574, 575, 0, 576, 577, 559, 560, 578,
	579, 0, 580, 581, 582, 583, 584, 585, 586, 686,
	0, 587, 0, 588, 589, 590, 591, 593, 561, 594,
	599, 600, 687, 595, 596, 597, 598, 688, 602, 603,
	0, 604, 605, 0, 601, 592, 0, 606, 607, 608,
	609, 610, 611, 612, 613, 0, 614, 689, 690, 691,
	692, 0, 623, 0, 615, 616, 617, 693, 618, 694,
	0, 619, 620, 621, 622, 0, 624, 625, 0, 0,
	626, 627, 628, 630, 631, 629, 632, 0, 633, 0,
	0, 634, 635, 636, 695, 696, 697, 0, 638, 637,
	639, 640, 698, 641, 642, 274, 0, 0, 0, 643,
	644, 699, 645, 646, 647, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 648, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 649, 650, 0, 297, 651, 298, 652, 0, 653,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	654, 655, 656, 0, 306, 307, 657, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 658, 659, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 357, 0, 358, 359, 660, 360, 361, 362,
	364, 366, 363, 365, 367, 368, 369, 370, 661, 662,
	371, 0, 0, 0, 0, 0, 0, 0, 372, 373,
	374, 663, 0, 0, 0, 375, 0, 376, 377, 378,
	0, 0, 0, 379, 380, 381, 664, 665, 382, 383,
	384, 385, 386, 387, 388, 389, 390, 0, 391, 666,
	0, 667, 392, 0, 393, 394, 395, 396, 397, 668,
	669, 670, 483, 0, 398, 399, 0, 400, 401, 402,
	403, 404, 0, 0, 0, 0, 405, 406, 407, 0,
	0, 408, 671, 672, 0, 673, 0, 409, 410, 0,
	674, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 675, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 478,
	466, 467, 468, 0, 477, 465, 0, 0, 0, 479,
	480, 481, 0, 676, 482, 677, 484, 485, 0, 0,
	486, 0, 0, 0, 488, 489, 490, 0, 0, 491,
	492, 678, 0, 493, 0, 679, 494, 495, 487, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 0, 505,
	506, 680, 507, 508, 509, 681, 510, 511, 512, 682,
	513, 683, 514, 515, 0, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 524, 684, 525, 526, 528, 527,
	529, 0, 530, 0, 531, 532, 533, 0, 0, 0,
	0, 0, 534, 536, 0, 537, 538, 539, 540, 535,
	541, 542, 543, 544, 545, 0, 546, 547, 548, 0,
	791, 550, 551, 552, 553, 685, 554, 0, 555, 556,
	562, 563, 564, 557, 558, 790, 566, 567, 568, 569,
	0, 571, 572, 570, 573, 574, 575, 0, 576, 577,
	559, 560, 578, 579, 0, 580, 581, 582, 583, 584,
	585, 586, 686, 0, 587, 0, 588, 589, 590, 591,
	593, 561, 594, 599, 600, 687, 595, 596, 597, 598,
	688, 602, 603, 0, 604, 605, 0, 601, 592, 0,
	606, 607, 608, 609, 610, 611, 612, 613, 0, 614,
	788, 690, 691, 692, 0, 623, 0, 615, 616, 617,
	693, 618, 694, 0, 619, 620, 621, 622, 0, 624,
	625, 0, 0, 626, 627, 628, 630, 631, 629, 632,
	0, 633, 0, 0, 634, 635, 636, 695, 696, 697,
	0, 638, 637, 639, 640, 698, 641, 642, 274, 0,
	0, 0, 643, 644, 699, 645, 646, 647, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	648, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 649, 650, 0, 297, 651, 298,
	652, 0, 653, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 654, 655, 656, 0, 306, 307, 657,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 658,
	659, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 355, 356, 357, 0, 358, 359, 660,
	360, 361, 362, 364, 366, 363, 365, 367, 368, 369,
	370, 661, 662, 371, 0, 0, 0, 0, 0, 0,
	0, 372, 373, 374, 663, 0, 0, 0, 375, 0,
	376, 377, 378, 0, 0, 0, 379, 380, 381, 664,
	665, 382, 383, 384, 385, 386, 387, 388, 389, 390,
	0, 391, 666, 0, 667, 392, 0, 393, 394, 395,
	396, 397, 3608, 669, 670, 483, 0, 398, 399, 0,
	400, 401, 402, 403, 404, 0, 0, 0, 0, 405,
	406, 407, 0, 0, 408, 671, 672, 0, 673, 0,
	409, 410, 0, 674, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 675, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 478, 466, 467, 468, 0, 477, 465, 0,
	0, 0, 479, 480, 481, 0, 676, 482, 677, 484,
	485, 0, 0, 486, 0, 0, 0, 488, 489, 490,
	0, 0, 491, 492, 678, 0, 493, 0, 679, 494,
	495, 487, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 0, 505, 506, 680, 507, 508, 509, 681, 510,
	511, 512, 682, 513, 683, 514, 515, 0, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 524, 684, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 536, 0, 537, 538,
	539, 540, 535, 541, 542, 543, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 685, 554,
	0, 555, 556, 562, 563, 564, 557, 558, 565, 566,
	567, 568, 569, 0, 571, 572, 570, 573, 574, 575,
	0, 576, 577, 559, 560, 578, 579, 0, 580, 581,
	582, 583, 584, 585, 586, 686, 0, 587, 0, 588,
	589, 590, 591, 593, 561, 594, 599, 600, 687, 595,
	596, 597, 598, 688, 602, 603, 0, 604, 605, 0,
	601, 592, 0, 606, 607, 608, 609, 610, 611, 612,
	613, 0, 614, 689, 690, 691, 692, 0, 623, 0,
	615, 616, 617, 693, 618, 694, 0, 619, 620, 621,
	622, 0, 624, 625, 0, 0, 626, 627, 628, 630,
	631, 629, 632, 0, 633, 0, 0, 634, 635, 636,
	695, 696, 697, 0, 638, 637, 639, 640, 698, 641,
	642, 274, 0, 0, 0, 643, 644, 699, 645, 646,
	647, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 648, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 649, 650, 0,
	297, 651, 298, 652, 0, 653, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 654, 655, 656, 0,
	306, 307, 657, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 658, 659, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 357, 0,
	358, 359, 660, 360, 361, 362, 364, 366, 363, 365,
	367, 368, 369, 370, 661, 662, 371, 0, 0, 0,
	0, 0, 0, 0, 372, 373, 374, 663, 0, 0,
	0, 375, 0, 376, 377, 378, 0, 0, 0, 379,
	380, 381, 664, 665, 382, 383, 384, 385, 386, 387,
	388, 389, 390, 0, 391, 666, 0, 667, 392, 0,
	393, 394, 395, 396, 397, 3584, 669, 670, 483, 0,
	398, 399, 0, 400, 401, 402, 403, 404, 0, 0,
	0, 0, 405, 406, 407, 0, 0, 408, 671, 672,
	0, 673, 0, 409, 410, 0, 674, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 675, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 478, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 479, 480, 481, 0, 676,
	482, 677, 484, 485, 0, 0, 486, 0, 0, 0,
	488, 489, 490, 0, 0, 491, 492, 678, 0, 493,
	0, 679, 494, 495, 487, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 0, 505, 506, 680, 507, 508,
	509, 681, 510, 511, 512, 682, 513, 683, 514, 515,
	0, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	524, 684, 525, 526, 528, 527, 529, 0, 530, 0,
	531, 532, 533, 0, 0, 0, 0, 0, 534, 536,
	0, 537, 538, 539, 540, 535, 541, 542, 543, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 685, 554, 0, 555, 556, 562, 563, 564, 557,
	558, 565, 566, 567, 568, 569, 0, 571, 572, 570,
	573, 574, 575, 0, 576, 577, 559, 560, 578, 579,
	0, 580, 581, 582, 583, 584, 585, 586, 686, 0,
	587, 0, 588, 589, 590, 591, 593, 561, 594, 599,
	600, 687, 595, 596, 597, 598, 688, 602, 603, 0,
	604, 605, 0, 601, 592, 0, 606, 607, 608, 609,
	610, 611, 612, 613, 0, 614, 689, 690, 691, 692,
	0, 623, 0, 615, 616, 617, 693, 618, 694, 0,
	619, 620, 621, 622, 0, 624, 625, 0, 0, 626,
	627, 628, 630, 631, 629, 632, 0, 633, 0, 0,
	634, 635, 636, 695, 696, 697, 0, 638, 637, 639,
	640, 698, 641, 642, 274, 0, 0, 0, 643, 644,
	699, 645, 646, 647, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 648, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	649, 650, 0, 297, 651, 298, 652, 0, 653, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 654,
	655, 656, 0, 306, 307, 657, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 658, 659, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 355,
	356, 357, 0, 358, 359, 660, 360, 361, 362, 364,
	366, 363, 365, 367, 368, 369, 370, 661, 662, 371,
	0, 0, 0, 0, 0, 0, 0, 372, 373, 374,
	663, 0, 0, 0, 375, 0, 376, 377, 378, 0,
	0, 0, 379, 380, 381, 664, 665, 382, 383, 384,
	385, 386, 387, 388, 389, 390, 0, 391, 666, 0,
	667, 392, 0, 393, 394, 395, 396, 397, 3581, 669,
	670, 483, 0, 398, 399, 0, 400, 401, 402, 403,
	404, 0, 0, 0, 0, 405, 406, 407, 0, 0,
	408, 671, 672, 0, 673, 0, 409, 410, 0, 674,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 675, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 478, 466,
	467, 468, 0, 477, 465, 0, 0, 0, 479, 480,
	481, 0, 676, 482, 677, 484, 485, 0, 0, 486,
	0, 0, 0, 488, 489, 490, 0, 0, 491, 492,
	678, 0, 493, 0, 679, 494, 495, 487, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 0, 505, 506,
	680, 507, 508, 509, 681, 510, 511, 512, 682, 513,
	683, 514, 515, 0, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 524, 684, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 536, 0, 537, 538, 539, 540, 535, 541,
	542, 543, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 685, 554, 0, 555, 556, 562,
	563, 564, 557, 558, 565, 566, 567, 568, 569, 0,
	571, 572, 570, 573, 574, 575, 0, 576, 577, 559,
	560, 578, 579, 0, 580, 581, 582, 583, 584, 585,
	586, 686, 0, 587, 0, 588, 589, 590, 591, 593,
	561, 594, 599, 600, 687, 595, 596, 597, 598, 688,
	602, 603, 0, 604, 605, 0, 601, 592, 0, 606,
	607, 608, 609, 610, 611, 612, 613, 0, 614, 689,
	690, 691, 692, 0, 623, 0, 615, 616, 617, 693,
	618, 694, 0, 619, 620, 621, 622, 0, 624, 625,
	0, 0, 626, 627, 628, 630, 631, 629, 632, 0,
	633, 0, 0, 634, 635, 636, 695, 696, 697, 0,
	638, 637, 639, 640, 698, 641, 642, 274, 0, 0,
	0, 643, 644, 699, 645, 646, 647, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 648,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 649, 650, 0, 297, 651, 298, 652,
	0, 653, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 654, 655, 656, 0, 306, 307, 657, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 658, 659,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	354, 0, 355, 356, 357, 0, 358, 359, 660, 360,
	361, 362, 364, 366, 363, 365, 367, 368, 369, 370,
	661, 662, 371, 0, 0, 0, 0, 0, 0, 0,
	372, 373, 374, 663, 0, 0, 0, 375, 0, 376,
	377, 378, 0, 0, 0, 379, 380, 381, 664, 665,
	382, 383, 384, 385, 386, 387, 388, 389, 390, 0,
	391, 666, 0, 667, 392, 0, 393, 394, 395, 396,
	397, 3533, 669, 670, 483, 0, 398, 399, 0, 400,
	401, 402, 403, 404, 0, 0, 0, 0, 405, 406,
	407, 0, 0, 408, 671, 672, 0, 673, 0, 409,
	410, 0, 674, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 675, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 478, 466, 467, 468, 0, 477, 465, 0, 0,
	0, 479, 480, 481, 0, 676, 482, 677, 484, 485,
	0, 0, 486, 0, 0, 0, 488, 489, 490, 0,
	0, 491, 492, 678, 0, 493, 0, 679, 494, 495,
	487, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	0, 505, 506, 680, 507, 508, 509, 681, 510, 511,
	512, 682, 513, 683, 514, 515, 0, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 524, 684, 525, 526,
	528, 527, 529, 0, 530, 0, 531, 532, 533, 0,
	0, 0, 0, 0, 534, 536, 0, 537, 538, 539,
	540, 535, 541, 542, 543, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 685, 554, 0,
	555, 556, 562, 563, 564, 557, 558, 565, 566, 567,
	568, 569, 0, 571, 572, 570, 573, 574, 575, 0,
	576, 577, 559, 560, 578, 579, 0, 580, 581, 582,
	583, 584, 585, 586, 686, 0, 587, 0, 588, 589,
	590, 591, 593, 561, 594, 599, 600, 687, 595, 596,
	597, 598, 688, 602, 603, 0, 604, 605, 0, 601,
	592, 0, 606, 607, 608, 609, 610, 611, 612, 613,
	0, 614, 689, 690, 691, 692, 0, 623, 0, 615,
	616, 617, 693, 618, 694, 0, 619, 620, 621, 622,
	0, 624, 625, 0, 0, 626, 627, 628, 630, 631,
	629, 632, 0, 633, 0, 0, 634, 635, 636, 695,
	696, 697, 0, 638, 637, 639, 640, 698, 641, 642,
	274, 0, 0, 0, 643, 644, 699, 645, 646, 647,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 648, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 649, 650, 0, 297,
	651, 298, 652, 0, 653, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 654, 655, 656, 0, 306,
	307, 657, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 658, 659, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 354, 0, 355, 356, 357, 0, 358,
	359, 660, 360, 361, 362, 364, 366, 363, 365, 367,
	368, 369, 370, 661, 662, 371, 0, 0, 0, 0,
	0, 0, 0, 372, 373, 374, 663, 0, 0, 0,
	375, 0, 376, 377, 378, 0, 0, 0, 379, 380,
	381, 664, 665, 382, 383, 384, 385, 386, 387, 388,
	389, 390, 0, 391, 666, 0, 667, 392, 0, 393,
	394, 395, 396, 397, 3531, 669, 670, 483, 0, 398,
	399, 0, 400, 401, 402, 403, 404, 0, 0, 0,
	0, 405, 406, 407, 0, 0, 408, 671, 672, 0,
	673, 0, 409, 410, 0, 674, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 675, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 478, 466, 467, 468, 0, 477,
	465, 0, 0, 0, 479, 480, 481, 0, 676, 482,
	677, 484, 485, 0, 0, 486, 0, 0, 0, 488,
	489, 490, 0, 0, 491, 492, 678, 0, 493, 0,
	679, 494, 495, 487, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 0, 505, 506, 680, 507, 508, 509,
	681, 510, 511, 512, 682, 513, 683, 514, 515, 0,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 524,
	684, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 536, 0,
	537, 538, 539, 540, 535, 541, 542, 543, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	685, 554, 0, 555, 556, 562, 563, 564, 557, 558,
	565, 566, 567, 568, 569, 0, 571, 572, 570, 573,
	574, 575, 0, 576, 577, 559, 560, 578, 579, 0,
	580, 581, 582, 583, 584, 585, 586, 686, 0, 587,
	0, 588, 589, 590, 591, 593, 561, 594, 599, 600,
	687, 595, 596, 597, 598, 688, 602, 603, 0, 604,
	605, 0, 601, 592, 0, 606, 607, 608, 609, 610,
	611, 612, 613, 0, 614, 689, 690, 691, 692, 0,
	623, 0, 615, 616, 617, 693, 618, 694, 0, 619,
	620, 621, 622, 0, 624, 625, 0, 0, 626, 627,
	628, 630, 631, 629, 632, 0, 633, 0, 0, 634,
	635, 636, 695, 696, 697, 0, 638, 637, 639, 640,
	698, 641, 642, 274, 0, 0, 0, 643, 644, 699,
	645, 646, 647, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 648, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 649,
	650, 0, 297, 651, 298, 652, 0, 653, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 654, 655,
	656, 0, 306, 307, 657, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 658, 659, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 354, 0, 355, 356,
	357, 0, 358, 359, 660, 360, 361, 362, 364, 366,
	363, 365, 367, 368, 369, 370, 661, 662, 371, 0,
	0, 0, 0, 0, 0, 0, 372, 373, 374, 663,
	0, 0, 0, 375, 0, 376, 377, 378, 0, 0,
	0, 379, 380, 381, 664, 665, 382, 383, 384, 385,
	386, 387, 388, 389, 390, 0, 391, 666, 0, 667,
	392, 0, 393, 394, 395, 396, 397, 3519, 669, 670,
	483, 0, 398, 399, 0, 400, 401, 402, 403, 404,
	0, 0, 0, 0, 405, 406, 407, 0, 0, 408,
	671, 672, 0, 673, 0, 409, 410, 0, 674, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	675, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 478, 466, 467,
	468, 0, 477, 465, 0, 0, 0, 479, 480, 481,
	0, 676, 482, 677, 484, 485, 0, 0, 486, 0,
	0, 0, 488, 489, 490, 0, 0, 491, 492, 678,
	0, 493, 0, 679, 494, 495, 487, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 0, 505, 506, 680,
	507, 508, 509, 681, 510, 511, 512, 682, 513, 683,
	514, 515, 0, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 524, 684, 525, 526, 528, 527, 529, 0,
	530, 0, 531, 532, 533, 0, 0, 0, 0, 0,
	534, 536, 0, 537, 538, 539, 540, 535, 541, 542,
	543, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 685, 554, 0, 555, 556, 562, 563,
	564, 557, 558, 565, 566, 567, 568, 569, 0, 571,
	572, 570, 573, 574, 575, 0, 576, 577, 559, 560,
	578, 579, 0, 580, 581, 582, 583, 584, 585, 586,
	686, 0, 587, 0, 588, 589, 590, 591, 593, 561,
	594, 599, 600, 687, 595, 596, 597, 598, 688, 602,
	603, 0, 604, 605, 0, 601, 592, 0, 606, 607,
	608, 609, 610, 611, 612, 613, 0, 614, 689, 690,
	691, 692, 0, 623, 0, 615, 616, 617, 693, 618,
	694, 0, 619, 620, 621, 622, 0, 624, 625, 0,
	0, 626, 627, 628, 630, 631, 629, 632, 0, 633,
	0, 0, 634, 635, 636, 695, 696, 697, 0, 638,
	637, 639, 640, 698, 641, 642, 274, 0, 0, 0,
	643, 644, 699, 645, 646, 647, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 648, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 649, 650, 0, 297, 651, 298, 652, 0,
	653, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 654, 655, 656, 0, 306, 307, 657, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 658, 659, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 354,
	0, 355, 356, 357, 0, 358, 359, 660, 360, 361,
	362, 364, 366, 363, 365, 367, 368, 369, 370, 661,
	662, 371, 0, 0, 0, 0, 0, 0, 0, 372,
	373, 374, 663, 0, 0, 0, 375, 0, 376, 377,
	378, 0, 0, 0, 379, 380, 381, 664, 665, 382,
	383, 384, 385, 386, 387, 388, 389, 390, 0, 391,
	666, 0, 667, 392, 0, 393, 394, 395, 396, 397,
	3516, 669, 670, 483, 0, 398, 399, 0, 400, 401,
	402, 403, 404, 0, 0, 0, 0, 405, 406, 407,
	0, 0, 408, 671, 672, 0, 673, 0, 409, 410,
	0, 674, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 675, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	478, 466, 467, 468, 0, 477, 465, 0, 0, 0,
	479, 480, 481, 0, 676, 482, 677, 484, 485, 0,
	0, 486, 0, 0, 0, 488, 489, 490, 0, 0,
	491, 492, 678, 0, 493, 0, 679, 494, 495, 487,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 0,
	505, 506, 680, 507, 508, 509, 681, 510, 511, 512,
	682, 513, 683, 514, 515, 0, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 524, 684, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 536, 0, 537, 538, 539, 540,
	535, 541, 542, 543, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 685, 554, 0, 555,
	556, 562, 563, 564, 557, 558, 565, 566, 567, 568,
	569, 0, 571, 572, 570, 573, 574, 575, 0, 576,
	577, 559, 560, 578, 579, 0, 580, 581, 582, 583,
	584, 585, 586, 686, 0, 587, 0, 588, 589, 590,
	591, 593, 561, 594, 599, 600, 687, 595, 596, 597,
	598, 688, 602, 603, 0, 604, 605, 0, 601, 592,
	0, 606, 607, 608, 609, 610, 611, 612, 613, 0,
	614, 689, 690, 691, 692, 0, 623, 0, 615, 616,
	617, 693, 618, 694, 0, 619, 620, 621, 622, 0,
	624, 625, 0, 0, 626, 627, 628, 630, 631, 629,
	632, 0, 633, 0, 0, 634, 635, 636, 695, 696,
	697, 0, 638, 637, 639, 640, 698, 641, 642, 274,
	0, 0, 0, 643, 644, 699, 645, 646, 647, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 648, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 649, 650, 0, 297, 651,
	298, 652, 0, 653, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 654, 655, 656, 0, 306, 307,
	657, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	658, 659, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 357, 0, 358, 359,
	660, 360, 361, 362, 364, 366, 363, 365, 367, 368,
	369, 370, 661, 662, 371, 0, 0, 0, 0, 0,
	0, 0, 372, 373, 374, 663, 0, 0, 0, 375,
	0, 376, 377, 378, 0, 0, 0, 379, 380, 381,
	664, 665, 382, 383, 384, 385, 386, 387, 388, 389,
	390, 0, 391, 666, 0, 667, 392, 0, 393, 394,
	395, 396, 397, 3120, 669, 670, 483, 0, 398, 399,
	0, 400, 401, 402, 403, 404, 0, 0, 0, 0,
	405, 406, 407, 0, 0, 408, 671, 672, 0, 673,
	0, 409, 410, 0, 674, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 675, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 478, 466, 467, 468, 0, 477, 465,
	0, 0, 0, 479, 480, 481, 0, 676, 482, 677,
	484, 485, 0, 0, 486, 0, 0, 0, 488, 489,
	490, 0, 0, 491, 492, 678, 0, 493, 0, 679,
	494, 495, 487, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 0, 505, 506, 680, 507, 508, 509, 681,
	510, 511, 512, 682, 513, 683, 514, 515, 0, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 524, 684,
	525, 526, 528, 527, 529, 0, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 536, 0, 537,
	538, 539, 540, 535, 541, 542, 543, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 685,
	554, 0, 555, 556, 562, 563, 564, 557, 558, 565,
	566, 567, 568, 569, 0, 571, 572, 570, 573, 574,
	575, 0, 576, 577, 559, 560, 578, 579, 0, 580,
	581, 582, 583, 584, 585, 586, 686, 0, 587, 0,
	588, 589, 590, 591, 593, 561, 594, 599, 600, 687,
	595, 596, 597, 598, 688, 602, 603, 0, 604, 605,
	0, 601, 592, 0, 606, 607, 608, 609, 610, 611,
	612, 613, 0, 614, 689, 690, 691, 692, 0, 623,
	0, 615, 616, 617, 693, 618, 694, 0, 619, 620,
	621, 622, 0, 624, 625, 0, 0, 626, 627, 628,
	630, 631, 629, 632, 0, 633, 0, 0, 634, 635,
	636, 695, 696, 697, 0, 638, 637, 639, 640, 698,
	641, 642, 274, 0, 0, 0, 643, 644, 699, 645,
	646, 647, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 648, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 649, 650,
	0, 297, 651, 298, 652, 0, 653, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 654, 655, 656,
	0, 306, 307, 657, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 658, 659, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 354, 0, 355, 356, 357,
	0, 358, 359, 660, 360, 361, 362, 364, 366, 363,
	365, 367, 368, 369, 370, 661, 662, 371, 0, 0,
	0, 0, 0, 0, 0, 372, 373, 374, 663, 0,
	0, 0, 375, 0, 376, 377, 378, 0, 0, 0,
	379, 380, 381, 664, 665, 382, 383, 384, 385, 386,
	387, 388, 389, 390, 0, 391, 666, 0, 667, 392,
	0, 393, 394, 395, 396, 397, 668, 669, 670, 483,
	0, 398, 399, 0, 400, 401, 402, 403, 404, 0,
	0, 0, 0, 405, 406, 407, 0, 0, 408, 671,
	672, 0, 673, 0, 409, 410, 0, 674, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 675,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 478, 466, 467, 468,
	0, 477, 465, 0, 0, 0, 479, 480, 481, 0,
	676, 482, 677, 484, 485, 0, 0, 486, 0, 0,
	0, 488, 489, 490, 0, 0, 491, 492, 678, 0,
	493, 0, 679, 494, 495, 487, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 0, 505, 506, 680, 507,
	508, 509, 681, 510, 511, 512, 682, 513, 683, 514,
	515, 0, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 524, 684, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	536, 0, 537, 538, 539, 540, 535, 541, 542, 543,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 685, 554, 0, 555, 556, 772, 563, 564,
	557, 558, 565, 566, 567, 568, 569, 0, 571, 572,
	570, 573, 574, 575, 0, 576, 577, 559, 560, 578,
	579, 0, 580, 581, 582, 583, 584, 585, 586, 686,
	0, 587, 0, 588, 589, 590, 591, 593, 561, 594,
	599, 600, 687, 595, 596, 597, 598, 688, 602, 603,
	0, 604, 605, 0, 601, 592, 0, 606, 607, 608,
	609, 610, 611, 612, 613, 0, 614, 689, 690, 691,
	692, 0, 623, 0, 615, 616, 617, 693, 618, 694,
	0, 619, 620, 621, 622, 0, 624, 625, 0, 0,
	626, 627, 628, 630, 631, 629, 632, 0, 633, 0,
	0, 634, 635, 636, 695, 696, 697, 0, 638, 637,
	639, 640, 698, 641, 642, 274, 0, 0, 0, 643,
	644, 699, 645, 646, 647, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 648, 0, 2348,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 649, 650, 0, 297, 651, 298, 652, 0, 653,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	654, 655, 656, 0, 306, 307, 657, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 658, 659, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 354, 0,
	355, 356, 357, 0, 358, 359, 660, 360, 361, 362,
	364, 366, 363, 365, 367, 368, 369, 370, 661, 662,
	371, 0, 0, 0, 0, 0, 0, 0, 372, 373,
	374, 663, 0, 0, 0, 375, 0, 376, 377, 378,
	0, 0, 0, 379, 380, 381, 664, 665, 382, 383,
	384, 385, 386, 387, 388, 389, 390, 0, 391, 666,
	0, 667, 392, 0, 393, 394, 395, 396, 397, 668,
	669, 670, 483, 0, 398, 399, 0, 400, 401, 402,
	403, 404, 0, 0, 0, 0, 405, 406, 407, 0,
	0, 408, 671, 672, 0, 673, 0, 409, 410, 0,
	674, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 675, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 478,
	466, 467, 468, 0, 477, 465, 0, 0, 0, 479,
	480, 481, 0, 676, 482, 677, 484, 485, 0, 0,
	486, 0, 0, 0, 488, 489, 490, 0, 0, 491,
	492, 678, 0, 493, 0, 679, 494, 495, 487, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 0, 505,
	506, 680, 507, 508, 509, 681, 510, 511, 512, 682,
	513, 683, 514, 515, 0, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 524, 684, 525, 526, 528, 527,
	529, 0, 530, 0, 531, 532, 533, 0, 0, 0,
	0, 0, 534, 536, 0, 537, 538, 539, 540, 535,
	541, 542, 543, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 685, 554, 0, 555, 556,
	562, 563, 564, 557, 558, 565, 566, 567, 568, 569,
	0, 571, 572, 570, 573, 574, 575, 0, 0, 577,
	559, 560, 578, 579, 0, 580, 581, 582, 583, 584,
	585, 586, 686, 0, 587, 0, 588, 589, 590, 591,
	593, 561, 594, 599, 600, 687, 595, 596, 597, 598,
	688, 602, 603, 0, 604, 605, 0, 601, 592, 0,
	606, 607, 608, 609, 610, 611, 612, 613, 0, 614,
	689, 690, 691, 692, 0, 623, 0, 615, 616, 617,
	693, 618, 694, 0, 619, 620, 621, 622, 0, 624,
	625, 0, 0, 626, 627, 628, 630, 631, 629, 632,
	0, 633, 0, 0, 634, 635, 636, 695, 696, 697,
	0, 638, 637, 639, 640, 698, 641, 642, 274, 0,
	0, 0, 643, 644, 699, 645, 646, 647, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	648, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 649, 650, 0, 297, 651, 298,
	652, 0, 653, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 654, 655, 656, 0, 306, 307, 657,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 658,
	659, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 354, 0, 355, 356, 357, 0, 358, 359, 660,
	360, 361, 362, 364, 366, 363, 365, 367, 368, 369,
	370, 661, 662, 371, 0, 0, 0, 0, 0, 0,
	0, 372, 373, 374, 663, 0, 0, 0, 375, 0,
	376, 377, 378, 0, 0, 0, 379, 380, 381, 664,
	665, 382, 383, 384, 385, 386, 387, 388, 389, 390,
	0, 391, 666, 0, 667, 392, 0, 393, 394, 395,
	396, 397, 1311, 669, 670, 483, 0, 398, 399, 0,
	400, 401, 402, 403, 404, 0, 0, 0, 0, 405,
	406, 407, 0, 0, 408, 671, 672, 0, 673, 0,
	409, 410, 0, 674, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 675, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 478, 466, 467, 468, 0, 477, 465, 0,
	0, 0, 479, 480, 481, 0, 676, 482, 677, 484,
	485, 0, 0, 486, 0, 0, 0, 488, 489, 490,
	0, 0, 491, 492, 678, 0, 493, 0, 679, 494,
	495, 487, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 0, 505, 506, 680, 507, 508, 509, 681, 510,
	511, 512, 682, 513, 683, 514, 515, 0, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 524, 684, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 536, 0, 537, 538,
	539, 540, 535, 541, 542, 543, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 685, 554,
	0, 555, 556, 562, 563, 564, 557, 558, 565, 566,
	567, 568, 569, 0, 571, 572, 570, 573, 574, 575,
	0, 576, 577, 559, 560, 578, 579, 0, 580, 581,
	582, 583, 584, 585, 586, 686, 0, 587, 0, 588,
	589, 590, 591, 593, 561, 594, 599, 600, 687, 595,
	596, 597, 598, 688, 602, 603, 0, 604, 605, 0,
	601, 592, 0, 606, 607, 608, 609, 610, 611, 612,
	613, 0, 614, 689, 690, 691, 692, 0, 623, 0,
	615, 616, 617, 693, 618, 694, 0, 619, 620, 621,
	622, 0, 624, 625, 0, 0, 626, 627, 628, 630,
	631, 629, 632, 0, 633, 0, 0, 634, 635, 636,
	695, 696, 697, 0, 638, 637, 639, 640, 698, 641,
	642, 274, 0, 0, 0, 643, 644, 699, 645, 646,
	647, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 648, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 649, 650, 0,
	297, 651, 298, 652, 0, 653, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 654, 655, 656, 0,
	306, 307, 657, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 658, 659, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 354, 0, 355, 356, 357, 0,
	358, 359, 660, 360, 361, 362, 364, 366, 363, 365,
	367, 368, 369, 370, 661, 662, 371, 0, 0, 0,
	0, 0, 0, 0, 372, 373, 374, 663, 0, 0,
	0, 375, 0, 376, 377, 378, 0, 0, 0, 379,
	380, 381, 664, 665, 382, 383, 384, 385, 386, 387,
	388, 389, 390, 0, 391, 666, 0, 667, 392, 0,
	393, 394, 395, 396, 397, 668, 669, 670, 483, 0,
	398, 399, 0, 400, 401, 402, 403, 404, 0, 0,
	0, 0, 405, 406, 407, 0, 0, 408, 671, 672,
	0, 673, 0, 409, 410, 0, 674, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 675, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 478, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 479, 480, 481, 0, 676,
	482, 677, 484, 485, 0, 0, 486, 0, 0, 0,
	488, 489, 490, 0, 0, 491, 492, 678, 0, 493,
	0, 679, 494, 495, 487, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 0, 505, 506, 680, 507, 508,
	509, 681, 510, 511, 512, 682, 513, 683, 514, 515,
	0, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	524, 684, 525, 526, 1240, 527, 529, 0, 530, 0,
	531, 532, 533, 0, 0, 0, 0, 0, 534, 536,
	0, 537, 538, 539, 540, 535, 541, 542, 543, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 685, 554, 0, 555, 556, 562, 563, 564, 557,
	558, 565, 566, 567, 568, 569, 0, 571, 572, 570,
	573, 574, 575, 0, 576, 577, 559, 560, 578, 579,
	0, 580, 581, 582, 583, 584, 585, 586, 686, 0,
	587, 0, 588, 589, 590, 591, 593, 561, 594, 599,
	600, 687, 595, 596, 597, 598, 688, 602, 603, 0,
	604, 605, 0, 601, 592, 0, 606, 607, 608, 609,
	610, 611, 612, 613, 0, 614, 689, 690, 691, 692,
	0, 623, 0, 615, 616, 617, 693, 618, 694, 0,
	619, 620, 621, 622, 0, 624, 625, 0, 0, 626,
	627, 628, 630, 631, 629, 632, 0, 633, 0, 0,
	634, 635, 636, 695, 696, 697, 0, 638, 637, 639,
	640, 698, 641, 642, 274, 0, 0, 0, 643, 644,
	699, 645, 646, 647, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 648, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	649, 650, 0, 297, 651, 298, 652, 0, 653, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 654,
	655, 656, 0, 306, 307, 657, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 658, 659, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 355,
	356, 357, 0, 358, 359, 660, 360, 361, 362, 364,
	366, 363, 365, 367, 368, 369, 370, 661, 662, 371,
	0, 0, 0, 0, 0, 0, 0, 372, 373, 374,
	663, 0, 0, 0, 375, 0, 376, 377, 378, 0,
	0, 0, 379, 380, 381, 664, 665, 382, 383, 384,
	385, 386, 387, 388, 389, 390, 0, 391, 666, 0,
	667, 0, 0, 393, 394, 395, 396, 397, 668, 669,
	670, 483, 0, 398, 399, 0, 400, 401, 402, 403,
	404, 0, 0, 0, 0, 405, 406, 407, 0, 0,
	408, 671, 672, 0, 673, 0, 409, 410, 0, 674,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 675, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 478, 466,
	467, 468, 0, 477, 465, 0, 0, 0, 479, 480,
	481, 0, 676, 482, 677, 484, 485, 0, 0, 486,
	0, 0, 0, 488, 489, 490, 0, 0, 491, 492,
	678, 0, 493, 0, 679, 494, 495, 487, 496, 497,
	0, 499, 500, 501, 502, 503, 504, 0, 505, 506,
	680, 507, 508, 509, 681, 510, 511, 512, 682, 513,
	683, 514, 515, 0, 516, 517, 0, 518, 519, 520,
	521, 0, 523, 524, 684, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 536, 0, 537, 538, 539, 540, 535, 541,
	542, 543, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 685, 0, 0, 555, 556, 562,
	563, 564, 557, 558, 565, 566, 567, 568, 569, 0,
	571, 572, 570, 573, 574, 575, 0, 576, 577, 559,
	560, 578, 579, 0, 580, 581, 582, 583, 584, 585,
	586, 686, 0, 587, 0, 588, 589, 590, 591, 593,
	561, 594, 599, 600, 687, 595, 596, 597, 598, 688,
	602, 603, 0, 604, 605, 0, 601, 592, 0, 606,
	607, 608, 609, 610, 611, 612, 613, 0, 614, 689,
	690, 691, 692, 0, 623, 0, 615, 616, 617, 693,
	618, 694, 0, 619, 620, 621, 622, 0, 624, 625,
	0, 0, 626, 627, 628, 630, 631, 629, 632, 0,
	633, 0, 0, 634, 635, 636, 695, 696, 697, 0,
	638, 637, 639, 640, 698, 641, 642, 1619, 0, 1356,
	0, 643, 644, 699, 645, 646, 647, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 0, 0, 0, 297, 0,
	298, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 0, 0, 0, 0, 306, 307,
	0, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 1358, 333, 334, 335, 336, 337, 0, 338, 340,
	0, 0, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 357, 0, 358, 359,
	0, 360, 361, 362, 364, 366, 363, 365, 367, 368,
	369, 370, 0, 0, 371, 0, 0, 0, 0, 0,
	0, 0, 372, 373, 374, 0, 0, 0, 0, 375,
	0, 376, 377, 378, 0, 0, 0, 379, 380, 381,
	0, 0, 382, 383, 384, 385, 386, 387, 388, 389,
	390, 0, 391, 0, 0, 0, 392, 0, 393, 394,
	395, 396, 397, 1618, 0, 0, 483, 0, 398, 399,
	0, 400, 401, 402, 403, 404, 0, 0, 0, 0,
	405, 406, 407, 0, 0, 408, 0, 0, 0, 0,
	0, 409, 410, 0, 0, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 0, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 478, 466, 467, 468, 0, 477, 465,
	0, 0, 0, 479, 480, 481, 0, 0, 482, 0,
	484, 485, 0, 0, 486, 0, 0, 0, 488, 489,
	490, 0, 0, 491, 492, 0, 0, 493, 0, 0,
	494, 495, 487, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 0, 505, 506, 0, 507, 508, 509, 0,
	510, 511, 512, 0, 513, 0, 514, 515, 0, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 524, 0,
	525, 526, 528, 527, 529, 0, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 536, 0, 537,
	538, 539, 540, 535, 541, 542, 543, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 0,
	554, 0, 555, 556, 562, 563, 564, 557, 558, 565,
	566, 567, 568, 569, 0, 571, 572, 570, 573, 574,
	575, 1359, 576, 577, 559, 560, 578, 579, 0, 580,
	581, 582, 583, 584, 585, 586, 0, 0, 587, 0,
	588, 589, 590, 591, 593, 561, 594, 599, 600, 0,
	595, 596, 597, 598, 0, 602, 603, 0, 604, 605,
	0, 601, 592, 0, 606, 607, 608, 609, 610, 611,
	612, 613, 0, 614, 0, 0, 0, 0, 0, 623,
	0, 615, 616, 617, 0, 618, 0, 0, 619, 620,
	621, 622, 0, 624, 625, 0, 0, 626, 627, 628,
	630, 631, 629, 632, 0, 633, 0, 0, 634, 635,
	636, 0, 0, 0, 0, 638, 637, 639, 640, 0,
	641, 642, 1533, 0, 1356, 0, 643, 644, 0, 645,
	646, 647, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	0, 0, 0, 297, 0, 298, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 0,
	0, 0, 0, 306, 307, 0, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 1358, 333, 334, 335,
	336, 337, 0, 338, 340, 0, 0, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 355,
	356, 357, 0, 358, 359, 0, 360, 361, 362, 364,
	366, 363, 365, 367, 368, 369, 370, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 0, 372, 373, 374,
	0, 0, 0, 0, 375, 0, 376, 377, 378, 0,
	0, 0, 379, 380, 381, 0, 0, 382, 383, 384,
	385, 386, 387, 388, 389, 390, 0, 391, 0, 0,
	0, 392, 0, 393, 394, 395, 396, 397, 1532, 0,
	0, 483, 0, 398, 399, 0, 400, 401, 402, 403,
	404, 0, 0, 0, 0, 405, 406, 407, 0, 0,
	408, 0, 0, 0, 0, 0, 409, 410, 0, 0,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 0, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 478, 466,
	467, 468, 0, 477, 465, 0, 0, 0, 479, 480,
	481, 0, 0, 482, 0, 484, 485, 0, 0, 486,
	0, 0, 0, 488, 489, 490, 0, 0, 491, 492,
	0, 0, 493, 0, 0, 494, 495, 487, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 0, 505, 506,
	0, 507, 508, 509, 0, 510, 511, 512, 0, 513,
	0, 514, 515, 0, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 524, 0, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 536, 0, 537, 538, 539, 540, 535, 541,
	542, 543, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 0, 554, 0, 555, 556, 562,
	563, 564, 557, 558, 565, 566, 567, 568, 569, 0,
	571, 572, 570, 573, 574, 575, 1359, 576, 577, 559,
	560, 578, 579, 0, 580, 581, 582, 583, 584, 585,
	586, 0, 0, 587, 0, 588, 589, 590, 591, 593,
	561, 594, 599, 600, 0, 595, 596, 597, 598, 0,
	602, 603, 0, 604, 605, 0, 601, 592, 0, 606,
	607, 608, 609, 610, 611, 612, 613, 0, 614, 0,
	0, 0, 0, 0, 623, 0, 615, 616, 617, 0,
	618, 0, 0, 619, 620, 621, 622, 0, 624, 625,
	0, 0, 626, 627, 628, 630, 631, 629, 632, 0,
	633, 0, 0, 634, 635, 636, 0, 0, 0, 0,
	638, 637, 639, 640, 0, 641, 642, 1354, 0, 1356,
	0, 643, 644, 0, 645, 646, 647, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 0, 0, 0, 297, 0,
	298, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 0, 0, 0, 0, 306, 307,
	0, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 1358, 333, 334, 335, 336, 337, 0, 338, 340,
	0, 0, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 357, 0, 358, 359,
	0, 360, 361, 362, 364, 366, 363, 365, 367, 368,
	369, 370, 0, 0, 371, 0, 0, 0, 0, 0,
	0, 0, 372, 373, 374, 0, 0, 0, 0, 375,
	0, 376, 377, 378, 0, 0, 0, 379, 380, 381,
	0, 0, 382, 383, 384, 385, 386, 387, 388, 389,
	390, 0, 391, 0, 0, 0, 392, 0, 393, 394,
	395, 396, 397, 1353, 0, 0, 483, 0, 398, 399,
	0, 400, 401, 402, 403, 404, 0, 0, 0, 0,
	405, 406, 407, 0, 0, 408, 0, 0, 0, 0,
	0, 409, 410, 0, 0, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 0, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 478, 466, 467, 468, 0, 477, 465,
	0, 0, 0, 479, 480, 481, 0, 0, 482, 0,
	484, 485, 0, 0, 486, 0, 0, 0, 488, 489,
	490, 0, 0, 491, 492, 0, 0, 493, 0, 0,
	494, 495, 487, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 0, 505, 506, 0, 507, 508, 509, 0,
	510, 511, 512, 0, 513, 0, 514, 515, 0, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 524, 0,
	525, 526, 528, 527, 529, 0, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 536, 0, 537,
	538, 539, 540, 535, 541, 542, 543, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 0,
	554, 0, 555, 556, 562, 563, 564, 557, 558, 565,
	566, 567, 568, 569, 0, 571, 572, 570, 573, 574,
	575, 1359, 576, 577, 559, 560, 578, 579, 0, 580,
	581, 582, 583, 584, 585, 586, 0, 0, 587, 0,
	588, 589, 590, 591, 593, 561, 594, 599, 600, 0,
	595, 596, 597, 598, 0, 602, 603, 0, 604, 605,
	0, 601, 592, 0, 606, 607, 608, 609, 610, 611,
	612, 613, 0, 614, 0, 0, 0, 0, 0, 623,
	0, 615, 616, 617, 0, 618, 0, 0, 619, 620,
	621, 622, 0, 624, 625, 0, 0, 626, 627, 628,
	630, 631, 629, 632, 0, 633, 0, 0, 634, 635,
	636, 0, 0, 0, 0, 638, 637, 639, 640, 0,
	641, 642, 2130, 0, 1356, 0, 643, 644, 0, 645,
	646, 647, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	0, 0, 0, 297, 0, 298, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 0,
	0, 0, 0, 306, 307, 0, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 1358, 333, 334, 335,
	336, 337, 0, 338, 340, 0, 0, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 354, 0, 355,
	356, 357, 0, 358, 359, 0, 360, 361, 362, 364,
	366, 363, 365, 367, 368, 369, 370, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 0, 372, 373, 374,
	0, 0, 0, 0, 375, 0, 376, 377, 378, 0,
	0, 0, 379, 380, 381, 0, 0, 382, 383, 384,
	385, 386, 387, 388, 389, 390, 0, 391, 0, 0,
	0, 392, 0, 393, 394, 395, 396, 397, 0, 0,
	0, 483, 0, 398, 399, 0, 400, 401, 402, 403,
	404, 0, 0, 0, 0, 405, 406, 407, 0, 0,
	408, 0, 0, 0, 0, 0, 409, 410, 0, 0,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 0, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 478, 466,
	467, 468, 0, 477, 465, 0, 0, 0, 479, 480,
	481, 0, 0, 482, 0, 484, 485, 0, 0, 486,
	0, 0, 0, 488, 489, 490, 0, 0, 491, 492,
	0, 0, 493, 0, 0, 494, 495, 487, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 0, 505, 506,
	0, 507, 508, 509, 0, 510, 511, 512, 0, 513,
	0, 514, 515, 0, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 524, 0, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 536, 0, 537, 538, 539, 540, 535, 541,
	542, 543, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 0, 554, 0, 555, 556, 562,
	563, 564, 557, 558, 565, 566, 567, 568, 569, 0,
	571, 572, 570, 573, 574, 575, 1359, 576, 577, 559,
	560, 578, 579, 0, 580, 581, 582, 583, 584, 585,
	586, 0, 0, 587, 0, 588, 589, 590, 591, 593,
	561, 594, 599, 600, 0, 595, 596, 597, 598, 0,
	602, 603, 0, 604, 605, 0, 601, 592, 0, 606,
	607, 608, 609, 610, 611, 612, 613, 0, 614, 0,
	0, 0, 0, 0, 623, 0, 615, 616, 617, 0,
	618, 0, 0, 619, 620, 621, 622, 0, 624, 625,
	0, 0, 626, 627, 628, 630, 631, 629, 632, 0,
	633, 0, 0, 634, 635, 636, 0, 0, 0, 0,
	638, 637, 639, 640, 0, 641, 642, 2097, 0, 1356,
	0, 643, 644, 0, 645, 646, 647, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 0, 0, 0, 297, 0,
	298, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 0, 0, 0, 0, 306, 307,
	0, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 1358, 333, 334, 335, 336, 337, 0, 338, 340,
	0, 0, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 357, 0, 358, 359,
	0, 360, 361, 362, 364, 366, 363, 365, 367, 368,
	369, 370, 0, 0, 371, 0, 0, 0, 0, 0,
	0, 0, 372, 373, 374, 0, 0, 0, 0, 375,
	0, 376, 377, 378, 0, 0, 0, 379, 380, 381,
	0, 0, 382, 383, 384, 385, 386, 387, 388, 389,
	390, 0, 391, 0, 0, 0, 392, 0, 393, 394,
	395, 396, 397, 0, 0, 0, 483, 0, 398, 399,
	0, 400, 401, 402, 403, 404, 0, 0, 0, 0,
	405, 406, 407, 0, 0, 408, 0, 0, 0, 0,
	0, 409, 410, 0, 0, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 0, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 478, 466, 467, 468, 0, 477, 465,
	0, 0, 0, 479, 480, 481, 0, 0, 482, 0,
	484, 485, 0, 0, 486, 0, 0, 0, 488, 489,
	490, 0, 0, 491, 492, 0, 0, 493, 0, 0,
	494, 495, 487, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 0, 505, 506, 0, 507, 508, 509, 0,
	510, 511, 512, 0, 513, 0, 514, 515, 0, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 524, 0,
	525, 526, 528, 527, 529, 0, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 536, 0, 537,
	538, 539, 540, 535, 541, 542, 543, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 0,
	554, 0, 555, 556, 562, 563, 564, 557, 558, 565,
	566, 567, 568, 569, 0, 571, 572, 570, 573, 574,
	575, 1359, 576, 577, 559, 560, 578, 579, 0, 580,
	581, 582, 583, 584, 585, 586, 0, 0, 587, 0,
	588, 589, 590, 591, 593, 561, 594, 599, 600, 0,
	595, 596, 597, 598, 0, 602, 603, 0, 604, 605,
	0, 601, 592, 0, 606, 607, 608, 609, 610, 611,
	612, 613, 0, 614, 0, 0, 0, 0, 0, 623,
	0, 615, 616, 617, 0, 618, 0, 0, 619, 620,
	621, 622, 0, 624, 625, 0, 0, 626, 627, 628,
	630, 631, 629, 632, 0, 633, 0, 0, 634, 635,
	636, 0, 0, 0, 0, 638, 637, 639, 640, 1356,
	641, 642, 0, 0, 0, 0, 643, 644, 0, 645,
	646, 647, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 0, 0, 0, 297, 0,
	298, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 0, 0, 0, 0, 306, 307,
	0, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 1358, 333, 334, 335, 336, 337, 0, 338, 340,
	0, 0, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 354, 0, 355, 356, 357, 0, 358, 359,
	0, 360, 361, 362, 364, 366, 363, 365, 367, 368,
	369, 370, 0, 0, 371, 0, 0, 0, 0, 0,
	0, 0, 372, 373, 374, 0, 0, 0, 0, 375,
	0, 376, 377, 378, 0, 0, 0, 379, 380, 381,
	0, 0, 382, 383, 384, 385, 386, 387, 388, 389,
	390, 0, 391, 0, 0, 0, 392, 0, 393, 394,
	395, 396, 397, 0, 0, 0, 483, 0, 398, 399,
	0, 400, 401, 402, 403, 404, 0, 0, 0, 0,
	405, 406, 407, 0, 0, 408, 0, 0, 0, 0,
	0, 409, 410, 0, 0, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 0, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 478, 466, 467, 468, 0, 477, 465,
	0, 0, 0, 479, 480, 481, 0, 0, 482, 0,
	484, 485, 0, 0, 486, 0, 0, 0, 488, 489,
	490, 0, 0, 491, 492, 0, 0, 493, 0, 0,
	494, 495, 487, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 0, 505, 506, 0, 507, 508, 509, 0,
	510, 511, 512, 0, 513, 0, 514, 515, 0, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 524, 0,
	525, 526, 528, 527, 529, 0, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 536, 0, 537,
	538, 539, 540, 535, 541, 542, 543, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 0,
	554, 0, 555, 556, 562, 563, 564, 557, 558, 565,
	566, 567, 568, 569, 0, 571, 572, 570, 573, 574,
	575, 1359, 576, 577, 559, 560, 578, 579, 0, 580,
	581, 582, 583, 584, 585, 586, 0, 0, 587, 0,
	588, 589, 590, 591, 593, 561, 594, 599, 600, 0,
	595, 596, 597, 598, 0, 602, 603, 0, 604, 605,
	0, 601, 592, 0, 606, 607, 608, 609, 610, 611,
	612, 613, 0, 614, 0, 0, 0, 0, 0, 623,
	0, 615, 616, 617, 0, 618, 0, 0, 619, 620,
	621, 622, 0, 624, 625, 0, 0, 626, 627, 628,
	630, 631, 629, 632, 0, 633, 0, 0, 634, 635,
	636, 0, 0, 0, 0, 638, 637, 639, 640, 0,
	641, 642, 0, 0, 0, 0, 643, 644, 0, 645,
	646, 647, 1831, 1832, 0, 1864, 1865, 1866, 1875, 1876,
	1877, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1868, 1862, 0, 0, 0, 0,
	0, 0, 1834, 0, 0, 0, 0, 0, 0, 1831,
	1832, 1881, 1864, 1865, 1866, 1875, 1876, 1877, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1887, 0,
	0, 1868, 1862, 0, 0, 0, 0, 1833, 0, 1834,
	0, 0, 0, 0, 0, 0, 0, 1853, 1881, 0,
	0, 0, 0, 0, 0, 0, 1850, 0, 0, 0,
	0, 0, 0, 0, 0, 1887, 0, 0, 0, 0,
	0, 0, 0, 0, 1833, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1853, 0, 0, 0, 0, 0,
	0, 0, 0, 1850, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1856, 1857, 1858, 1859, 0, 0,
	0, 0, 0, 0, 1839, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1856, 1857, 1858, 1859, 0, 0, 0, 0, 0,
	0, 1839, 0, 1872, 0, 0, 1882, 0, 0, 0,
	0, 0, 0, 1861, 1863, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1878,
	0, 1879, 0, 0, 0, 0, 0, 0, 1848, 1849,
	1872, 0, 0, 1882, 0, 0, 0, 0, 0, 0,
	1861, 1863, 0, 0, 0, 0, 1870, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1878, 0, 1879, 0,
	0, 1854, 0, 0, 0, 1848, 1849, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1870, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1854, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1880, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1869, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1884, 0,
	0, 0, 0, 0, 0, 1880, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1869, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1884, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1860, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1855, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1860, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1873, 0, 0, 0, 0, 0,
	0, 0, 1831, 1832, 1855, 1864, 1865, 1866, 1875, 1876,
	1877, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1868, 1862, 1886, 0, 0, 0,
	0, 1873, 1834, 0, 0, 0, 0, 0, 0, 0,
	0, 1881, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1887, 0,
	0, 0, 0, 1886, 0, 0, 0, 1833, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1853, 0, 0,
	0, 0, 0, 0, 0, 0, 1850, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1871, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1845, 1846,
	1852, 1874, 1851, 1847, 0, 1844, 1842, 1843, 1835, 1836,
	1837, 1838, 1840, 1841, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3327, 0, 1871, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1845, 1846, 1852, 1874, 1851,
	1847, 0, 1844, 1842, 1843, 1835, 1836, 1837, 1838, 1840,
	1841, 0, 0, 0, 1856, 1857, 1858, 1859, 0, 0,
	3324, 0, 1831, 1832, 1839, 1864, 1865, 1866, 1875, 1876,
	1877, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1868, 1862, 0, 0, 0, 0,
	0, 0, 1834, 0, 0, 0, 0, 0, 0, 0,
	0, 1881, 0, 1872, 0, 0, 1882, 0, 0, 0,
	0, 0, 0, 1861, 1863, 0, 0, 0, 1887, 0,
	0, 0, 0, 0, 0, 0, 0, 1833, 0, 1878,
	0, 1879, 0, 0, 0, 0, 0, 1853, 1848, 1849,
	0, 0, 0, 0, 0, 0, 1850, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1870, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1854, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1880, 0,
	0, 0, 0, 0, 1856, 1857, 1858, 1859, 0, 0,
	0, 0, 0, 0, 1839, 0, 0, 1869, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1884, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1872, 0, 0, 1882, 0, 0, 0,
	0, 0, 0, 1861, 1863, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1878,
	0, 1879, 0, 0, 1860, 0, 0, 0, 1848, 1849,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1870, 1855, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1831,
	1832, 1854, 1864, 1865, 1866, 1875, 1876, 1877, 0, 0,
	0, 0, 0, 0, 1873, 0, 0, 0, 0, 0,
	0, 1868, 1862, 0, 0, 0, 0, 0, 0, 1834,
	0, 0, 0, 0, 0, 0, 0, 0, 1881, 0,
	0, 0, 0, 0, 0, 0, 1886, 0, 1880, 0,
	0, 0, 0, 0, 0, 1887, 0, 0, 0, 0,
	0, 0, 0, 0, 1833, 0, 0, 1869, 0, 0,
	0, 0, 0, 0, 1853, 0, 0, 0, 1884, 0,
	0, 0, 0, 1850, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1871, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1845, 1846,
	1852, 1874, 1851, 1847, 1860, 1844, 1842, 1843, 1835, 1836,
	1837, 1838, 1840, 1841, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3323, 0, 0, 0, 1855, 0, 0,
	0, 1856, 1857, 1858, 1859, 0, 0, 0, 0, 1831,
	1832, 1839, 1864, 1865, 1866, 1875, 1876, 1877, 0, 0,
	0, 0, 0, 0, 1873, 0, 0, 0, 0, 0,
	0, 1868, 1862, 0, 0, 0, 0, 0, 0, 1834,
	0, 0, 0, 0, 0, 0, 0, 0, 1881, 0,
	1872, 0, 0, 1882, 0, 0, 1886, 0, 0, 0,
	1861, 1863, 0, 0, 0, 1887, 0, 0, 0, 0,
	0, 0, 0, 0, 1833, 0, 1878, 0, 1879, 0,
	0, 0, 0, 0, 1853, 1848, 1849, 0, 0, 0,
	0, 0, 0, 1850, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1870, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1854, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1871, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1845, 1846,
	1852, 1874, 1851, 1847, 0, 1844, 1842, 1843, 1835, 1836,
	1837, 1838, 1840, 1841, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3322, 0, 1880, 0, 0, 0, 0,
	0, 1856, 1857, 1858, 1859, 0, 0, 0, 0, 0,
	0, 1839, 0, 0, 1869, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1884, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1872, 0, 0, 1882, 0, 0, 0, 0, 0, 0,
	1861, 1863, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1878, 0, 1879, 0,
	0, 1860, 0, 0, 0, 1848, 1849, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1870, 1855, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1831, 1832, 1854, 1864,
	1865, 1866, 1875, 1876, 1877, 0, 0, 0, 0, 0,
	0, 1873, 0, 0, 0, 0, 0, 0, 1868, 1862,
	0, 0, 0, 0, 0, 0, 1834, 0, 0, 0,
	0, 0, 0, 0, 0, 1881, 0, 0, 0, 0,
	0, 0, 0, 1886, 0, 1880, 0, 0, 0, 0,
	0, 0, 1887, 0, 0, 0, 0, 0, 0, 0,
	0, 1833, 0, 0, 1869, 0, 0, 0, 0, 0,
	0, 1853, 0, 0, 0, 1884, 0, 0, 0, 0,
	1850, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1871, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1845, 1846, 1852, 1874, 1851,
	1847, 1860, 1844, 1842, 1843, 1835, 1836, 1837, 1838, 1840,
	1841, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2642, 0, 0, 0, 1855, 0, 0, 0, 1856, 1857,
	1858, 1859, 0, 0, 0, 0, 1831, 1832, 1839, 1864,
	1865, 1866, 1875, 1876, 1877, 0, 0, 0, 0, 0,
	0, 1873, 0, 0, 0, 0, 0, 0, 1868, 1862,
	0, 0, 0, 0, 0, 0, 1834, 0, 0, 0,
	0, 0, 0, 0, 0, 1881, 0, 1872, 0, 0,
	1882, 0, 0, 1886, 0, 0, 0, 1861, 1863, 0,
	0, 0, 1887, 0, 0, 0, 0, 0, 0, 0,
	0, 1833, 0, 1878, 0, 1879, 0, 0, 0, 0,
	0, 1853, 1848, 1849, 0, 0, 0, 0, 0, 0,
	1850, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1870, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1854, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1871, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1845, 1846, 1852, 1874, 1851,
	1847, 0, 1844, 1842, 1843, 1835, 1836, 1837, 1838, 1840,
	1841, 0, 0, 0, 0, 0, 4790, 0, 0, 0,
	0, 0, 1880, 0, 0, 0, 0, 0, 1856, 1857,
	1858, 1859, 0, 0, 0, 0, 0, 0, 1839, 0,
	0, 1869, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1884, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1872, 0, 0,
	1882, 0, 0, 0, 0, 0, 0, 1861, 1863, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1878, 0, 1879, 0, 0, 1860, 0,
	0, 0, 1848, 1849, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1870, 1855, 1831, 1832, 0, 1864, 1865, 1866, 1875, 1876,
	1877, 0, 0, 0, 0, 1854, 0, 0, 0, 0,
	0, 0, 0, 0, 1868, 1862, 0, 0, 1873, 0,
	0, 0, 1834, 0, 0, 0, 0, 0, 0, 0,
	0, 1881, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1887, 0,
	1886, 0, 1880, 0, 0, 0, 0, 1833, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1853, 0, 0,
	0, 1869, 0, 0, 0, 0, 1850, 0, 0, 0,
	0, 0, 1884, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1871, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1845, 1846, 1852, 1874, 1851, 1847, 1860, 1844,
	1842, 1843, 1835, 1836, 1837, 1838, 1840, 1841, 0, 0,
	0, 0, 0, 4786, 1856, 1857, 1858, 1859, 0, 0,
	0, 1855, 1831, 1832, 1839, 1864, 1865, 1866, 1875, 1876,
	1877, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1868, 1862, 0, 0, 1873, 0,
	0, 0, 1834, 0, 0, 0, 0, 0, 0, 0,
	0, 1881, 0, 1872, 0, 0, 1882, 0, 0, 0,
	0, 0, 0, 1861, 1863, 0, 0, 0, 1887, 0,
	1886, 0, 0, 0, 0, 0, 0, 1833, 0, 1878,
	0, 1879, 0, 0, 0, 0, 0, 1853, 1848, 1849,
	0, 0, 0, 0, 0, 0, 1850, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1870, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1854, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1871, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1845, 1846, 1852, 1874, 1851, 1847, 0, 1844,
	1842, 1843, 1835, 1836, 1837, 1838, 1840, 1841, 1880, 0,
	0, 0, 0, 4690, 1856, 1857, 1858, 1859, 0, 0,
	0, 0, 0, 0, 1839, 0, 0, 1869, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1884, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1872, 0, 0, 1882, 0, 0, 0,
	0, 0, 0, 1861, 1863, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1878,
	0, 1879, 0, 0, 1860, 0, 0, 0, 1848, 1849,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1870, 1855, 1831, 1832,
	0, 1864, 1865, 1866, 1875, 1876, 1877, 0, 0, 0,
	0, 1854, 0, 0, 0, 0, 0, 0, 0, 0,
	1868, 1862, 0, 0, 1873, 0, 0, 0, 1834, 0,
	0, 0, 0, 0, 0, 0, 0, 1881, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1887, 0, 1886, 0, 1880, 0,
	0, 0, 0, 1833, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1853, 0, 0, 0, 1869, 0, 0,
	0, 0, 1850, 0, 0, 0, 0, 0, 1884, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1871, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1845, 1846,
	1852, 1874, 1851, 1847, 1860, 1844, 1842, 1843, 1835, 1836,
	1837, 1838, 1840, 1841, 0, 0, 0, 0, 0, 4642,
	1856, 1857, 1858, 1859, 0, 0, 0, 1855, 1831, 1832,
	1839, 1864, 1865, 1866, 1875, 1876, 1877, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1868, 1862, 0, 0, 1873, 0, 0, 0, 1834, 0,
	0, 0, 0, 0, 0, 0, 0, 1881, 0, 1872,
	0, 0, 1882, 0, 0, 0, 0, 0, 0, 1861,
	1863, 0, 0, 0, 1887, 0, 1886, 0, 0, 0,
	0, 0, 0, 1833, 0, 1878, 0, 1879, 0, 0,
	0, 0, 0, 1853, 1848, 1849, 0, 0, 0, 0,
	0, 0, 1850, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1870, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1854, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1871, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1845, 1846,
	1852, 1874, 1851, 1847, 0, 1844, 1842, 1843, 1835, 1836,
	1837, 1838, 1840, 1841, 1880, 0, 0, 0, 0, 4641,
	1856, 1857, 1858, 1859, 0, 0, 0, 0, 0, 0,
	1839, 0, 0, 1869, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1884, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1872,
	0, 0, 1882, 0, 0, 0, 0, 0, 0, 1861,
	1863, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1878, 0, 1879, 0, 0,
	1860, 0, 0, 0, 1848, 1849, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1870, 1855, 1831, 1832, 0, 1864, 1865, 1866,
	1875, 1876, 1877, 0, 0, 0, 0, 1854, 0, 0,
	0, 0, 0, 0, 0, 0, 1868, 1862, 0, 0,
	1873, 0, 0, 0, 1834, 0, 0, 0, 0, 0,
	0, 0, 0, 1881, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1887, 0, 1886, 0, 1880, 0, 0, 0, 0, 1833,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1853,
	0, 0, 0, 1869, 0, 0, 0, 0, 1850, 0,
	0, 0, 0, 0, 1884, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1871, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1845, 1846, 1852, 1874, 1851, 1847,
	1860, 1844, 1842, 1843, 1835, 1836, 1837, 1838, 1840, 1841,
	0, 0, 0, 0, 0, 4454, 1856, 1857, 1858, 1859,
	0, 0, 0, 1855, 1831, 1832, 1839, 1864, 1865, 1866,
	1875, 1876, 1877, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1868, 1862, 0, 0,
	1873, 0, 0, 0, 1834, 0, 0, 0, 0, 0,
	0, 0, 0, 1881, 0, 1872, 0, 0, 1882, 0,
	0, 0, 0, 0, 0, 1861, 1863, 0, 0, 0,
	1887, 0, 1886, 0, 0, 0, 0, 0, 0, 1833,
	0, 1878, 0, 1879, 0, 0, 0, 0, 0, 1853,
	1848, 1849, 0, 0, 0, 0, 0, 0, 1850, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1870, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1854, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1871, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1845, 1846, 1852, 1874, 1851, 1847,
	0, 1844, 1842, 1843, 1835, 1836, 1837, 1838, 1840, 1841,
	1880, 0, 0, 0, 0, 4283, 1856, 1857, 1858, 1859,
	0, 0, 0, 0, 0, 0, 1839, 0, 0, 1869,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1884, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1872, 0, 0, 1882, 0,
	0, 0, 0, 0, 0, 1861, 1863, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1878, 0, 1879, 0, 0, 1860, 0, 0, 0,
	1848, 1849, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1870, 1855,
	1831, 1832, 0, 1864, 1865, 1866, 1875, 1876, 1877, 0,
	0, 0, 0, 1854, 0, 0, 0, 0, 0, 0,
	0, 0, 1868, 1862, 0, 0, 1873, 0, 0, 0,
	1834, 0, 0, 0, 0, 0, 0, 0, 0, 1881,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1887, 0, 1886, 0,
	1880, 0, 0, 0, 0, 1833, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1853, 0, 0, 0, 1869,
	0, 0, 0, 0, 1850, 0, 0, 0, 0, 0,
	1884, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1871, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1845, 1846, 1852, 1874, 1851, 1847, 1860, 1844, 1842, 1843,
	1835, 1836, 1837, 1838, 1840, 1841, 0, 0, 0, 0,
	0, 4200, 1856, 1857, 1858, 1859, 0, 0, 0, 1855,
	1831, 1832, 1839, 1864, 1865, 1866, 1875, 1876, 1877, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1868, 1862, 0, 0, 1873, 0, 0, 0,
	1834, 0, 0, 0, 0, 0, 0, 0, 0, 1881,
	0, 1872, 0, 0, 1882, 0, 0, 0, 0, 0,
	0, 1861, 1863, 0, 0, 0, 1887, 0, 1886, 0,
	0, 0, 0, 0, 0, 1833, 0, 1878, 0, 1879,
	0, 0, 0, 0, 0, 1853, 1848, 1849, 0, 0,
	0, 0, 0, 0, 1850, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1870, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1854,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1871, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1845, 1846, 1852, 1874, 1851, 1847, 0, 1844, 1842, 1843,
	1835, 1836, 1837, 1838, 1840, 1841, 1880, 0, 0, 0,
	0, 4199, 1856, 1857, 1858, 1859, 0, 0, 0, 0,
	0, 0, 1839, 0, 0, 1869, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1884, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1872, 0, 0, 1882, 0, 0, 0, 0, 0,
	0, 1861, 1863, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1878, 0, 1879,
	0, 0, 1860, 0, 0, 0, 1848, 1849, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1870, 1855, 1831, 1832, 0, 1864,
	1865, 1866, 1875, 1876, 1877, 0, 0, 0, 0, 1854,
	0, 0, 0, 0, 0, 0, 0, 0, 1868, 1862,
	0, 0, 1873, 0, 0, 0, 1834, 0, 0, 0,
	0, 0, 0, 0, 0, 1881, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1887, 0, 1886, 0, 1880, 0, 0, 0,
	0, 1833, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1853, 0, 0, 0, 1869, 0, 0, 0, 0,
	1850, 0, 0, 0, 0, 0, 1884, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1871, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1845, 1846, 1852, 1874,
	1851, 1847, 1860, 1844, 1842, 1843, 1835, 1836, 1837, 1838,
	1840, 1841, 0, 0, 0, 0, 0, 4198, 1856, 1857,
	1858, 1859, 0, 0, 0, 1855, 1831, 1832, 1839, 1864,
	1865, 1866, 1875, 1876, 1877, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1868, 1862,
	0, 0, 1873, 0, 0, 0, 1834, 0, 0, 0,
	0, 0, 0, 0, 0, 1881, 0, 1872, 0, 0,
	1882, 0, 0, 0, 0, 0, 0, 1861, 1863, 0,
	0, 0, 1887, 0, 1886, 0, 0, 0, 0, 0,
	0, 1833, 0, 1878, 0, 1879, 0, 0, 0, 0,
	0, 1853, 1848, 1849, 0, 0, 0, 0, 0, 0,
	1850, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1870, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1854, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1871, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1845, 1846, 1852, 1874,
	1851, 1847, 0, 1844, 1842, 1843, 1835, 1836, 1837, 1838,
	1840, 1841, 1880, 0, 0, 0, 0, 3835, 1856, 1857,
	1858, 1859, 0, 0, 0, 0, 0, 0, 1839, 0,
	0, 1869, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1884, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1872, 0, 0,
	1882, 0, 0, 0, 0, 0, 0, 1861, 1863, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1878, 0, 1879, 0, 0, 1860, 0,
	0, 0, 1848, 1849, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1870, 1855, 1831, 1832, 0, 1864, 1865, 1866, 1875, 1876,
	1877, 0, 0, 0, 0, 1854, 0, 0, 0, 0,
	0, 0, 0, 0, 1868, 1862, 0, 0, 1873, 0,
	0, 0, 1834, 0, 0, 0, 0, 0, 0, 0,
	0, 1881, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1887, 0,
	1886, 0, 1880, 0, 0, 0, 0, 1833, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1853, 0, 0,
	0, 1869, 0, 0, 0, 0, 1850, 0, 0, 0,
	0, 0, 1884, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1871, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1845, 1846, 1852, 1874, 1851, 1847, 1860, 1844,
	1842, 1843, 1835, 1836, 1837, 1838, 1840, 1841, 0, 0,
	0, 0, 0, 3320, 1856, 1857, 1858, 1859, 0, 0,
	0, 1855, 1831, 1832, 1839, 1864, 1865, 1866, 1875, 1876,
	1877, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1868, 1862, 0, 0, 1873, 0,
	0, 0, 1834, 0, 0, 0, 0, 0, 0, 0,
	0, 1881, 0, 1872, 0, 0, 1882, 0, 0, 0,
	0, 0, 0, 1861, 1863, 0, 0, 0, 1887, 0,
	1886, 0, 0, 0, 0, 0, 0, 1833, 0, 1878,
	0, 1879, 0, 0, 0, 0, 0, 1853, 1848, 1849,
	0, 0, 0, 0, 0, 0, 1850, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1870, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1854, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1871, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1845, 1846, 1852, 1874, 1851, 1847, 0, 1844,
	1842, 1843, 1835, 1836, 1837, 1838, 1840, 1841, 1880, 0,
	0, 0, 0, 3319, 1856, 1857, 1858, 1859, 0, 0,
	0, 0, 0, 0, 1839, 0, 0, 1869, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1884, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1872, 0, 0, 1882, 0, 0, 0,
	0, 0, 0, 1861, 1863, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1878,
	0, 1879, 0, 0, 1860, 0, 0, 0, 1848, 1849,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1870, 1855, 1831, 1832,
	0, 1864, 1865, 1866, 1875, 1876, 1877, 0, 0, 0,
	0, 1854, 0, 0, 0, 0, 0, 0, 0, 0,
	1868, 1862, 0, 0, 1873, 0, 0, 0, 1834, 0,
	0, 0, 0, 0, 0, 0, 0, 1881, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1887, 0, 1886, 0, 1880, 0,
	0, 0, 0, 1833, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1853, 0, 0, 0, 1869, 0, 0,
	0, 0, 1850, 0, 0, 0, 0, 0, 1884, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1871, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1845, 1846,
	1852, 1874, 1851, 1847, 1860, 1844, 1842, 1843, 1835, 1836,
	1837, 1838, 1840, 1841, 0, 0, 0, 0, 0, 3318,
	1856, 1857, 1858, 1859, 0, 0, 0, 1855, 0, 0,
	1839, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1831, 1832, 0, 1864, 1865, 1866,
	1875, 1876, 1877, 0, 1873, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1868, 1862, 0, 1872,
	0, 0, 1882, 0, 1834, 0, 0, 0, 0, 1861,
	1863, 0, 0, 1881, 0, 0, 1886, 0, 0, 0,
	0, 0, 0, 0, 0, 1878, 0, 1879, 0, 0,
	1887, 0, 0, 0, 1848, 1849, 0, 0, 0, 1833,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1853,
	0, 0, 1870, 2198, 0, 0, 0, 0, 1850, 0,
	0, 0, 0, 0, 0, 0, 0, 1854, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1871, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1845, 1846,
	1852, 1874, 1851, 1847, 0, 1844, 1842, 1843, 1835, 1836,
	1837, 1838, 1840, 1841, 1880, 0, 0, 0, 0, 3317,
	0, 0, 0, 0, 0, 2196, 0, 0, 0, 0,
	0, 0, 0, 1869, 0, 0, 1856, 1857, 1858, 1859,
	0, 0, 0, 0, 1884, 0, 1839, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1872, 0, 0, 1882, 0,
	0, 0, 0, 0, 0, 1861, 1863, 0, 0, 0,
	1860, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1878, 0, 1879, 0, 0, 0, 0, 0, 0,
	1848, 1849, 0, 1855, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1870, 0,
	1831, 1832, 0, 1864, 1865, 1866, 1875, 1876, 1877, 0,
	1873, 0, 0, 1854, 0, 0, 0, 0, 0, 0,
	0, 0, 1868, 1862, 0, 0, 0, 0, 0, 0,
	1834, 0, 0, 0, 0, 0, 0, 0, 0, 1881,
	0, 0, 1886, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1887, 0, 0, 0,
	1880, 0, 0, 0, 0, 1833, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1853, 0, 0, 0, 1869,
	0, 0, 0, 0, 1850, 0, 0, 0, 0, 0,
	1884, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1871, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1845, 1846, 1852, 1874, 1851, 1847,
	0, 1844, 1842, 1843, 1835, 1836, 1837, 1838, 1840, 1841,
	0, 0, 0, 3282, 0, 2197, 1860, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1856, 1857, 1858, 1859, 0, 0, 0, 1855,
	0, 0, 1839, 4939, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1831, 1832, 0, 1864, 1865,
	1866, 1875, 1876, 1877, 0, 0, 1873, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1868, 1862, 0,
	0, 1872, 0, 0, 1882, 1834, 0, 0, 0, 0,
	0, 1861, 1863, 0, 1881, 0, 0, 0, 1886, 0,
	0, 0, 0, 0, 0, 0, 0, 1878, 2195, 1879,
	0, 1887, 0, 0, 0, 0, 1848, 1849, 0, 0,
	1833, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1853, 0, 0, 0, 1870, 0, 0, 0, 0, 1850,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1854,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1871, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1845, 1846, 1852, 1874, 1851, 1847, 0, 1844, 1842, 1843,
	1835, 1836, 1837, 1838, 1840, 1841, 1880, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1869, 0, 1856, 1857, 1858,
	1859, 0, 0, 0, 0, 0, 1884, 1839, 0, 3382,
	0, 0, 0, 0, 3381, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4938, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1872, 0, 0, 1882,
	0, 0, 0, 0, 0, 0, 1861, 1863, 0, 0,
	0, 0, 1860, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1878, 0, 1879, 0, 0, 0, 0, 0,
	0, 1848, 1849, 0, 0, 1855, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1870,
	0, 1831, 1832, 0, 1864, 1865, 1866, 1875, 1876, 1877,
	0, 0, 1873, 0, 1854, 0, 0, 0, 0, 0,
	0, 0, 0, 1868, 1862, 0, 0, 0, 0, 3253,
	0, 1834, 0, 0, 0, 0, 0, 0, 0, 0,
	1881, 0, 0, 0, 1886, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1887, 0, 0,
	0, 1880, 0, 0, 0, 0, 1833, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1853, 0, 0, 0,
	1869, 0, 0, 0, 0, 1850, 0, 0, 0, 0,
	0, 1884, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1871, 0, 0, 0,
	0, 0, 0, 0, 0, 3254, 1845, 1846, 1852, 1874,
	1851, 1847, 0, 1844, 1842, 1843, 1835, 1836, 1837, 1838,
	1840, 1841, 0, 0, 0, 0, 0, 1860, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1856, 1857, 1858, 1859, 0, 0, 0,
	1855, 0, 0, 1839, 0, 0, 0, 0, 0, 2789,
	0, 0, 0, 0, 0, 0, 1831, 1832, 0, 1864,
	1865, 1866, 1875, 1876, 1877, 0, 0, 1873, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1868, 1862,
	0, 0, 1872, 2788, 0, 1882, 1834, 0, 0, 0,
	0, 0, 1861, 1863, 0, 1881, 0, 0, 0, 1886,
	0, 0, 0, 0, 0, 0, 0, 0, 1878, 0,
	1879, 0, 1887, 0, 0, 0, 0, 1848, 1849, 0,
	0, 1833, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1853, 0, 0, 0, 1870, 0, 0, 0, 0,
	1850, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1854, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1871, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1845, 1846, 1852, 1874, 1851, 1847, 0, 1844, 1842,
	1843, 1835, 1836, 1837, 1838, 1840, 1841, 1880, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1869, 0, 1856, 1857,
	1858, 1859, 0, 0, 0, 0, 0, 1884, 1839, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1872, 0, 0,
	1882, 0, 0, 0, 0, 0, 0, 1861, 1863, 0,
	0, 0, 0, 1860, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1878, 0, 1879, 0, 0, 0, 0,
	0, 0, 1848, 1849, 0, 0, 1855, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1870, 0, 1831, 1832, 0, 1864, 1865, 1866, 1875, 1876,
	1877, 0, 0, 1873, 0, 1854, 0, 0, 0, 0,
	0, 0, 0, 0, 1868, 1862, 0, 0, 0, 0,
	0, 0, 1834, 0, 0, 0, 0, 0, 0, 0,
	0, 1881, 0, 0, 0, 1886, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1887, 0,
	0, 0, 1880, 0, 0, 0, 0, 1833, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1853, 0, 0,
	0, 1869, 0, 0, 0, 0, 1850, 0, 0, 0,
	0, 0, 1884, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1871, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1845, 1846, 1852,
	1874, 1851, 1847, 0, 1844, 1842, 1843, 1835, 1836, 1837,
	1838, 1840, 1841, 0, 0, 0, 0, 0, 1860, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1856, 1857, 1858, 1859, 0, 0,
	0, 1855, 0, 0, 1839, 0, 4548, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1831, 1832, 0,
	1864, 1865, 1866, 1875, 1876, 1877, 0, 0, 1873, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1868,
	1862, 0, 0, 1872, 0, 0, 1882, 1834, 0, 0,
	0, 0, 0, 1861, 1863, 0, 1881, 0, 0, 0,
	1886, 0, 0, 0, 0, 0, 0, 0, 0, 1878,
	0, 1879, 0, 1887, 0, 0, 0, 0, 1848, 1849,
	0, 0, 1833, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1853, 0, 0, 0, 1870, 0, 0, 0,
	0, 1850, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1854, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1871, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1845, 1846, 1852, 1874, 1851, 1847, 0, 1844,
	1842, 1843, 1835, 1836, 1837, 1838, 1840, 1841, 1880, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1869, 0, 1856,
	1857, 1858, 1859, 0, 0, 0, 0, 0, 1884, 1839,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1872, 0,
	0, 1882, 0, 0, 0, 0, 0, 0, 1861, 1863,
	0, 0, 0, 0, 1860, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1878, 0, 1879, 0, 0, 0,
	0, 0, 0, 1848, 1849, 0, 0, 1855, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1870, 0, 1831, 1832, 0, 1864, 1865, 1866, 1875,
	1876, 1877, 0, 0, 1873, 0, 1854, 0, 0, 0,
	0, 0, 0, 0, 0, 1868, 1862, 0, 0, 0,
	0, 0, 0, 1834, 0, 0, 0, 0, 0, 0,
	0, 0, 1881, 0, 0, 0, 1886, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1887,
	0, 0, 0, 1880, 0, 0, 0, 0, 1833, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1853, 0,
	0, 0, 1869, 1094, 0, 0, 0, 1850, 0, 0,
	0, 0, 0, 1884, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1871, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1845, 1846,
	1852, 1874, 1851, 1847, 0, 1844, 1842, 1843, 1835, 1836,
	1837, 1838, 1840, 1841, 0, 0, 0, 0, 0, 1860,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1856, 1857, 1858, 1859, 0,
	0, 0, 1855, 1831, 1832, 1839, 1864, 1865, 1866, 1875,
	1876, 1877, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1868, 1862, 0, 0, 1873,
	0, 0, 0, 1834, 0, 0, 0, 0, 0, 0,
	0, 0, 1881, 0, 1872, 0, 0, 1882, 0, 0,
	0, 0, 0, 0, 1861, 1863, 0, 0, 0, 1887,
	0, 1886, 0, 0, 0, 0, 0, 0, 1833, 0,
	1878, 0, 1879, 0, 0, 0, 0, 0, 1853, 1848,
	1849, 0, 0, 0, 0, 0, 0, 1850, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1870, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1854, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1871, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1845, 1846, 1852, 1874, 1851, 1847, 0,
	1844, 1842, 1843, 1835, 1836, 1837, 1838, 1840, 1841, 1880,
	0, 0, 0, 0, 0, 1856, 1857, 1858, 1859, 0,
	0, 0, 0, 0, 0, 1839, 0, 0, 1869, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1884,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1872, 0, 0, 1882, 0, 0,
	0, 0, 0, 0, 1861, 1863, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1878, 0, 1879, 0, 0, 1860, 0, 0, 0, 1848,
	1849, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1870, 1855, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1854, 0, 0, 1831, 1832, 0, 1864, 1865,
	1866, 1875, 1876, 1877, 0, 1873, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1868, 1862, 0,
	0, 0, 0, 0, 0, 1834, 0, 0, 0, 0,
	0, 0, 0, 0, 1881, 0, 0, 1886, 0, 1880,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1887, 0, 0, 0, 4328, 0, 0, 1869, 0,
	1833, 0, 0, 0, 0, 0, 0, 0, 0, 1884,
	1853, 0, 0, 0, 0, 0, 0, 0, 0, 1850,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1871,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1845,
	1846, 1852, 1874, 1851, 1847, 1860, 1844, 1842, 1843, 1835,
	1836, 1837, 1838, 1840, 1841, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1855, 0,
	0, 0, 0, 0, 0, 0, 0, 1856, 1857, 1858,
	1859, 0, 0, 0, 0, 0, 0, 1839, 0, 4025,
	0, 0, 0, 0, 0, 1873, 0, 0, 0, 0,
	1831, 1832, 0, 1864, 1865, 1866, 1875, 1876, 1877, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1868, 1862, 0, 0, 1872, 1886, 0, 1882,
	1834, 0, 0, 0, 0, 0, 1861, 1863, 0, 1881,
	0, 0, 0, 0, 0, 4026, 0, 0, 0, 0,
	0, 0, 1878, 0, 1879, 0, 1887, 0, 0, 0,
	0, 1848, 1849, 0, 0, 1833, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1853, 0, 0, 0, 1870,
	0, 0, 0, 0, 1850, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1854, 0, 0, 0, 0, 1871,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1845,
	1846, 1852, 1874, 1851, 1847, 0, 1844, 1842, 1843, 1835,
	1836, 1837, 1838, 1840, 1841, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1880, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1869, 0, 1856, 1857, 1858, 1859, 0, 0, 0, 0,
	0, 1884, 1839, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1872, 0, 0, 1882, 0, 0, 0, 0, 0,
	0, 1861, 1863, 0, 0, 0, 0, 1860, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1878, 0, 1879,
	0, 0, 0, 0, 0, 0, 1848, 1849, 0, 0,
	1855, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1870, 0, 1831, 1832, 0, 1864,
	1865, 1866, 1875, 1876, 1877, 0, 0, 1873, 0, 1854,
	0, 0, 0, 0, 0, 0, 0, 0, 1868, 1862,
	0, 0, 0, 0, 0, 0, 1834, 0, 0, 0,
	0, 0, 0, 0, 0, 1881, 0, 0, 0, 1886,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1887, 0, 0, 0, 1880, 0, 0, 0,
	0, 1833, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1853, 0, 0, 0, 1869, 0, 0, 0, 0,
	1850, 0, 0, 0, 0, 0, 1884, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1871, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1845, 1846, 1852, 1874, 1851, 1847, 0, 1844, 1842,
	1843, 1835, 1836, 1837, 1838, 1840, 1841, 0, 0, 0,
	0, 0, 1860, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1856, 1857,
	1858, 1859, 0, 0, 0, 1855, 1831, 1832, 1839, 1864,
	1865, 1866, 1875, 1876, 1877, 3388, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1868, 1862,
	0, 0, 1873, 3383, 0, 0, 1834, 0, 0, 0,
	0, 0, 0, 0, 0, 1881, 0, 1872, 0, 0,
	1882, 0, 0, 0, 0, 0, 0, 1861, 1863, 0,
	0, 0, 1887, 0, 1886, 0, 0, 0, 0, 0,
	0, 1833, 0, 1878, 0, 1879, 3816, 0, 0, 0,
	0, 1853, 1848, 1849, 0, 0, 0, 0, 0, 0,
	1850, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1870, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1854, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1871, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1845, 1846, 1852, 1874,
	1851, 1847, 0, 1844, 1842, 1843, 1835, 1836, 1837, 1838,
	1840, 1841, 1880, 0, 0, 0, 0, 0, 1856, 1857,
	1858, 1859, 0, 0, 0, 0, 0, 0, 1839, 0,
	0, 1869, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1884, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1872, 0, 0,
	1882, 0, 0, 0, 0, 0, 0, 1861, 1863, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1878, 0, 1879, 0, 0, 1860, 0,
	0, 0, 1848, 1849, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1870, 1855, 1831, 1832, 0, 1864, 1865, 1866, 1875, 1876,
	1877, 0, 0, 0, 0, 1854, 0, 0, 0, 0,
	0, 0, 0, 0, 1868, 1862, 0, 0, 1873, 0,
	0, 0, 1834, 0, 0, 0, 0, 0, 0, 0,
	0, 1881, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1887, 0,
	1886, 0, 1880, 0, 0, 0, 0, 1833, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1853, 0, 0,
	0, 1869, 0, 0, 0, 0, 1850, 0, 0, 0,
	0, 0, 1884, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1871, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1845, 1846, 1852, 1874, 1851, 1847, 1860, 1844,
	1842, 1843, 1835, 1836, 1837, 1838, 1840, 1841, 0, 0,
	0, 0, 0, 0, 1856, 1857, 1858, 1859, 0, 0,
	0, 1855, 1831, 1832, 1839, 1864, 1865, 1866, 1875, 1876,
	1877, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1868, 1862, 0, 0, 1873, 3321,
	0, 0, 1834, 0, 0, 0, 0, 0, 0, 0,
	0, 1881, 0, 1872, 0, 0, 1882, 0, 0, 0,
	0, 0, 0, 1861, 1863, 0, 0, 0, 1887, 0,
	1886, 0, 0, 0, 0, 0, 0, 1833, 0, 1878,
	0, 1879, 0, 0, 0, 0, 0, 1853, 1848, 1849,
	0, 0, 0, 0, 0, 0, 1850, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1870, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1854, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1871, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1845, 1846, 1852, 1874, 1851, 1847, 0, 1844,
	1842, 1843, 1835, 1836, 1837, 1838, 1840, 1841, 1880, 0,
	0, 0, 0, 0, 1856, 1857, 1858, 1859, 0, 0,
	0, 0, 0, 0, 1839, 0, 0, 1869, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1884, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3348, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1872, 0, 0, 1882, 0, 0, 0,
	0, 0, 0, 1861, 1863, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1878,
	0, 1879, 0, 0, 1860, 0, 0, 0, 1848, 1849,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1870, 1855, 1831, 1832,
	0, 1864, 1865, 1866, 1875, 1876, 1877, 0, 0, 0,
	0, 1854, 0, 0, 0, 0, 0, 0, 0, 0,
	1868, 1862, 0, 0, 1873, 0, 0, 0, 1834, 0,
	0, 0, 0, 0, 0, 0, 0, 1881, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1887, 0, 1886, 0, 1880, 0,
	0, 0, 0, 1833, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1853, 0, 0, 0, 1869, 0, 0,
	0, 0, 1850, 0, 0, 0, 0, 0, 1884, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1871, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1845, 1846,
	1852, 1874, 1851, 1847, 1860, 1844, 1842, 1843, 1835, 1836,
	1837, 1838, 1840, 1841, 0, 0, 0, 0, 0, 0,
	1856, 1857, 1858, 1859, 0, 0, 0, 1855, 1831, 1832,
	1839, 1864, 1865, 1866, 1875, 1876, 1877, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1868, 1862, 0, 0, 1873, 0, 0, 0, 1834, 0,
	0, 0, 0, 0, 0, 0, 0, 1881, 0, 1872,
	0, 0, 1882, 0, 0, 0, 0, 0, 0, 1861,
	1863, 0, 0, 0, 1887, 0, 1886, 0, 0, 0,
	0, 0, 0, 1833, 0, 1878, 0, 1879, 0, 0,
	0, 0, 0, 1853, 1848, 1849, 0, 0, 0, 0,
	0, 0, 1850, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1870, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1854, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1871, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1845, 1846,
	1852, 1874, 1851, 1847, 0, 1844, 1842, 1843, 1835, 1836,
	1837, 1838, 1840, 1841, 1880, 0, 0, 0, 0, 0,
	1856, 1857, 1858, 1859, 0, 0, 0, 0, 0, 0,
	1839, 0, 0, 1869, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1884, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1872,
	0, 0, 1882, 0, 0, 0, 0, 0, 0, 1861,
	1863, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1878, 0, 1879, 0, 0,
	1860, 0, 0, 0, 1848, 1849, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1870, 1855, 1831, 1832, 0, 1864, 1865, 1866,
	1875, 1876, 1877, 0, 0, 0, 0, 1854, 0, 0,
	0, 0, 0, 0, 0, 0, 1868, 1862, 0, 0,
	1873, 0, 0, 0, 1834, 0, 0, 0, 0, 0,
	0, 0, 0, 1881, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1887, 0, 1886, 0, 1880, 0, 0, 0, 0, 1833,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1853,
	0, 0, 0, 1869, 0, 0, 0, 0, 1850, 0,
	0, 0, 0, 0, 1884, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2361, 0, 0,
	0, 0, 0, 0, 1871, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1845, 1846, 1852, 1874, 1851, 1847,
	1860, 1844, 1842, 1843, 1835, 1836, 1837, 1838, 1840, 1841,
	0, 0, 0, 0, 0, 0, 1856, 1857, 1858, 1859,
	0, 0, 0, 1855, 1831, 1832, 1839, 1864, 1865, 1866,
	1875, 1876, 1877, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1862, 0, 0,
	1873, 0, 0, 0, 1834, 0, 0, 0, 0, 0,
	0, 0, 0, 1881, 0, 1872, 0, 0, 1882, 0,
	0, 0, 0, 0, 0, 1861, 1863, 0, 0, 0,
	1887, 0, 1886, 0, 0, 0, 0, 0, 0, 1833,
	0, 1878, 0, 1879, 0, 0, 0, 0, 0, 1853,
	1848, 1849, 0, 0, 0, 0, 0, 0, 1850, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1870, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1854, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1871, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1845, 1846, 1852, 1874, 1851, 1847,
	0, 1844, 1842, 1843, 1835, 1836, 1837, 1838, 1840, 1841,
	1880, 0, 0, 0, 0, 0, 1856, 1857, 1858, 1859,
	0, 0, 0, 0, 0, 0, 1839, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1884, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1872, 0, 0, 1882, 0,
	0, 0, 0, 0, 0, 1861, 1863, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1878, 0, 1879, 0, 0, 1860, 0, 0, 0,
	1848, 1849, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1870, 1855,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1854, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1873, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1886, 0,
	1880, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1884, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1871, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1845, 1846, 1852, 1874, 1851, 1847, 1860, 1844, 1842, 1843,
	1835, 1836, 1837, 1838, 1840, 1841, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1855,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1873, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1886, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1871, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1845, 1846, 1852, 1874, 1851, 1847, 0, 1844, 1842, 1843,
	1835, 1836, 1837, 1838, 1840, 1841,
}

var sqlPact = [...]int{
	10923, -1000, -1000, -1000, -1000, 160, -1000, -1000, 156, 155,
	152, 151, 150, 149, 147, 145, 141, 139, 138, -1000,
	-1000, -1000, -1000, -1000, -1000, 137, -1000, -1000, 136, -1000,
	135, 133, 132, -1000, -1000, 129, -1000, 128, -1000, -1000,
	-1000, -1000, 120, 119, 118, 91257, 90692, 91820, 2378, 115512,
	98584, 2257, 80534, 114947, 79969, 114382, 2220, 12161, 113817, 2805,
	117, -1000, 113252, 116, 115, 114, -1000, 112687, -1000, 2033,
	-1000, 113, -1000, 5978, 70325, 112, 110, 109, 108, 2262,
	107, -1000, 106, 105, -1000, -1000, 104, -1000, 11607, 1510,
	-1000, 103, 101, -1000, 367, 96326, 100, 99, 98, 2803,
	97, 95, 67496, 94, 93, 92, 2441, 2924, -1000, -1000,
	2091, -1000, -1000, 91, 87, 86, 85, 84, 82, 77,
	76, 75, 74, 73, 72, 70, -1000, 65, 64, 63,
	61, 52, -1000, 51, 50, 49, -1000, 45, -1000, 44,
	42, 41, 37, 36, 35, 34, 33, 31, 28, 27,
	26, 25, 24, 11816, -1000, -1000, 23, 1986, 1729, 1717,
	1714, 1693, 1681, 973, 22, 20, 18, 17, 16, 13,
	12, 11, 10, 9, 6, 3, 2, 1, 0, -1,
	-2, -7, 134, -10, -11, -12, -15, -16, -18, -20,
	3871, 3561, -1000, 1733, 1577, 30553, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 123957, 116075, -21, -99, -22, -1000, 3379,
	991, 55518, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	209, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 417, 2586, 725, -1000, -1000, -1000, 112124, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2377, -63, -1000,
	2072, -1000, -1000, -1000, -1000, -1000, 724, -1000, 2374, 2298,
	271, 2297, -1000, -1000, -1000, 3442, 2510, 3874, 3870, 3869,
	3867, 3866, 123394, 1876, 3864, 2573, 3861, 3860, 3859, 3856,
	3855, 3853, 3849, -1000, 90127, 1052, 89562, 88997, 3435, 111561,
	88432, 110996, 126215, 47402, 1479, 3439, -1000, -1000, -1000, -1000,
	-1000, -1000, 116075, -1000, 1051, -1000, -1000, 3848, 2129, 723,
	98019, -1000, -1000, 110431, 1791, -1000, -1000, -1000, 911, 1186,
	32869, 32869, 32869, 208, -1000, -1000, -1000, -1000, -1000, -1000,
	3845, 3844, 3838, 3835, 3834, -1000, -1000, 79404, 23422, 78839,
	78274, 109866, 46823, 87867, 87302, 3833, 3832, 3827, 109301, 125650,
	3558, 3556, 1050, 2065, 1478, -1000, -1000, -1000, -1000, -1000,
	-1000, -45, 72017, 3599, 116075, -1000, 207, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 46244, 1010, 45665, 1178, 45086, 997,
	108736, -1000, -1000, -1000, -1000, 74319, -1000, 108171, 2506, 3826,
	3825, 1145, 3821, 3326, 1844, 3819, 1921, 1217, 3818, 3816,
	3814, 3813, 3811, 3810, 3809, 1521, 107606, 3012, 1551, 107041,
	1743, 125085, 1049, 86737, 91820, 2675, 106476, 1491, 1472, -1000,
	-1000, -1000, -1000, 3108, 2914, 2910, 1372, -1000, -1000, -1000,
	-1000, 58959, 7767, 7085, -1000, -1000, 12270, 105911, 61824, 91820,
	91820, -1000, -1000, -1000, -1000, -1000, -1000, 44507, 656, 43928,
	1440, 105346, -1000, -1000, 59532, 2968, -1000, -1000, -1000, -1000,
	-1000, 104781, 43349, 627, 42770, 1159, 116075, -1000, 3007, 1962,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2600, 1623,
	3616, 2738, 73744, 2106, 1399, 3383, 3107, 3102, 1519, 2059,
	3101, 3808, 2690, 3096, 3087, 3083, 3081, 3079, 1669, 2630,
	349, 2627, 29974, 2995, 1787, 42191, 1511, 1536, 3070, 3067,
	3626, 2018, 2049, 2078, 77709, 3807, 3806, 3345, 3057, 3052,
	2839, 3048, -1000, 2967, 1520, 205, -1000, -1000, -1000, -1000,
	-1000, -1000, 1468, -1000, -1000, -1000, -1000, -1000, 82223, -1000,
	-1000, 1645, -1000, -1000, 1645, -1000, -1000, -1000, -1000, -1000,
	1409, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1733, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2882, -1000, 2125, -1000, -1000, -1000,
	2568, 3316, 3316, 3316, 3426, 399, 384, -1000, 134, -1000,
	-1000, 136637, -1000, -1000, 47981, 47981, 47981, 47981, 47981, 47981,
	47981, 47981, 2233, -1000, 722, -1000, -1000, 750, -1000, 719,
	638, 558, -1000, -1000, -1000, -1000, -1000, -1000, 718, -1000,
	-1000, -1000, -1000, -1000, -1000, 3599, -1000, 26368, -1000, -1000,
	-1000, 306, 706, 47981, -1000, -1000, 3663, 3662, 979, -1000,
	202, 925, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 3006, 705, 704, -1000, 699, 692,
	686, 674, 673, -1000, 671, -1000, 669, 668, 667, 666,
	665, 664, 663, 662, -1000, 2087, -1000, -1000, -1000, -1000,
	-1000, -1000, 631, 630, 630, 630, -1000, 1035, -1000, -1000,
	-1000, 288, 626, 256, 622, 617, 615, -1000, 661, 660,
	659, 658, 654, 653, 647, 646, 645, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1027, -1000, -1000, -1000, -1000, -48,
	116075, -1000, 417, -48, -1000, -1000, 641, -1000, 34606, 34606,
	34606, -1000, -1000, 2373, 47981, -1000, 2589, -1000, -37, -37,
	887, 57237, -1000, 54344, 887, 299, 765, 62963, -1000, 2963,
	-1000, -1000, 640, 196, -1000, -1000, -1000, -1000, 23995, 2962,
	116075, 116075, 116075, 91820, 91820, 91820, 116075, 3802, 3795, 3204,
	47981, -1000, -1000, 69760, 127905, 92383, -1000, -1000, 3539, 68059,
	69196, 3005, 127905, 3002, 127345, 3789, -1000, -1000, -1000, -1000,
	-1000, 3185, 3788, 3787, 3778, -1000, 116075, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 239, 3184, -1000, -1000, 95761, 239,
	3183, -1000, 239, 3182, -1000, 95198, -1000, -1000, 2281, 3181,
	-1000, -1000, 246, 3179, -1000, -1000, -1000, 241, 3175, -1000,
	-1000, 195, -98, 3164, -1000, -1000, -1000, -1000, -1000, -1000,
	136637, -1000, -1000, -1000, 126780, -1000, 3355, -1000, 116075, -1000,
	47981, -1000, -1000, 3537, 1760, 3393, 3487, -1000, -1000, -57,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2552, 2541, 1137,
	2401, -1000, 3264, 1546, 32869, 3314, -1000, -1000, -1000, -1000,
	-1000, 186, 23995, -1000, -1000, -1000, -1000, -1000, -1000, 4967,
	3162, 1831, -1000, 2400, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2116, 3161, -1000, 2069, 3160, 2084, -1000,
	-1000, 2234, -1000, 133073, 1357, -1000, -1000, -1000, -1000, 2051,
	3158, -36, -1000, -1000, 2345, -1000, -1000, -1000, -1000, 2023,
	-1000, 1323, 3155, -1000, 2734, 2734, 86172, 3202, 61251, 59532,
	72017, -52, -1000, -1000, -1000, -1000, -116, -1000, 22843, 136637,
	-1000, -1000, -1000, -1000, 1808, 136637, 847, -1000, -1000, 3153,
	-1000, 136637, 841, -1000, -1000, 3152, -1000, 2623, -1000, 3000,
	-1000, -1000, 2465, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2462, 1008, -1000, 3776, -1000, -1000, 3775, -1000, 3773,
	3771, 3770, -1000, 1789, 2044, 3769, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 85609, 2370, -1000, -1000, 84479, 2998,
	-1000, 2461, 3483, -1000, 85044, 1045, -1000, 990, 2459, -1000,
	94635, 869, 2457, -1000, 3768, 3434, 2703, 990, 2456, -1000,
	-1000, -1000, -1000, -1000, 784, -1000, 65228, -1000, 65228, -1000,
	1657, -1000, 122831, -37, 91820, 3599, -1000, -88, -1000, -1000,
	-1000, 991, -1000, 58383, -1000, 58383, 97454, 74892, 929, 2957,
	66921, 136467, -1000, 1007, -1000, -1000, 136637, -1000, -1000, -1000,
	2621, -1000, -188, 2733, -1000, 74892, 60678, 2619, -1000, 136637,
	-1000, -1000, -1000, -1000, 136637, -1000, -1000, -1000, 74892, 84479,
	-1000, 104216, 83916, -1000, -1000, 1508, 2607, -1000, -1000, -1000,
	74892, 1339, 74892, 74892, 74892, -1000, 103651, -1000, -1000, 2149,
	1618, 3346, 2138, 91820, -1000, 1954, -1000, -1000, -1000, 3369,
	3200, 116075, -1000, -1000, 2996, -1000, 71453, 94072, -1000, 93509,
	-1000, 92946, -1000, 91820, -1000, 91820, -1000, 3767, 3764, 3762,
	-1000, -1000, 3761, -1000, 3760, 3360, -1000, 1099, 41612, 136637,
	3358, -1000, 3759, 2057, 2995, 136637, -1000, 3165, 1728, 1716,
	116075, -1000, -1000, 116075, -1000, 116075, -1000, -1000, -1000, 1599,
	-1000, -1000, 2544, -1000, -1000, -1000, -1000, 91820, 91820, 91820,
	91820, 1219, -1000, 41033, -1000, -1000, 3044, 3758, 1758, -1000,
	1933, -1000, 2955, 3380, -1000, 1504, 1818, 185, 3666, -1000,
	-1000, 247, -1000, -1000, -57, -1000, 122268, -1000, 2568, -1000,
	116075, -1000, 2571, 2980, 2994, 1667, 2391, 2644, -1000, 40454,
	2624, 51455, 2394, 134, -1000, -1000, 134, 134, 31711, -1000,
	-1000, 68059, 68059, 23995, 1418, 47981, 47981, 47981, 47981, 47981,
	47981, 47981, 47981, 47981, 47981, 47981, 47981, 47981, 47981, 47981,
	47981, 47981, 47981, 47981, 47981, 47981, 47981, 47981, 47981, 47981,
	47981, 47981, 47981, 47981, 47981, 47981, 47981, 47981, 47981, 47981,
	47981, 2061, 47981, 1408, 47981, 47981, 47981, 47981, 2209, -1000,
	-1000, 1994, 472, 2064, 638, -1000, -1000, -1000, 3590, 3590,
	3590, 993, 993, 993, 137073, 137073, 551, 3757, 750, -1000,
	47981, -1000, 69, 57801, 47981, 24570, -1000, 384, 14081, 2577,
	-1000, 382, 25178, -1000, -1000, -1000, 26368, 558, 39846, 47981,
	1017, 136637, -1000, -1000, 1336, 3611, 22264, 3023, 2813, 637,
	801, 797, 29366, 28758, 28150, 27542, 689, 595, 47981, 47981,
	47981, 47981, 47981, 47981, 47981, 47981, -1000, -1000, 3619, -1000,
	3611, -1000, -1000, -1000, -1000, 3611, 1376, 1260, 3611, -1000,
	3611, 3611, 8486, 8486, 39267, 38688, 38109, 52034, 37530, 47981,
	26963, 36951, 36372, -1000, 116075, -48, 3536, 47981, 269, -1000,
	133975, -1000, 269, 269, 636, -96, 136637, 2608, 2608, 56091,
	2387, 2252, 2252, 2252, -1000, 887, 17015, 887, 101962, 2265,
	887, 887, 181, 222, 381, 53771, 2589, 101962, 736, 635,
	-25, -26, -29, -1000, -1000, -30, -31, -1000, -1000, 91820,
	634, 24570, 23995, 180, 2036, -103, 2651, 2650, -1000, 2649,
	2643, -1000, 2641, 2368, -1000, -1000, -1000, 1834, -104, 1389,
	91820, 116075, 1445, 3752, -97, -1000, 6275, -106, -1000, 1141,
	177, 3611, -1000, -1000, -1000, -1000, -1000, 3751, 3750, -1000,
	1026, 633, 632, 749, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 631, 630, 630, 630, -1000, 288, 626, 256,
	622, 617, 615, -1000, -1000, -1000, -1000, -1000, 2953, 91820,
	116075, 1441, 3748, 81097, -98, 92383, -82, -1000, -1000, 116075,
	-1000, -1000, -1000, 3746, -1000, 91820, -1000, -1000, 91820, 239,
	3146, -1000, 91820, -1000, 91820, 236, 3145, -1000, -1000, 116075,
	-1000, 91820, 91820, -1000, 116075, 116075, 116075, 127905, 127905, 234,
	-1000, 91820, 846, -109, 1158, -57, -1000, -1000, -1000, -1000,
	1645, -1000, 1995, -1000, -1000, -1000, -1000, -1000, -1000, 1514,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 979, -1000,
	-1000, -1000, -1000, -1000, -1000, 3603, 3601, -49, -1000, -1000,
	23995, -1000, -58, 1666, 532, 1387, -1000, 77144, 2386, 3348,
	3745, 2696, 3335, 1656, -1000, 1563, 613, -1000, 3431, 82223,
	3501, 3509, 1332, -1000, 2952, -1000, -1000, -1000, 909, 1757,
	1775, 1369, 1367, 82223, 2069, -1000, 68059, -1000, 2770, 3425,
	1360, 1358, 1360, 1360, 1355, -1000, 82223, 1772, 1312, 1307,
	1302, -1000, -1000, 1970, 1959, -1000, -1000, 103088, -1000, 1296,
	1283, 3554, 2882, 2217, 781, 1957, -1000, 1349, 1278, 2951,
	-1000, -1000, -61, 3497, 3507, 1332, -1000, 2947, 1275, -1000,
	-1000, -1000, 3417, 91820, 23995, 1581, 1580, 1558, 1747, 1274,
	-51, -1000, 3492, 1273, 1272, -1000, 1016, 6133, 3293, -1000,
	127905, 1016, 1016, 2031, 3144, 2725, 1896, -1000, 2731, 859,
	2730, -1000, -1000, -1000, 859, -52, 72017, 116075, 176, -1000,
	69, 47981, 47981, 69, 47981, 69, -1000, 3473, 3141, 3138,
	3744, -1000, -1000, -1000, -1000, -1000, 3743, 1989, 2570, -1000,
	-1000, 612, 2451, 2944, 116075, 2663, -54, 91820, -1000, 70889,
	3135, 127905, 2069, 2449, -1000, -1000, 83351, -1000, 3133, 417,
	2448, -1000, 639, 3742, 3132, -1000, 121705, -1000, 3355, 1227,
	3130, 1085, 864, 3535, -1000, 864, 65793, -1000, 116075, -1000,
	-37, 4992, 76018, -115, -117, 373, -1000, 102525, 116075, 116075,
	3303, 2003, 1988, -1000, 987, 59532, -1000, 59532, -118, -1000,
	-188, 2729, 1549, -1000, 929, 929, 859, -1000, 859, -1000,
	91820, 2991, -1000, -1000, 74892, 929, 929, 929, -1000, -1000,
	-1000, -1000, 3741, 3740, 3739, 3737, -1000, -1000, 989, 91820,
	116075, 91820, -1000, -1000, 1752, -1000, 175, -1000, 127905, -1000,
	127905, 116075, 91820, -1000, 989, 116075, 989, 116075, 989, 116075,
	989, 989, -1000, -1000, -1000, -1000, -1000, 69, -1000, -1000,
	136637, -1000, 47981, -1000, -1000, 1556, 3736, 1675, -1000, 2986,
	-1000, 2985, -1000, 8, -1000, -1000, 1903, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 3731, 136637, -1000, 2055,
	-1000, -1000, -1000, -1000, 91820, 91820, 91820, 91820, 116075, 3290,
	-1000, 116075, 3285, 91820, -1000, 3665, -1000, -1000, 82223, -1000,
	2571, 2980, -1000, -1000, -1000, -1000, -1000, -1000, 1458, 2317,
	-1000, 2606, -1000, 1633, -1000, -1000, -1000, 136637, 52613, -1000,
	-1000, 136637, 1830, -1000, 50876, 50297, -1000, -1000, 1777, 91820,
	2680, -1000, 2680, -93, -1000, 133790, 2601, 91820, -1000, -1000,
	-1000, -1000, -1000, 904, 657, 657, 1396, 1396, 1396, 1396,
	3455, 6826, 7248, 6972, 10047, 10047, 9382, 9382, 9382, 9382,
	9382, 10047, 590, 993, 993, 590, 590, 590, 590, 590,
	993, 993, 993, 10047, 10047, 10047, 993, 137073, 136903, 11279,
	47981, 47981, 1266, 1990, 472, 10061, 47981, 5566, 5566, 5566,
	5566, -1000, 2172, -1000, -1000, -1000, -1000, 2943, 607, 52034,
	52034, -1000, -1000, -1000, -1000, 25773, 47981, -1000, -1000, -1000,
	-1000, 35764, -1000, -1000, 132887, -321, 372, -1000, 174, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 371, -91, 81, -1000, 47981, 47981, 47981, 368,
	-1000, 173, 47981, 116075, -1000, 129388, 735, -120, -1000, -123,
	1417, -1000, 47981, -1000, -1000, 1263, -1000, 1251, 1241, 1240,
	-1000, 606, 365, -1000, 171, -1000, 2241, 602, 594, 47981,
	-1000, -1000, -1000, -1000, -1000, 132621, -1000, -1000, 132451, -1000,
	-1000, 132185, -1000, -1000, 132015, -1000, -1000, -1000, -1000, -1000,
	136201, 129111, 128941, 128508, 9252, 128471, 15861, -124, 364, -125,
	363, 903, 901, 362, 359, 358, -132, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -133,
	354, -1000, 2940, -91, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 351, -1000, 346, -1000, 136031, -91, 345, 5606,
	-1000, 52034, 52034, 52034, 52034, -1000, 344, -1000, 133524, -1000,
	135765, 35185, 35185, 35185, 343, 135595, 47981, -91, -138, -1000,
	-141, -1000, -1000, 489, -146, 1013, 34606, 54931, 23995, -1000,
	1013, 1013, 47981, -1000, 47981, 2616, -1000, -1000, -1000, -1000,
	2615, 2071, 2608, 56091, -1000, -1000, -1000, -1000, 101962, -1000,
	3599, 3159, -1000, 101962, -1000, -1000, 116075, 417, -1000, 101962,
	101962, 23995, 887, -1000, 887, 101962, 610, -1000, -1000, -1000,
	-1000, -1000, 341, 64100, 81, 170, 23995, 990, -1000, -1000,
	2743, 2743, 2743, 2743, 2743, 91820, -1000, -1000, 127905, 1231,
	-55, -112, 2728, -1000, 3569, -1000, 2105, -1000, 68059, -1000,
	747, 1062, 23995, -1000, -1000, -1000, 593, -1000, 3611, 3611,
	-1000, 3611, 127905, 2936, 238, 2727, -1000, 2366, -53, 230,
	127905, 3730, -1000, -1000, 239, -1000, 91820, 239, 239, -1000,
	91820, 91820, 2281, -1000, 246, -1000, 241, -1000, -1000, -98,
	-1000, 1005, 32869, -1000, 1645, -1000, -1000, 1570, -1000, 2014,
	-1000, 1181, -1000, -1000, -1000, -1000, 32869, -1000, 2471, 116075,
	116075, 91820, -1000, 100273, 116075, -1000, 2183, 127905, -1000, 2447,
	121142, 2419, 120579, 68059, -1000, -1000, 589, 922, 2598, 2595,
	1080, 116075, 116075, 2594, 120016, 119453, -1000, 3726, 116075, 2077,
	47981, 100273, 3410, 2157, 3415, 69, 69, -1000, 69, -1000,
	-1000, 587, 1237, 91820, 91820, 116075, 127905, 91820, 1932, -1000,
	-1000, -1000, -1000, -1000, 82786, -1000, -1000, 3618, 3615, -1000,
	1360, -1000, -1000, -1000, 1360, 2069, 1925, 116075, 127905, 91820,
	127905, 118890, 118327, -1000, -1000, 1745, 116075, -1000, -1000, -1000,
	-1000, 1474, -1000, 781, 1230, 2935, 47981, 47981, 2161, 69,
	69, -1000, 69, 586, 23995, 2008, -1000, 2942, 116075, 3661,
	117764, 3659, 116075, 116075, 116075, 127905, 3385, 116075, 116075, 127905,
	-1000, 117201, 6133, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2153, 73169,
	1091, 116075, 1323, -1000, -1000, 1741, 1229, 1224, 82223, 2108,
	1739, 1868, 127905, 59532, 964, 59532, 2710, -1000, -1000, 21685,
	-1000, 136637, 136637, -1000, 136637, -1000, 70889, 74892, 116075, -1000,
	-1000, 1041, 116075, 76581, 923, 3127, 64663, -116, 929, 74892,
	91820, -54, 2663, 116075, -1000, -1000, 2069, 3115, 417, 2446,
	-1000, 127905, 3533, 3112, 572, 3723, 3717, -1000, 91820, 2364,
	2436, -1000, -1000, 116638, 3080, 781, 116075, 1013, 56091, 1966,
	-1000, 62399, 1059, 116075, 1875, 220, -1000, -1000, -1000, -13,
	116075, -1000, 758, -1000, -1000, 4992, 4992, 929, -144, 570,
	-1000, 844, 843, 60105, -154, -1000, 169, 567, 836, 835,
	-1000, 3459, -1000, -188, -1000, 74892, 987, 59532, 2933, 2931,
	-1000, -1000, 1004, -1000, 1497, 929, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -38, 1848, 116075,
	-98, -98, -66, -55, -1000, 989, -1000, 989, -1000, 989,
	-1000, -1000, -1000, 136637, -1000, -1000, -1000, 1668, 1650, 116075,
	-1000, -1000, 116075, -1000, 23995, 116075, 91820, 23995, 91820, 2979,
	2977, -1000, -1000, -1000, 116075, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1107, -1000, 1830, 2314, -1000, 558, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2525, -1000,
	-56, 31711, 889, -1000, -1000, 91820, -39, 47981, 47981, 7932,
	6799, 47981, 52034, 52034, -1000, 47981, 6786, -1000, -1000, -1000,
	-1000, -1000, 2925, 553, 47981, 68059, 915, 720, -1000, 337,
	14756, 590, -1000, 47981, -1000, 5368, -1000, 336, 34027, -1000,
	134426, 38, -155, -1000, 17608, -91, -156, -1000, -1000, 746,
	-1000, 3103, -1000, 47981, 135329, 2477, 2054, 1855, 1654, 3611,
	3656, 21106, -1000, 66357, 1014, 2272, 131749, -1000, -1000, -1000,
	-1000, 68059, 68059, 47981, 47981, -1000, 47981, 47981, 47981, -1000,
	-1000, -1000, 3611, 879, -1000, -1000, -1000, 879, -1000, -1000,
	1360, -1000, 1360, -1000, 47981, -1000, -1000, 2911, 47981, -1000,
	68059, 68059, 52034, 52034, 52034, 52034, 52034, 52034, 52034, 52034,
	52034, 52034, 52034, 52034, 52034, 52034, 52034, 52034, 52034, 52034,
	52034, 52034, 2596, 52034, 3587, 3587, 3587, 1648, -1000, 2976,
	2911, 47981, 47981, 68059, 333, 332, 331, -1000, 47981, -91,
	-1000, -1000, 8980, 552, -1000, 2517, -1000, 2811, -1000, 47981,
	-1000, -168, -1000, 2589, -1000, -1000, 2811, 2811, -157, 136637,
	56091, 56091, -1000, 550, 47981, 2612, -1000, -1000, 734, -319,
	-1000, 828, -1000, -1000, -1000, -1000, -1000, -1000, 827, -1000,
	417, -1000, -1000, -1000, 166, 101962, 101962, 731, -1000, -172,
	-1000, -1000, -173, -1000, 3530, 324, 23995, -1000, 1013, 2722,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2637, -271, 127905,
	127905, 1732, 2296, 3652, -1000, 3612, 740, 728, 165, 3611,
	316, 309, 302, -98, 127905, 127905, 1724, 68632, 127905, -1000,
	-1000, -1000, 239, -1000, -1000, -1000, 236, -1000, -1000, -1000,
	-1000, 2726, -1000, -57, -1000, -1000, -1000, 47981, -1000, -1000,
	3347, 540, 1222, 1220, -1000, -175, -1000, 826, -1000, -1000,
	-1000, -1000, 2883, -1000, 3099, -1000, 2432, -1000, 1067, 2426,
	1638, -1000, 47981, 539, 2701, 538, 533, 3716, 2134, 3715,
	1083, 3098, 2281, 3095, 2281, -1000, -1000, -1000, 916, -1000,
	136637, -181, -1000, 2157, -1000, 526, 525, -1000, -58, 1647,
	493, 1218, 1003, -1000, -1000, 47981, 47981, 101399, -1000, 463,
	3341, -40, -1000, -1000, -1000, 1719, 1214, 1210, -1000, -1000,
	-1000, -1000, 2069, 1715, 1209, 1197, -1000, -1000, -1000, -1000,
	-1000, 2425, -1000, -1000, 3094, 1001, -1000, 3042, 3039, 898,
	116075, 47981, 47981, 135144, 134862, -1000, 998, -1000, -1000, 47981,
	-1000, -61, 1190, 3477, 2424, 91820, -1000, 2281, 3085, 1176,
	-1000, 1175, -1000, -1000, -1000, 3491, 3490, 1177, -1000, -1000,
	-1000, 74892, -1000, -1000, 72596, -1000, -1000, 1016, 116075, 127905,
	91820, 1915, -1000, -1000, 81097, 81660, 116075, 2725, -98, 859,
	-1000, 2469, 859, 964, 2906, -1000, 2632, -1000, 995, 91820,
	3713, 300, -182, -62, 68059, -1000, -1000, -1000, -1000, 2419,
	91820, 116075, 1322, 2699, 116075, 116075, 3528, -1000, 2382, 530,
	91820, 883, -1000, 3599, -1000, -1000, -1000, 992, -1000, 3462,
	91820, 3524, 3077, 990, 69, 91820, 3627, -1000, -1000, 3523,
	91820, 3076, 2358, 2423, 2547, 781, 75455, 990, 2268, -75,
	-1000, 1875, 33448, 3339, -189, -1000, -1000, -1000, 1013, 65793,
	56091, 47981, 3700, -191, -1000, -1000, -1000, -1000, -1000, 99147,
	99147, 74892, 74892, 74892, 929, 116075, 116075, 3699, 74892, 74892,
	74892, -64, 514, -1000, 825, 822, 817, -1000, -1000, -1000,
	-1000, -1000, -1000, 815, 808, 805, 987, -1000, -1000, -188,
	59532, 69, -1000, 2291, 91820, -1000, 20527, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 989, -116, -1000, -1000, -1000, 2176,
	2351, 2176, 1852, 1850, -1000, -1000, 2303, -1000, -1000, -1000,
	-1000, 2660, 3352, 23995, 3460, 5566, 47981, 47981, 5686, 554,
	529, 5566, 47981, 47981, 68059, 8035, -203, 47981, 47981, -1000,
	47981, 727, 136637, -1000, 3651, 47981, 291, 290, -1000, -1000,
	-1000, 3608, -1000, -1000, -1000, 136637, 47981, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 289, -1000, 163, -1000, -1000, -1000,
	124520, -1000, 47981, 286, 3408, -1000, 285, 284, 14293, 431,
	131579, 131313, 131143, 282, -1000, -1000, 281, 280, 136637, 2976,
	136637, -1000, -1000, 1040, 1040, 1347, 1347, 1347, 1347, 3587,
	571, 1170, 688, 466, 466, 466, 931, 1648, 1648, 466,
	466, 466, 1648, 2905, 2603, 506, 1216, -1000, -1000, 136637,
	136637, 279, -1000, -1000, -1000, -91, 278, 8980, -1000, 2771,
	3403, 136637, -1000, 56091, 2771, 2771, -1000, -1000, 2071, 116075,
	136637, 56091, -1000, 3159, -1000, 18784, 18199, -1000, 23995, -1000,
	-1000, -1000, -1000, 3599, -1000, 64100, -1000, 497, -1000, 158,
	-1000, 2722, -1000, 804, -1000, -1000, 74892, 74892, 2743, -1000,
	2818, -271, -190, 116075, -1000, -1000, 690, 3698, 739, 23995,
	277, -1000, -1000, -1000, -98, -98, 116075, 2901, 91820, 116075,
	1184, -98, -1000, -1000, -1000, 3302, 136637, 116075, 116075, -1000,
	100273, 32869, 1538, 100836, 116075, 3075, -1000, 3068, -1000, 1080,
	2497, 130877, 56664, -1000, 56664, 116075, -1000, -1000, -1000, -1000,
	2022, 1673, 3697, 1126, -1000, 3371, 116075, -1000, 116075, -1000,
	-1000, -1000, 100273, -1000, 116075, 116075, 91820, 116075, -1000, 127905,
	3050, -204, 136637, -65, -1000, 802, -1000, 1352, -1000, 19948,
	116075, 127905, 91820, 116075, 127905, 91820, 3066, 116075, 2206, -1000,
	-1000, 3038, -1000, 136637, 134692, 69, 47981, 3049, -205, 23995,
	-1000, 3649, 3643, 3064, 3375, -1000, 116075, 3642, 116075, 91820,
	3301, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1707, 1174,
	1171, 2354, 2349, 2294, -66, 2108, 964, -70, 496, -1000,
	799, -1000, -1000, 798, 795, 964, -1000, 74892, 59532, 3696,
	417, -1000, 2694, -1000, 96889, 76581, 2278, -1000, -1000, 495,
	116075, 116075, 492, -1000, 69, -1000, 3693, 100273, 490, -1000,
	2290, -1000, 611, -1000, 2523, 127905, 2069, 69, 91820, -1000,
	953, 417, 276, -73, -1000, 3171, 1078, 23995, 91820, 3062,
	2560, 781, 75455, -1000, 1227, 2644, -1000, -74, -1000, 604,
	69, 2268, -1000, -75, 136637, -1000, 794, -1000, -206, -1000,
	-1000, 268, -1000, 3300, -1000, -1000, -211, -1000, -1000, 4933,
	4933, 74892, 59532, 74892, 74892, 74892, 59532, -1000, 987, 859,
	-1000, 2410, -1000, -1000, -1000, -1000, -1000, 23995, 1725, -1000,
	487, 486, -1000, -1000, -1000, -1000, 3352, 5566, 5566, 47981,
	47981, 47981, 5566, 8035, -218, -1000, 5566, 5566, -91, -1000,
	-1000, 134426, -1000, -1000, -1000, 136637, -1000, 19369, 2186, -1000,
	130707, -1000, 31711, -1000, -1000, 47981, 47981, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 52034, 2900, 485, 68059, -1000,
	-1000, 266, 994, 47981, 49718, 2589, 994, 994, -1000, -219,
	-1000, -1000, -1000, 3599, -1000, 3599, 158, -1000, -1000, 3690,
	23995, -1000, 74892, -1000, -1000, -1000, 2288, -1000, -1000, 3033,
	-187, 738, -1000, 3688, -1000, -1000, 198, 127905, 2896, 157,
	2724, -1000, -1000, -1000, -1000, -1000, 2721, 3522, -1000, 1948,
	-1000, 116075, 116075, -1000, 116075, -1000, 23995, 116075, 2801, 1256,
	-1000, 922, 2592, 484, 52034, 1105, 91820, 871, 2757, 2754,
	-1000, 3551, 3402, 2794, -221, -1000, 116075, 47981, 116075, -226,
	-227, 2408, -1000, -1000, 1104, 1244, 47981, 1101, -1000, -1000,
	-1000, 68059, 481, 2281, 2281, -1000, -229, -234, -1000, -1000,
	-1000, 47981, 1169, 116075, 32290, -1000, 3685, 3341, -1000, -1000,
	-1000, -1000, -1000, -1000, 116075, -1000, 116075, -1000, 47981, -1000,
	134241, 47981, 1168, -1000, -1000, -1000, 3637, 2281, 23995, 2281,
	-1000, 2281, 3375, 1116, 116075, 127905, 91820, 1796, 1796, 2929,
	-1000, -1000, -1000, 2483, 2483, 74892, 59532, 59532, -1000, -76,
	964, -1000, 3521, 2182, 3683, -1000, -1000, -1000, -1000, 2591,
	-1000, -1000, -1000, 116075, 2581, 2790, 56664, 478, 477, 116075,
	937, -1000, -235, 76581, 923, 866, -1000, -77, 476, -1000,
	793, -1000, -1000, -1000, -1000, 417, -1000, 2723, 3516, -1000,
	3630, 475, 474, 116075, 2347, 473, 23995, 3337, 781, 75455,
	-1000, 3080, 1875, -1000, 2414, 116075, 3334, -1000, 2644, 472,
	-1000, 929, 471, 929, -1000, -236, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -79, -1000, 842, 840, -1000, -1000,
	91820, 91820, 47981, 47981, -1000, 5566, 5566, 5566, -1000, 235,
	-1000, -1000, 2268, 3398, -1000, -83, 130441, 130271, 2086, 52034,
	68059, -237, -1000, -1000, 116075, 136637, -85, -1000, 136637, 470,
	469, 370, -1000, -1000, -1000, 596, 467, -1000, -1000, -1000,
	-1000, 127905, 3682, -1000, 127905, -98, 127905, 127905, 1683, 99710,
	116075, -1000, -1000, 1638, 4215, -1000, -1000, -1000, 116075, 2421,
	-1000, -1000, -1000, 950, 47981, 1216, 52034, 465, 47981, -1000,
	451, 450, 3515, 3272, -1000, 2691, 2838, 1931, 56664, -1000,
	3352, -1000, 130005, -1000, 1077, 1980, -1000, -1000, -1000, -1000,
	136637, 52034, 3375, 56664, -1000, -1000, 449, 447, 136637, 442,
	792, 2885, -1000, -1000, -1000, -1000, -1000, 136637, 69, 136637,
	440, 3477, -1000, -1000, -1000, -1000, 2281, 91820, -1000, -1000,
	-1000, 1165, -1000, -1000, -1000, -1000, 3681, 3679, 2881, 81097,
	-1000, -242, -1000, -1000, -1000, 1983, 69, 923, -1000, -1000,
	2278, 438, -1000, 928, 2629, 2629, -244, 56664, 56664, -245,
	2326, 2682, -1000, 229, 3514, 866, -1000, 3605, -1000, 3279,
	3279, 47981, 3511, 3299, -1000, 69, -1000, 3627, 56664, -1000,
	91820, 56664, 2346, 2053, 2538, 75455, -1000, 2547, -1000, -1000,
	-247, 116075, 1875, -1000, -1000, 74892, -1000, -1000, 2410, -1000,
	116075, -1000, 116075, -1000, -1000, -250, -252, -1000, 2119, 47981,
	31711, -1000, -1000, 2086, -253, -1000, -90, -1000, 3506, 49718,
	3677, 3676, 3675, -1000, -1000, -271, -1000, -98, -98, -98,
	116075, -1000, 1942, -1000, 2419, -1000, -1000, 3059, -1000, 2787,
	437, 129835, 1216, 2519, 116075, 129558, 2069, 2069, -1000, 3505,
	2834, -1000, -1000, 2161, 434, -1000, -1000, -1000, -1000, 889,
	116075, 928, 2766, 91820, 1216, 1079, -255, 2176, 2176, 47981,
	31132, 2204, -1000, 47981, -1000, -1000, 3375, 127905, -1000, -1000,
	127905, 2327, -1000, 2852, 3598, -1000, 2326, 116075, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1077, -258, -260, -1000, -1000, 3364, -1000, 3298, 2694, 69,
	-1000, -1000, -1000, -263, 136637, 69, 3674, 953, 228, -266,
	1078, -269, 91820, 1947, -1000, 781, -1000, 2560, 1013, 3203,
	-1000, -274, -1000, -275, -277, -1000, -1000, 223, 49139, 49139,
	49139, -91, -93, -1000, 116075, 428, -1000, -1000, -1000, -1000,
	-1000, 140, -1000, -1000, 3032, 851, -1000, 800, 2011, 219,
	1106, 217, 213, -1000, -1000, -1000, 2794, -1000, 116075, -1000,
	-1000, -1000, 851, 417, -1000, 47981, 1077, -280, -1000, 1058,
	-283, -1000, 1057, -285, -1000, 2878, -1000, -286, 2281, -271,
	234, 1796, 938, 3461, -1000, -1000, -1000, 2530, -288, -1000,
	-1000, 1931, 1077, 2161, 2416, -1000, 2182, 937, -1000, -1000,
	-1000, -1000, -1000, 1077, 409, 1931, 408, 1533, 781, -1000,
	-1000, 1360, 3337, 3201, 1385, 929, -1000, -1000, -1000, 3069,
	-1000, 53192, 2287, 1840, 133339, 3069, 3069, -1000, -1000, 127905,
	116075, 928, 3440, -1000, 850, 845, 1524, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1013, -291, -1000, 2519, 136637,
	928, -1000, 2176, 2720, -1000, 2176, 2877, -1000, 2202, -1000,
	-1000, -1000, -1000, 2858, -1000, 1811, 3575, -1000, -1000, 928,
	116075, 2161, 1931, 928, 1833, 1827, 3672, 923, 2326, 1931,
	56664, 2161, 56664, 2115, -1000, 116075, -1000, 2053, 1344, -1000,
	1655, -1000, -1000, 1885, 3546, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -98, -1000, -1000, 789, -1000, 3261, -1000, 1100,
	2223, 2223, -1000, -1000, 800, -1000, -1000, 406, -1000, 404,
	-1000, 127905, 2280, -1000, -1000, -1000, -1000, 928, 2161, 1013,
	-1000, 3669, -1000, 2326, -1000, 2161, -293, 928, -294, 2218,
	-1000, -1000, -116, 1947, -1000, 1652, 65793, 1832, -1000, -1000,
	2258, 48560, 47981, -1000, 3572, -1000, -1000, 2620, -1000, 2794,
	47981, 47981, 234, 63527, 1013, 928, -1000, -1000, 2530, 928,
	1077, 1013, 1931, -1000, 781, 1533, 65793, -272, -1000, -1000,
	-1000, 136637, -1000, -1000, -1000, -1000, -296, -299, -1000, -144,
	99147, -1000, 1013, -1000, 1013, 1931, -1000, 2161, 127905, 2115,
	-272, -1000, 2161, 1164, -304, -1000, -1000, 2161, 928, -1000,
	-1000, -1000, -1000, -1000, 402, -1000, 928, 1013, 47981, 1013,
	-1000, -311, -1000, 2161, -1000,
}

var sqlPgo = [...]int{
	0, 4557, 4555, 4552, 4551, 4549, 4548, 4547, 4546, 4545,
	4544, 4543, 4539, 164, 4536, 4535, 4533, 4531, 4530, 4528,
	4526, 4525, 4523, 4517, 4516, 4514, 4513, 4511, 4506, 4503,
	4499, 4495, 4494, 4493, 4492, 4491, 4486, 4484, 4483, 4481,
	4479, 4473, 4469, 4468, 4459, 4457, 4455, 4451, 4449, 4447,
	4446, 4442, 4440, 4438, 4436, 4435, 4434, 4433, 4429, 4428,
	4426, 4424, 4419, 4417, 4415, 4413, 4408, 62, 4399, 4396,
	4393, 4392, 4391, 4389, 4387, 4383, 4382, 4381, 4380, 4379,
	4376, 4375, 4372, 4369, 4368, 4367, 4365, 4361, 69, 4360,
	281, 4359, 4355, 4354, 4353, 4349, 4343, 4340, 4338, 4336,
	4334, 4331, 4330, 279, 4327, 136, 186, 4320, 4318, 3877,
	4314, 4313, 278, 4311, 4309, 4308, 4307, 4305, 291, 4304,
	4303, 4301, 4300, 4298, 4296, 4295, 4293, 4292, 4291, 4290,
	4286, 108, 209, 4285, 4284, 4394, 4282, 4280, 4279, 4278,
	4277, 4276, 4274, 4273, 4272, 4270, 4268, 261, 174, 4266,
	277, 4265, 4264, 4263, 4262, 4261, 4259, 4258, 4257, 4256,
	4252, 4249, 4244, 4243, 4242, 4239, 4236, 4235, 4234, 4232,
	4230, 4225, 4221, 4220, 4219, 4218, 4217, 4213, 4211, 4210,
	4205, 4203, 4194, 4191, 4190, 4189, 4187, 4184, 4183, 4182,
	263, 225, 142, 4176, 4175, 276, 275, 4173, 4169, 4166,
	4165, 4164, 145, 5, 40, 4163, 4162, 93, 99, 95,
	105, 107, 109, 4161, 126, 4160, 138, 118, 4156, 125,
	119, 21, 20, 306, 251, 9182, 249, 4154, 4153, 4148,
	255, 207, 4141, 250, 4140, 4137, 4136, 4134, 4133, 4132,
	70, 57, 198, 191, 185, 183, 80, 53, 114, 96,
	63, 45, 10, 89, 223, 19, 6, 271, 4130, 270,
	1, 153, 13, 36, 4127, 4126, 4123, 4121, 3590, 140,
	4119, 273, 247, 187, 4118, 4117, 4115, 1199, 4114, 4112,
	52, 4110, 110, 90, 121, 92, 143, 4106, 160, 172,
	42, 4105, 180, 60, 4104, 4103, 113, 106, 8416, 7475,
	4102, 4101, 141, 76, 195, 6551, 181, 161, 208, 111,
	179, 175, 54, 220, 217, 199, 176, 4100, 268, 4099,
	3504, 87, 200, 167, 5189, 4098, 4097, 4095, 88, 4094,
	115, 4093, 4091, 72, 16, 4, 2, 152, 38, 48,
	3, 4090, 44, 128, 51, 29, 4089, 24, 4088, 4087,
	4085, 4084, 47, 4083, 84, 170, 4082, 4081, 288, 4077,
	101, 58, 34, 4076, 23, 227, 4075, 253, 149, 4074,
	4073, 266, 215, 206, 4072, 94, 246, 4066, 4065, 4064,
	4063, 4062, 4061, 151, 17, 146, 4059, 4058, 157, 4057,
	59, 248, 210, 4056, 65, 4054, 4046, 189, 71, 154,
	286, 190, 238, 132, 244, 211, 240, 4045, 4042, 4041,
	222, 4040, 4038, 235, 173, 4037, 4036, 254, 292, 98,
	56, 85, 245, 91, 204, 169, 4026, 214, 4021, 4020,
	290, 197, 224, 41, 9, 11, 102, 116, 4017, 7,
	243, 168, 237, 130, 4016, 6987, 2722, 3555, 4013, 4011,
	166, 144, 82, 133, 165, 272, 97, 4008, 4007, 2665,
	4006, 4005, 4002, 3998, 201, 3995, 3993, 3992, 155, 184,
	226, 3990, 123, 79, 55, 25, 158, 265, 274, 127,
	228, 177, 262, 3989, 3986, 3985, 205, 3982, 77, 139,
	171, 212, 260, 64, 3981, 194, 3980, 162, 2009, 78,
	163, 3977, 231, 3976, 3974, 3972, 3971, 3970, 3968, 3967,
	384, 241, 3965, 3964, 3963, 35, 203, 3961, 269, 159,
	192, 100, 73, 3960, 117, 2318, 3959, 188, 218, 61,
	32, 3957, 33, 3956, 2523, 67, 3954, 0, 12572, 9215,
	11565, 12237, 3953, 2435, 3952, 3951, 3950, 232, 83, 3949,
	3948, 3947, 120, 3946, 86, 3944, 3943, 81, 3942, 27,
	14, 15, 30, 26, 829, 344, 3941, 3934, 50, 150,
	134, 3933, 283, 239, 3932, 3931, 3930, 3929, 104, 3926,
	43, 3925, 39, 3924, 3922, 49, 18, 28, 3921, 3920,
	156, 3919, 131, 257, 3918, 178, 3917, 74, 147, 3915,
	3914, 3913, 68, 66, 267, 219, 221, 112, 3912, 285,
	3911, 213, 3910, 3908, 22, 3905, 3904, 252, 124, 122,
	46, 258, 148, 37, 193, 233, 3903, 3901, 182, 3898,
	3897, 3896, 289, 3893, 3891, 31, 3890, 3888, 3886, 8,
	3885, 3884, 216, 3241, 3883, 3880, 12, 3879, 202,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 11, 11, 7, 7, 7, 7, 8, 8,
	8, 8, 8, 51, 51, 9, 9, 9, 9, 9,
	9, 9, 9, 9, 9, 9, 37, 39, 38, 32,
	32, 33, 33, 34, 35, 35, 10, 10, 10, 6,
	6, 6, 6, 6, 6, 6, 6, 19, 19, 40,
	40, 20, 20, 42, 42, 21, 21, 43, 43, 604,
	604, 604, 605, 605, 606, 606, 606, 24, 45, 17,
	18, 18, 18, 18, 607, 607, 607, 607, 36, 25,
	46, 29, 29, 29, 29, 29, 205, 205, 205, 205,
	23, 23, 41, 41, 243, 243, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 600, 600, 245, 245,
	244, 237, 237, 238, 238, 239, 239, 608, 608, 246,
	246, 246, 247, 247, 14, 14, 14, 14, 14, 14,
	14, 14, 14, 14, 499, 499, 499, 530, 530, 530,
	530, 532, 532, 627, 627, 628, 628, 628, 628, 628,
	134, 134, 396, 396, 396, 55, 55, 55, 55, 55,
	595, 595, 207, 207, 207, 209, 209, 208, 208, 208,
	208, 208, 79, 79, 614, 614, 613, 612, 612, 612,
	615, 615, 615, 206, 206, 206, 130, 130, 130, 130,
	130, 130, 131, 131, 132, 132, 210, 210, 210, 212,
	212, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 216, 16, 16, 16, 113, 113, 113,
	113, 113, 113, 113, 108, 108, 534, 534, 535, 535,
	201, 201, 202, 202, 202, 202, 203, 203, 204, 204,
	204, 70, 70, 213, 213, 215, 215, 214, 214, 214,
	214, 214, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 58, 58, 58, 58, 58, 59, 59, 59, 59,
	59, 59, 60, 60, 60, 60, 60, 60, 61, 61,
	68, 68, 68, 68, 68, 68, 68, 68, 192, 192,
	71, 71, 71, 71, 71, 71, 71, 71, 71, 71,
	71, 71, 71, 76, 76, 76, 76, 76, 629, 629,
	629, 629, 629, 629, 629, 629, 629, 629, 629, 629,
	629, 629, 629, 629, 629, 629, 629, 630, 630, 631,
	631, 632, 632, 633, 633, 633, 633, 633, 633, 633,
	633, 633, 633, 633, 633, 633, 633, 633, 633, 633,
	633, 633, 74, 74, 74, 74, 74, 74, 74, 74,
	74, 74, 74, 74, 74, 74, 74, 74, 74, 85,
	85, 356, 356, 319, 319, 86, 86, 86, 87, 87,
	88, 88, 72, 72, 593, 593, 372, 372, 490, 490,
	73, 601, 601, 601, 603, 603, 602, 602, 90, 90,
	395, 395, 91, 91, 91, 91, 91, 91, 92, 92,
	92, 92, 92, 92, 92, 93, 93, 93, 93, 93,
	93, 93, 93, 93, 93, 93, 93, 93, 93, 100,
	100, 100, 100, 100, 101, 101, 101, 98, 98, 98,
	95, 95, 95, 94, 94, 94, 99, 99, 99, 592,
	308, 308, 97, 97, 97, 96, 96, 96, 373, 373,
	102, 102, 102, 102, 320, 103, 103, 103, 103, 103,
	103, 103, 103, 106, 106, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 105, 105, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 107, 107, 107, 492, 492,
	104, 104, 104, 457, 457, 109, 109, 109, 411, 411,
	110, 110, 110, 110, 110, 111, 111, 111, 111, 111,
	111, 111, 111, 111, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 597, 597, 365, 365,
	271, 271, 271, 271, 122, 122, 122, 122, 123, 123,
	123, 123, 124, 124, 197, 197, 140, 140, 140, 140,
	139, 139, 139, 139, 139, 139, 139, 139, 62, 62,
	62, 63, 63, 64, 64, 65, 65, 66, 66, 67,
	67, 67, 67, 67, 143, 143, 624, 624, 145, 142,
	142, 142, 142, 142, 141, 141, 144, 144, 144, 144,
	146, 148, 148, 148, 148, 148, 147, 147, 147, 147,
	147, 149, 149, 524, 524, 381, 381, 522, 522, 544,
	544, 523, 523, 326, 326, 326, 326, 326, 327, 327,
	327, 533, 533, 533, 533, 533, 533, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	198, 198, 199, 200, 200, 200, 200, 200, 175, 175,
	175, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 382, 382, 178, 178, 178, 162, 162, 151,
	151, 151, 151, 151, 151, 151, 156, 156, 156, 156,
	156, 156, 156, 156, 152, 152, 164, 164, 164, 164,
	164, 157, 157, 158, 158, 158, 159, 159, 159, 159,
	185, 185, 161, 161, 163, 163, 163, 163, 163, 163,
	163, 163, 163, 153, 153, 153, 153, 166, 166, 166,
	166, 418, 418, 418, 190, 190, 165, 165, 165, 165,
	165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
	165, 165, 188, 188, 188, 188, 188, 188, 616, 616,
	617, 617, 617, 182, 182, 182, 182, 182, 182, 471,
	471, 176, 176, 176, 176, 181, 181, 181, 181, 184,
	184, 184, 184, 401, 401, 173, 173, 173, 174, 174,
	174, 179, 179, 180, 357, 357, 177, 177, 183, 183,
	183, 183, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 155, 155, 155, 155, 186, 186, 172, 172, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	634, 634, 168, 168, 168, 167, 167, 167, 167, 170,
	170, 171, 171, 171, 171, 171, 171, 169, 160, 189,
	594, 594, 590, 590, 590, 590, 590, 590, 590, 590,
	591, 591, 591, 591, 596, 596, 114, 114, 114, 114,
	114, 114, 114, 125, 125, 125, 125, 125, 125, 125,
	128, 128, 115, 115, 115, 115, 115, 115, 115, 118,
	118, 116, 116, 116, 116, 117, 117, 80, 80, 80,
	80, 80, 15, 15, 15, 81, 81, 262, 262, 221,
	221, 221, 344, 344, 222, 222, 334, 334, 334, 334,
	217, 217, 218, 218, 219, 220, 220, 82, 82, 635,
	635, 635, 609, 609, 609, 610, 610, 610, 610, 610,
	610, 328, 328, 329, 329, 437, 437, 437, 437, 437,
	332, 332, 332, 333, 333, 333, 333, 333, 333, 333,
	333, 333, 342, 343, 343, 335, 335, 341, 340, 340,
	339, 339, 338, 338, 336, 337, 337, 337, 346, 346,
	345, 348, 348, 347, 436, 553, 553, 555, 555, 555,
	555, 555, 555, 555, 557, 557, 557, 557, 557, 557,
	557, 557, 557, 557, 557, 557, 557, 557, 557, 557,
	557, 419, 419, 636, 636, 637, 638, 551, 551, 551,
	552, 547, 547, 548, 548, 548, 548, 548, 330, 330,
	331, 331, 331, 331, 549, 550, 363, 363, 475, 554,
	554, 556, 556, 558, 639, 639, 639, 639, 639, 639,
	640, 640, 640, 435, 435, 434, 434, 433, 433, 354,
	354, 559, 559, 559, 559, 560, 560, 560, 560, 560,
	563, 562, 561, 561, 561, 561, 561, 84, 84, 84,
	398, 398, 397, 397, 399, 399, 399, 399, 399, 399,
	399, 399, 399, 399, 399, 399, 399, 399, 399, 194,
	194, 274, 274, 274, 78, 78, 78, 12, 12, 12,
	12, 12, 12, 12, 289, 289, 13, 13, 13, 611,
	611, 611, 83, 83, 83, 83, 83, 83, 352, 352,
	352, 273, 273, 273, 273, 273, 273, 273, 273, 273,
	273, 273, 273, 273, 273, 273, 273, 273, 273, 273,
	273, 273, 273, 273, 273, 599, 599, 598, 598, 275,
	275, 642, 642, 89, 89, 89, 89, 89, 89, 89,
	89, 493, 493, 494, 494, 77, 77, 77, 77, 77,
	420, 420, 417, 417, 416, 416, 362, 362, 473, 473,
	473, 474, 279, 279, 280, 280, 240, 240, 240, 31,
	30, 22, 22, 26, 26, 27, 27, 261, 261, 261,
	261, 261, 261, 261, 261, 261, 28, 28, 48, 48,
	48, 48, 49, 49, 49, 49, 52, 52, 53, 53,
	47, 47, 47, 47, 50, 50, 44, 44, 54, 54,
	54, 54, 54, 618, 620, 620, 619, 619, 623, 623,
	623, 623, 623, 623, 621, 621, 622, 622, 625, 625,
	626, 626, 121, 121, 126, 126, 126, 126, 126, 127,
	127, 127, 127, 129, 129, 129, 129, 138, 138, 193,
	193, 193, 193, 193, 193, 193, 56, 56, 56, 56,
	69, 69, 69, 69, 136, 644, 644, 644, 137, 137,
	137, 643, 643, 272, 272, 430, 430, 431, 431, 645,
	645, 432, 432, 432, 432, 432, 265, 264, 266, 266,
	267, 267, 75, 75, 75, 255, 255, 254, 256, 256,
	257, 257, 252, 252, 536, 536, 259, 259, 259, 260,
	260, 248, 248, 249, 249, 250, 250, 251, 251, 263,
	263, 531, 531, 646, 646, 112, 112, 112, 196, 196,
	318, 318, 318, 427, 427, 427, 355, 355, 286, 286,
	429, 429, 429, 429, 429, 394, 394, 394, 195, 195,
	370, 370, 384, 384, 385, 385, 487, 487, 386, 119,
	119, 120, 120, 135, 135, 225, 225, 223, 223, 223,
	223, 223, 223, 223, 223, 230, 230, 231, 231, 232,
	232, 233, 234, 234, 234, 234, 374, 374, 235, 235,
	235, 224, 224, 224, 226, 226, 226, 226, 226, 226,
	226, 229, 229, 229, 229, 236, 236, 236, 228, 228,
	570, 570, 570, 572, 572, 574, 574, 573, 573, 569,
	569, 571, 571, 641, 641, 400, 400, 400, 351, 353,
	349, 349, 350, 350, 360, 360, 358, 359, 359, 361,
	361, 472, 472, 472, 241, 241, 241, 391, 391, 391,
	391, 392, 392, 423, 423, 421, 421, 421, 421, 422,
	422, 424, 424, 424, 425, 425, 426, 426, 388, 388,
	389, 389, 390, 390, 390, 390, 453, 453, 227, 227,
	227, 367, 367, 367, 368, 368, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 444, 444, 442,
	442, 442, 442, 476, 476, 476, 476, 476, 476, 476,
	476, 476, 477, 478, 478, 369, 369, 479, 428, 428,
	588, 588, 588, 589, 589, 470, 470, 480, 480, 480,
	480, 480, 480, 468, 468, 469, 469, 488, 489, 489,
	404, 404, 404, 404, 402, 402, 405, 405, 405, 405,
	405, 403, 403, 481, 481, 481, 481, 393, 393, 482,
	482, 482, 482, 483, 484, 484, 485, 485, 438, 439,
	439, 495, 495, 495, 495, 497, 366, 366, 366, 366,
	366, 546, 545, 545, 496, 496, 496, 496, 496, 496,
	496, 496, 496, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 511, 511, 511, 511, 511,
	511, 511, 511, 511, 511, 512, 512, 512, 512, 512,
	512, 512, 498, 498, 498, 498, 498, 502, 502, 502,
	501, 501, 501, 501, 501, 501, 501, 501, 501, 501,
	501, 503, 503, 508, 508, 509, 509, 509, 504, 505,
	510, 510, 510, 510, 647, 647, 514, 514, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 500, 500, 500,
	507, 507, 507, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 412, 412, 414, 414,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	446, 446, 446, 446, 446, 446, 446, 446, 446, 446,
	446, 446, 446, 446, 446, 446, 446, 446, 446, 446,
	446, 446, 446, 446, 446, 446, 446, 446, 446, 446,
	446, 447, 447, 447, 447, 448, 448, 448, 448, 448,
	448, 448, 448, 448, 448, 448, 448, 448, 448, 448,
	448, 448, 448, 448, 448, 448, 448, 448, 448, 448,
	564, 564, 564, 564, 564, 564, 564, 564, 449, 449,
	567, 567, 568, 568, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 566, 566, 566,
	566, 566, 566, 566, 566, 566, 566, 566, 566, 566,
	566, 566, 566, 566, 566, 566, 566, 566, 566, 566,
	566, 566, 566, 566, 566, 566, 566, 566, 566, 566,
	566, 566, 566, 566, 566, 575, 575, 576, 576, 578,
	578, 579, 579, 580, 581, 581, 581, 582, 583, 583,
	577, 577, 584, 584, 584, 584, 585, 585, 586, 586,
	586, 586, 586, 587, 587, 587, 587, 587, 459, 459,
	460, 460, 466, 466, 466, 323, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 323,
	325, 325, 324, 276, 276, 276, 276, 276, 276, 379,
	379, 377, 377, 377, 380, 380, 378, 378, 376, 376,
	375, 375, 456, 456, 454, 454, 458, 458, 406, 406,
	513, 513, 513, 513, 513, 513, 513, 513, 407, 407,
	407, 415, 408, 408, 409, 409, 409, 409, 409, 450,
	451, 410, 410, 410, 452, 452, 461, 465, 465, 464,
	463, 463, 462, 462, 440, 440, 441, 441, 387, 387,
	648, 648, 383, 383, 486, 486, 486, 486, 322, 322,
	371, 371, 321, 321, 313, 313, 314, 314, 314, 314,
	364, 364, 467, 467, 515, 515, 516, 516, 517, 517,
	518, 518, 519, 520, 521, 455, 455, 297, 296, 283,
	284, 295, 294, 293, 282, 285, 290, 291, 292, 287,
	288, 304, 303, 302, 253, 258, 309, 310, 310, 312,
	312, 311, 311, 299, 300, 301, 491, 281, 315, 315,
	316, 316, 316, 317, 317, 317, 317, 277, 277, 278,
	278, 305, 305, 306, 307, 307, 298, 298, 298, 268,
	268, 268, 269, 269, 270, 270, 529, 529, 526, 526,
	526, 527, 527, 527, 528, 528, 528, 528, 525, 525,
	525, 525, 525, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 541, 541, 541, 541, 541, 541, 541, 541, 541,
	541, 541, 541, 541, 541, 541, 541, 541, 541, 541,
	541, 541, 541, 541, 541, 541, 541, 541, 541, 541,
	541, 541, 541, 541, 541, 541, 541, 541, 541, 541,
	541, 541, 541, 541, 541, 541, 541, 541, 541, 541,
	541, 541, 541, 538, 538, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 540, 542, 542, 542, 542, 542, 542,
	542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
	542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
	542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
	542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
	542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
	542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
	542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
	542, 542, 542, 542, 543, 543,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 3, 1, 1, 1, 3, 1, 1,
	1, 1, 3, 4, 6, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 6, 4, 4, 6,
	9, 6, 8, 4, 4, 5, 1, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 6, 4,
	6, 6, 9, 6, 9, 6, 5, 6, 5, 1,
	1, 1, 1, 1, 1, 0, 1, 6, 6, 4,
	8, 7, 10, 9, 4, 4, 4, 3, 4, 4,
	4, 7, 7, 9, 8, 9, 5, 3, 5, 7,
	4, 12, 4, 12, 1, 3, 5, 5, 2, 5,
	3, 6, 4, 4, 4, 6, 5, 6, 5, 6,
	4, 8, 3, 8, 4, 2, 3, 10, 3, 6,
	4, 3, 1, 3, 4, 4, 2, 1, 1, 3,
	1, 3, 2, 4, 3, 2, 3, 2, 0, 1,
	1, 0, 2, 0, 7, 10, 6, 8, 6, 6,
	6, 9, 4, 3, 2, 2, 0, 1, 1, 1,
	1, 1, 3, 1, 3, 6, 4, 6, 7, 9,
	6, 2, 2, 3, 0, 8, 6, 8, 7, 2,
	0, 1, 2, 5, 0, 1, 3, 3, 1, 1,
	3, 3, 12, 3, 1, 1, 2, 1, 4, 0,
	3, 3, 0, 4, 6, 0, 5, 7, 6, 8,
	8, 2, 1, 3, 1, 3, 2, 5, 0, 1,
	3, 3, 3, 3, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 1, 3, 3, 3, 6, 4, 9,
	7, 12, 9, 2, 7, 2, 1, 1, 1, 3,
	3, 0, 3, 1, 3, 1, 1, 3, 2, 5,
	0, 7, 5, 2, 0, 1, 2, 3, 1, 1,
	2, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	2, 3, 3, 3, 3, 3, 3, 5, 3, 3,
	5, 3, 3, 5, 3, 3, 5, 3, 4, 3,
	6, 6, 6, 6, 6, 8, 4, 4, 1, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 1, 1,
	2, 1, 2, 6, 3, 8, 5, 3, 4, 3,
	3, 4, 3, 4, 4, 4, 3, 5, 7, 3,
	3, 4, 3, 3, 3, 3, 3, 2, 0, 1,
	0, 1, 0, 4, 3, 3, 3, 3, 3, 6,
	4, 4, 4, 3, 5, 3, 3, 3, 3, 3,
	3, 3, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 4, 1, 2, 1, 2, 1, 2, 7,
	3, 2, 0, 1, 3, 3, 1, 0, 1, 2,
	2, 1, 6, 5, 1, 2, 1, 3, 2, 0,
	7, 2, 5, 0, 1, 3, 3, 1, 9, 3,
	2, 0, 2, 2, 2, 2, 2, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 4,
	6, 5, 7, 3, 4, 6, 3, 4, 6, 3,
	5, 7, 3, 4, 6, 3, 4, 6, 3, 1,
	1, 3, 4, 6, 3, 3, 5, 3, 1, 3,
	2, 2, 2, 2, 1, 2, 2, 5, 3, 3,
	6, 6, 3, 1, 1, 1, 1, 2, 1, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 2, 1, 1, 2, 1, 1, 1, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 2, 1, 2, 1, 3,
	5, 7, 2, 3, 0, 3, 5, 2, 3, 0,
	2, 3, 2, 3, 2, 7, 4, 7, 8, 8,
	9, 11, 5, 2, 6, 9, 4, 7, 7, 10,
	7, 10, 10, 13, 5, 2, 2, 1, 1, 3,
	1, 1, 1, 1, 1, 2, 1, 2, 2, 3,
	2, 2, 4, 3, 2, 2, 1, 2, 1, 3,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	3, 5, 4, 6, 4, 3, 0, 1, 3, 2,
	4, 2, 4, 1, 6, 3, 1, 1, 5, 3,
	3, 2, 2, 6, 3, 3, 3, 3, 4, 4,
	3, 1, 3, 3, 2, 2, 1, 3, 3, 3,
	1, 2, 1, 1, 2, 2, 3, 1, 1, 1,
	1, 1, 3, 2, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 1, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 2, 1, 1, 1, 2,
	2, 2, 1, 3, 3, 3, 3, 3, 2, 3,
	3, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 3, 5, 7, 3, 3, 3, 4,
	4, 6, 5, 5, 5, 3, 4, 4, 3, 4,
	4, 3, 4, 4, 5, 3, 5, 5, 5, 7,
	3, 3, 3, 4, 6, 4, 2, 6, 4, 3,
	2, 3, 4, 3, 5, 3, 6, 5, 6, 3,
	5, 6, 3, 5, 3, 5, 3, 3, 4, 4,
	5, 0, 1, 1, 1, 1, 3, 2, 3, 4,
	3, 4, 3, 5, 3, 4, 4, 3, 4, 5,
	3, 4, 3, 4, 4, 5, 3, 3, 1, 1,
	0, 2, 3, 5, 4, 6, 4, 6, 4, 1,
	0, 3, 4, 4, 5, 7, 5, 3, 3, 3,
	4, 4, 5, 2, 0, 4, 2, 3, 4, 2,
	3, 3, 3, 5, 2, 0, 3, 3, 4, 3,
	3, 3, 3, 4, 4, 4, 4, 4, 4, 4,
	3, 4, 5, 4, 4, 2, 3, 2, 3, 6,
	6, 7, 9, 7, 9, 4, 3, 4, 4, 5,
	1, 1, 10, 10, 3, 5, 5, 5, 3, 5,
	6, 4, 4, 5, 5, 2, 3, 2, 5, 4,
	2, 0, 1, 1, 1, 1, 3, 2, 2, 2,
	2, 2, 2, 1, 2, 0, 1, 2, 1, 2,
	1, 2, 2, 1, 2, 1, 2, 1, 2, 2,
	4, 3, 3, 7, 3, 3, 7, 3, 3, 3,
	3, 3, 3, 3, 3, 4, 3, 3, 6, 5,
	8, 3, 6, 6, 3, 12, 15, 1, 0, 1,
	2, 3, 0, 2, 0, 4, 0, 4, 5, 4,
	1, 1, 1, 3, 3, 1, 3, 10, 13, 0,
	2, 3, 1, 1, 0, 1, 2, 2, 2, 2,
	1, 1, 0, 1, 3, 1, 1, 1, 2, 3,
	3, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 1, 0, 1, 0, 1, 1, 0,
	1, 4, 1, 0, 3, 7, 7, 1, 1, 3,
	7, 1, 3, 11, 3, 2, 0, 3, 1, 2,
	2, 3, 2, 6, 2, 1, 2, 2, 3, 6,
	4, 2, 3, 5, 5, 5, 2, 5, 5, 2,
	2, 2, 0, 1, 1, 3, 4, 10, 11, 9,
	5, 3, 1, 5, 9, 7, 11, 3, 3, 0,
	2, 4, 3, 3, 1, 6, 1, 3, 1, 2,
	0, 1, 2, 3, 0, 1, 3, 3, 2, 2,
	1, 1, 1, 4, 0, 3, 0, 4, 0, 3,
	0, 2, 2, 2, 0, 1, 1, 2, 2, 0,
	3, 3, 2, 1, 1, 2, 2, 5, 8, 4,
	1, 0, 1, 2, 2, 1, 2, 3, 3, 2,
	2, 3, 2, 2, 2, 2, 2, 3, 1, 4,
	2, 3, 2, 2, 4, 7, 3, 4, 6, 5,
	7, 5, 5, 3, 3, 0, 2, 2, 2, 1,
	1, 1, 8, 10, 11, 8, 11, 5, 4, 2,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 0, 3,
	3, 0, 1, 8, 11, 3, 6, 6, 5, 3,
	4, 1, 0, 1, 3, 16, 19, 15, 18, 4,
	2, 0, 1, 0, 1, 0, 1, 3, 2, 4,
	2, 3, 1, 0, 2, 0, 1, 1, 0, 9,
	6, 6, 8, 6, 8, 5, 7, 2, 6, 7,
	4, 4, 5, 2, 4, 6, 6, 8, 6, 7,
	8, 9, 6, 7, 8, 9, 6, 8, 6, 8,
	6, 7, 8, 9, 6, 8, 6, 8, 6, 6,
	8, 8, 4, 7, 3, 0, 7, 10, 1, 1,
	1, 1, 2, 2, 3, 0, 3, 0, 1, 0,
	2, 0, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 1,
	2, 1, 2, 1, 2, 1, 3, 2, 3, 2,
	2, 2, 2, 2, 2, 1, 1, 0, 2, 4,
	2, 1, 0, 2, 1, 1, 0, 1, 3, 1,
	0, 1, 1, 1, 1, 1, 2, 3, 2, 2,
	1, 2, 14, 16, 3, 1, 0, 4, 1, 0,
	2, 2, 3, 0, 1, 1, 4, 4, 5, 1,
	0, 3, 0, 3, 0, 3, 0, 3, 0, 4,
	0, 3, 0, 1, 0, 6, 7, 3, 6, 3,
	1, 3, 1, 1, 4, 2, 1, 3, 1, 3,
	4, 8, 11, 7, 10, 2, 2, 0, 10, 3,
	2, 0, 1, 3, 1, 1, 3, 3, 5, 6,
	4, 5, 4, 1, 1, 3, 3, 1, 2, 4,
	4, 2, 3, 5, 5, 1, 3, 1, 0, 1,
	2, 3, 2, 4, 2, 3, 0, 2, 0, 2,
	1, 2, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 8, 8, 8, 2, 4, 4, 4, 2, 2,
	2, 2, 3, 1, 3, 1, 2, 6, 7, 1,
	0, 1, 0, 1, 0, 1, 1, 0, 1, 5,
	1, 0, 1, 0, 1, 0, 3, 3, 5, 1,
	3, 3, 4, 5, 2, 2, 0, 2, 2, 1,
	1, 1, 0, 1, 0, 2, 2, 5, 4, 2,
	3, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	1, 3, 1, 3, 3, 3, 2, 0, 4, 2,
	5, 3, 2, 0, 1, 3, 3, 5, 1, 1,
	1, 1, 1, 1, 1, 3, 5, 1, 3, 2,
	4, 4, 0, 4, 4, 3, 4, 1, 5, 3,
	4, 5, 5, 1, 5, 1, 3, 2, 0, 3,
	0, 2, 3, 1, 3, 2, 0, 3, 5, 6,
	4, 6, 4, 3, 2, 1, 0, 5, 1, 0,
	2, 2, 2, 1, 1, 0, 1, 1, 1, 1,
	0, 4, 2, 1, 2, 2, 4, 1, 3, 1,
	2, 3, 2, 4, 1, 0, 1, 0, 2, 1,
	0, 2, 5, 7, 2, 1, 2, 4, 3, 5,
	0, 1, 3, 5, 1, 2, 1, 1, 1, 1,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 4,
	6, 6, 1, 1, 1, 1, 1, 3, 5, 0,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
	1, 3, 0, 5, 4, 1, 2, 1, 4, 1,
	1, 2, 1, 1, 1, 1, 1, 0, 1, 2,
	5, 1, 4, 2, 5, 1, 4, 3, 3, 0,
	1, 2, 4, 1, 1, 1, 1, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 1, 0, 1, 4,
	1, 3, 3, 3, 5, 2, 2, 2, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 3, 3, 3, 2, 2, 3, 5,
	4, 6, 3, 5, 4, 6, 4, 6, 5, 7,
	3, 3, 3, 3, 3, 4, 3, 2, 4, 2,
	3, 3, 4, 3, 4, 3, 4, 5, 6, 6,
	7, 6, 7, 6, 7, 3, 4, 4, 1, 3,
	1, 3, 3, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 3, 5, 6, 6,
	7, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	6, 1, 1, 1, 1, 1, 1, 2, 1, 5,
	5, 6, 3, 1, 1, 1, 2, 2, 2, 4,
	3, 5, 6, 8, 6, 5, 4, 3, 2, 2,
	4, 1, 1, 1, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 6, 6, 8, 8,
	6, 4, 6, 6, 6, 4, 1, 3, 3, 3,
	3, 3, 4, 3, 3, 4, 3, 3, 4, 3,
	3, 4, 3, 3, 3, 3, 3, 4, 3, 4,
	3, 4, 3, 4, 4, 3, 6, 5, 5, 5,
	4, 4, 3, 4, 3, 5, 0, 5, 0, 2,
	0, 1, 3, 3, 2, 2, 0, 6, 1, 0,
	3, 0, 3, 3, 3, 0, 1, 4, 2, 2,
	2, 2, 2, 3, 2, 2, 3, 0, 4, 1,
	1, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 1, 1, 1, 2, 1, 2, 2,
	3, 1, 2, 3, 2, 3, 2, 3, 1, 0,
	1, 3, 1, 3, 3, 3, 1, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 3,
	1, 2, 3, 0, 3, 3, 2, 2, 1, 2,
	2, 3, 2, 1, 1, 1, 5, 1, 2, 4,
	2, 0, 1, 0, 3, 5, 1, 0, 1, 2,
	1, 0, 1, 3, 3, 2, 1, 1, 1, 3,
	1, 3, 3, 1, 1, 1, 1, 5, 3, 1,
	1, 3, 1, 1, 1, 1, 2, 2, 1, 1,
	2, 2, 1, 1, 1, 3, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	3, 1, 0, 1, 1, 1, 1, 1, 1, 1,
	3, 5, 7, 1, 7, 5, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 5, 1, 1, 1, 1,
	1, 1, 1, 0, 3, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 610, -105, -102, -70, -68, -109, -110,
	-91, -111, -104, -133, -138, -119, -120, -121, -134, -140,
	-193, -198, -199, -200, -3, -55, -57, -71, -90, -92,
	-103, -113, -112, -114, -122, -130, -125, -108, -62, -135,
	-139, -150, -194, -195, -196, 32, 31, 100, 80, 156,
	129, 138, 206, 391, 437, 449, 406, 143, 428, 411,
	-144, -145, 467, -56, -69, -137, -136, 73, 130, 421,
	-4, -12, -16, 29, 46, -58, -59, -60, -61, 62,
	-78, -74, -85, -79, -72, -73, -76, -629, 102, -571,
	-93, -96, -129, -633, 164, 224, -115, -116, -117, 373,
	-123, -124, 430, -126, -127, -128, 433, 165, -64, -63,
	158, -223, -225, -142, -141, -143, -197, -151, -152, -153,
	-154, -155, -156, -157, -159, -185, -160, -161, -162, -163,
	-164, -165, -169, -188, -166, -167, -168, -171, -170, -172,
	-177, -173, -174, -175, -176, -178, -179, -181, -182, -183,
	-184, -186, -187, 472, -180, -189, -158, 533, 49, 488,
	82, 148, 441, 21, -5, -6, -7, -8, -9, -10,
	-11, -15, -14, -54, -75, -77, -80, -81, -82, -89,
	-83, -84, -570, -94, -95, -98, -100, -101, -97, -99,
	429, 583, -226, -224, 607, 548, -19, -24, -20, -21,
	-23, -25, -22, -26, -27, -28, -40, -45, -42, -43,
	-41, -44, -46, -47, -48, -49, -50, -51, -52, -53,
	-30, -36, -37, -31, -32, -33, -34, -35, -38, -39,
	-17, -18, -29, 570, 579, -229, -227, -228, -236, 459,
	556, 508, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, -320, 2, -299, -305, -306, -307,
	-298, -268, -540, -543, 4, -537, -541, 171, 234, 336,
	21, 23, 22, 24, 25, 26, 27, 29, 30, 41,
	42, 44, 45, 46, 47, 48, 49, 53, 55, 59,
	60, 61, 62, 63, 64, 68, 73, 74, 79, 80,
	81, 82, 83, 84, 85, 91, 88, 89, 90, 92,
	94, 96, 97, 98, 99, 100, 101, 103, 104, 105,
	107, 108, 109, 117, 118, 119, 120, 121, 123, 129,
	124, 130, 133, 128, 132, 134, 136, 137, 138, 141,
	142, 143, 145, 146, 147, 149, 150, 151, 153, 154,
	156, 157, 158, 161, 159, 162, 160, 163, 164, 165,
	166, 169, 177, 178, 179, 184, 186, 187, 188, 192,
	193, 194, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 207, 211, 213, 214, 215, 216, 217, 223, 224,
	226, 227, 228, 229, 230, 235, 236, 237, 240, 246,
	247, 251, 252, 253, 255, 259, 260, 261, 262, 263,
	264, 266, 268, 267, 270, 273, 274, 277, 278, 279,
	280, 281, 282, 286, 287, 283, 288, 289, 291, 292,
	295, 293, 296, 297, 294, 298, 300, 301, 302, 303,
	304, 305, 306, 307, 308, 309, 310, 311, 299, 314,
	312, 316, 317, 318, 319, 334, 329, 330, 331, 323,
	324, 320, 325, 321, 322, 326, 327, 333, 328, 338,
	339, 340, 343, 221, 345, 346, 349, 367, 353, 354,
	355, 358, 359, 362, 365, 366, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 378, 379, 381, 382, 383,
	385, 386, 387, 389, 391, 392, 394, 395, 397, 398,
	399, 400, 401, 402, 403, 405, 406, 408, 407, 409,
	411, 413, 414, 415, 421, 428, 422, 424, 425, 426,
	427, 429, 430, 431, 432, 433, 435, 436, 437, 439,
	440, 441, 442, 443, 445, 447, 448, 452, 453, 469,
	470, 490, 449, 450, 451, 454, 455, 456, 457, 458,
	462, 460, 461, 463, 464, 465, 467, 468, 471, 472,
	474, 475, 476, 477, 478, 479, 480, 483, 485, 486,
	487, 488, 507, 489, 491, 495, 496, 497, 498, 492,
	493, 506, 500, 501, 503, 504, 509, 510, 511, 512,
	513, 514, 515, 516, 518, 526, 527, 528, 530, 533,
	534, 535, 536, 524, 538, 539, 542, 543, 544, 547,
	545, 546, 548, 550, 553, 554, 555, 561, 560, 562,
	563, 565, 566, 571, 572, 574, 575, 576, 36, 50,
	51, 54, 56, 58, 69, 70, 71, 75, 125, 126,
	155, 167, 168, 180, 195, 196, 208, 210, 218, 219,
	220, 241, 242, 244, 249, 271, 342, 344, 360, 364,
	380, 384, 388, 390, 404, 444, 481, 494, 499, 519,
	520, 521, 522, 529, 531, 556, 557, 558, 564, 573,
	-320, 2, -299, 351, -292, 2, -268, -268, 391, 28,
	2, 28, 379, 461, 511, 513, 2, -597, -365, 2,
	28, -271, -268, 102, 206, 459, -292, 2, -597, 206,
	-365, 25, 2, -268, 2, 365, 22, 27, 66, 77,
	98, 141, 166, 189, 192, -632, 367, 398, 447, 463,
	506, 516, 530, 2, 560, 292, 460, 508, 234, 120,
	535, 454, -611, 452, 453, 365, 396, 439, 209, 549,
	-272, 2, 449, -268, 292, 2, 610, 94, 74, 444,
	464, -147, 2, 282, 527, -148, -149, -146, 519, -524,
	454, 439, 314, -268, 610, 610, 610, 28, -281, -268,
	508, 234, 454, 120, 504, 610, 2, 508, 370, 560,
	460, 120, 401, 234, 535, 192, 141, 27, 454, -611,
	584, 585, 292, 127, -595, 2, -590, 4, -541, -537,
	-314, -313, 508, 514, 120, -307, -298, 599, -306, 610,
	610, 610, 610, 2, 252, 253, 400, 399, 464, 465,
	28, 610, 610, 610, 610, 452, 2, 166, 22, 27,
	66, 93, 98, 127, 189, 192, 356, -630, 367, 398,
	463, 506, 510, 516, 530, -610, 489, 68, 427, 454,
	-609, -611, 292, 535, 141, -416, 120, 282, 204, 543,
	513, 511, 541, 133, 240, 546, 545, 610, 610, -106,
	2, 607, 32, 31, -105, -109, 143, 467, -216, 508,
	245, 2, -268, 610, 610, 610, 2, 252, 253, 452,
	453, 28, 610, 610, 190, -590, 2, 610, 610, 610,
	2, 28, 252, 253, 452, 453, 245, 2, 68, 456,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 2, -191, 464, 489,
	215, 47, 46, 74, 28, 397, 79, 371, 121, 127,
	150, 536, 207, 234, 235, 260, 93, 94, -418, 44,
	253, 68, 252, 453, -616, 452, -471, 509, 455, 461,
	503, 264, 449, 527, 102, 550, 440, 576, 401, 402,
	501, 415, 283, 159, 191, 4, 120, 314, 439, 466,
	268, 267, 519, 282, 448, 374, 84, 610, -641, 2,
	508, -643, 2, 527, 527, 2, -643, 2, -643, 2,
	-643, 2, -644, 527, 573, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, -224, -226, -225, 610, 610, 610, 610,
	610, 610, 610, -191, 464, 2, 74, 28, 28, -358,
	-360, 540, 243, 152, 357, -223, -225, 2, -570, -522,
	2, -445, -544, -447, 597, 598, 590, 505, 67, -324,
	335, 577, -459, 127, 541, 351, -543, -448, -461, 155,
	367, 444, -380, 8, 9, 5, 6, 7, -277, -449,
	-455, 532, 170, 341, -317, 611, 10, 607, -567, -225,
	-460, 37, 210, 65, -526, -316, -278, -498, 244, -315,
	-298, -564, -565, 4, -537, -538, -527, -501, -509, -505,
	-506, -512, -268, -540, 77, 111, 112, 110, 115, 114,
	285, 284, 116, 113, 466, 549, 66, 36, 218, 219,
	249, 342, 220, 75, -566, 142, -539, 241, 242, 481,
	51, 404, 180, 126, 125, 344, 56, 54, 557, -510,
	122, 519, 520, 521, 522, 195, 196, 58, 167, 168,
	364, 388, 499, 529, 531, 208, 271, 43, 106, 191,
	239, 222, 248, 250, 254, 272, 275, 315, 332, 337,
	361, 363, 438, 473, -647, 558, 494, 69, 70, -572,
	407, -573, -292, -572, 610, 610, 612, 610, -349, -351,
	-353, 2, 28, 139, 607, 2, -476, 2, -477, -481,
	-225, 265, -480, 607, -478, 605, -299, 352, -568, 445,
	-564, -565, -277, -298, -316, 4, -537, -539, 609, -354,
	607, 120, 454, 508, 78, 234, 93, 166, 192, -411,
	607, -268, 28, 351, 523, 612, -350, 395, -457, 607,
	351, 354, 190, 354, 60, 296, 2, 2, 2, 2,
	2, 218, -268, 508, 119, 2, 263, 2, 2, 2,
	2, 2, 2, 2, -373, 218, 2, -299, 560, -373,
	218, 2, -373, 218, 2, -417, 2, 87, -282, 218,
	2, -268, -308, 218, 2, -303, -305, -312, 218, 2,
	-310, -268, -532, 218, 2, -530, 4, -537, 116, 466,
	-445, 2, -135, 2, 60, -268, 560, 2, 469, 2,
	607, -147, 2, 71, 527, 43, 464, -148, 2, -431,
	2, -432, -264, -265, -266, -488, -267, 251, 394, 403,
	580, 131, 335, 576, -624, 190, 589, 523, -522, -522,
	-522, -381, 609, 2, 2, 2, 2, 2, 2, -481,
	218, -299, 2, -296, -525, 4, -537, -541, -538, -542,
	-540, 28, 31, 32, 33, 35, 37, 38, 39, 40,
	57, 65, 66, 72, 76, 78, 87, 93, 102, 110,
	111, 113, 112, 114, 115, 116, 127, 131, 135, 139,
	140, 144, 148, 152, 170, 172, 185, 189, 190, 206,
	209, 212, 225, 238, 243, 245, 265, 269, 276, 284,
	285, 335, 341, 347, 351, 352, 356, 357, 377, 393,
	410, 434, 459, 466, 484, 502, 508, 517, 523, 525,
	532, 540, 541, 549, 551, 559, 567, 568, 569, 570,
	-543, 77, 2, -481, 218, 2, -302, 218, -481, -305,
	2, -282, 2, -445, -604, 515, 162, 422, 2, -321,
	218, -299, -301, -305, -303, 2, 2, 2, 2, -310,
	2, -530, 218, 2, 28, 28, 560, 395, 245, 523,
	612, -371, -313, -314, -521, 8, -364, -268, 609, -445,
	2, -135, -118, 2, 185, -445, 218, 2, -135, 218,
	2, -445, 218, 2, -135, 218, 2, -268, 2, -612,
	2, -534, 218, -529, 10, -528, 5, 4, -537, -541,
	-538, 218, -268, 2, 296, 2, 2, 530, 2, 98,
	508, 119, 2, 426, -631, 447, 534, 2, 2, 2,
	2, 2, 2, 2, 508, -287, 2, -268, 185, 492,
	-310, 218, -311, 2, 460, -642, 407, -530, 218, 2,
	560, -303, 218, 2, -303, 234, 247, -282, 218, 2,
	513, 511, 513, 511, 190, 2, 245, 2, 245, 2,
	-482, 2, -483, -477, -484, 605, 352, -492, 2, -491,
	-528, 556, -106, 607, -106, 607, 464, 607, -534, -299,
	-299, -445, 2, -135, -118, 2, -445, 2, -135, 2,
	-268, 2, -132, -534, -131, 607, 190, -268, 2, -445,
	2, -135, -118, 2, -445, 2, -135, 2, -216, 185,
	2, 120, 508, -191, 2, 185, 551, 2, 8, 2,
	225, -534, 455, 402, 177, 2, 469, 2, 470, 74,
	-418, 576, 74, 190, 2, 190, 2, -401, 2, 570,
	395, 190, 2, 2, -594, 2, 351, 190, 2, 190,
	2, 190, 2, 190, 2, 190, 2, -190, 465, 528,
	507, 399, 253, 2, -135, 567, -118, 253, 252, -445,
	567, 2, -617, 185, 453, -445, 2, 526, 262, 160,
	190, -401, 2, 190, 2, 190, 2, 5, 2, 400,
	490, 2, 251, 394, 490, 2, -299, 508, 560, 460,
	120, 28, 2, 452, 2, 2, 88, 89, 190, 2,
	190, 2, 205, 190, 2, 190, 508, -382, 609, 576,
	2, -393, -481, -430, -431, -430, 523, -358, -360, -191,
	469, 2, -230, -391, -232, 185, -421, -422, -233, 276,
	172, 347, -234, -400, 28, 139, -400, -400, 60, 608,
	608, 11, 12, 76, 41, 597, 598, 599, 600, 183,
	601, 602, 595, 596, 594, 587, 588, 592, 257, 258,
	95, 591, 589, 86, 290, 446, 173, 174, 175, 176,
	423, 232, 34, 233, 14, 15, 16, -324, 33, 356,
	275, 577, 222, 473, 590, 17, 18, 19, 248, 250,
	337, 50, 225, -276, 367, -323, 505, 67, -445, -445,
	-445, -445, -445, -445, -445, -445, 363, 607, -387, -440,
	605, -225, 607, 607, 607, 607, -521, -225, -445, -459,
	608, -378, 607, -225, -459, -454, 607, 444, 605, 607,
	-462, -445, 5, 5, 5, 607, 609, -575, 571, 185,
	607, 607, 607, 607, 607, 607, 607, 607, 607, 607,
	607, 607, 607, 607, 607, 607, 390, -503, 607, -502,
	607, -502, -502, 561, -500, 607, 579, 572, 607, -500,
	607, 607, 607, 607, 607, 607, 607, 607, 607, 607,
	607, 607, 607, 561, 612, -572, -354, 607, -383, -486,
	-445, 599, -383, -383, 351, -375, -445, 106, -404, 254,
	315, 191, 272, 438, 239, -442, 611, -442, -470, 579,
	-225, -478, -298, -225, -480, 607, -476, -470, -107, -521,
	-90, -103, -112, -135, -150, -195, -196, 599, -299, 607,
	190, 607, 609, -525, 190, -364, -282, -309, -268, -299,
	-315, -316, -321, -293, -268, 2, 2, 138, -375, -590,
	535, 454, 28, 460, -532, -271, 38, -456, -495, -496,
	-546, 611, -545, -498, -508, -504, -507, 380, 384, -527,
	54, 557, -510, 244, 4, -537, -539, 241, 242, 481,
	51, 404, 180, 126, 125, 344, 56, 519, 520, 521,
	522, 195, 196, 58, 558, 494, 69, 70, -590, 535,
	454, 28, 460, 185, -532, 185, -532, 2, 2, 155,
	2, 2, 2, -268, -246, 612, 64, 431, 155, -373,
	218, -246, 155, -246, 155, -322, 218, -321, -246, 155,
	-246, 612, 155, -246, 612, 155, 609, 612, 155, -532,
	2, -417, -524, -375, 38, -431, 2, 127, 4, 5,
	-645, 612, 274, -327, 289, 334, 214, 352, 574, 345,
	131, -533, 5, 4, -455, -467, 127, 282, 244, -515,
	-517, 8, -516, 9, -518, 597, 598, -523, -522, 109,
	609, -525, -243, 424, 467, 366, -242, 24, 29, 143,
	236, 319, 554, 161, -339, 237, 429, -336, 370, 155,
	485, 544, -604, -607, 451, 515, 162, 422, 90, 345,
	467, 366, 424, 155, -397, -399, 38, 118, 319, 365,
	61, 228, 294, 295, 488, 564, 155, 467, 366, 424,
	366, -13, -257, 24, 143, -259, -254, 467, -607, 99,
	424, 583, 429, 376, 500, 393, -607, -604, 270, -606,
	566, 333, -245, 485, 544, -604, -607, 451, 424, -244,
	-341, -336, 370, 155, 611, 24, 143, 424, 467, 366,
	-627, -628, 29, 424, 366, -598, -289, -569, 225, 570,
	155, -289, -289, -481, 218, -621, 185, 2, -614, -131,
	266, 5, 10, -534, -131, -371, 612, 612, -525, 599,
	453, 452, 155, 155, 155, 155, 253, 185, 335, 335,
	570, 2, 2, 2, 2, 2, 192, -609, -632, 2,
	2, -299, 218, -356, 351, -593, -372, 508, -299, 185,
	335, 43, -302, 218, 2, -305, 560, -598, 335, -304,
	218, -299, 38, 607, 335, 2, -417, 2, 234, -569,
	335, -482, -318, -299, -477, -318, 467, -292, 38, -442,
	-299, 608, 612, -492, -492, -534, -204, 570, 190, 607,
	-216, 570, 570, 253, -489, 612, -488, 225, -535, -534,
	-132, -534, 427, 253, -534, -593, -282, 2, -299, 2,
	508, 255, -534, -204, 225, -534, -534, -534, -524, 28,
	470, 2, -190, 465, 528, 89, 470, 2, -299, 508,
	120, 234, 80, -621, 185, 2, -268, -596, 185, -591,
	439, 454, 535, -590, -299, 120, -299, 120, -299, 120,
	-299, -299, 2, 2, 2, 2, 2, 85, 2, -135,
	-445, 2, 85, 2, 46, 486, -617, 185, 2, 526,
	2, 526, 2, -268, -268, -268, 489, 274, -299, -299,
	-299, -300, -305, 455, 509, 536, 453, -445, 2, -634,
	2, 190, 185, 2, 508, 234, 508, 234, 120, 190,
	74, 120, 28, 508, 450, 609, 4, -246, 612, -272,
	-230, -391, -524, -392, -391, -231, -230, -233, 185, 403,
	545, 319, 471, 259, -422, -421, 28, -445, -426, 179,
	318, -445, -424, -447, 597, 598, -516, -518, -374, 345,
	-224, -224, -224, -361, -472, -445, 393, 234, -497, -495,
	-495, -297, -525, 519, -445, -445, -445, -445, -445, -445,
	-445, -445, -445, -445, -445, -445, -445, -445, -445, -445,
	-445, -445, -445, -445, -445, -445, -445, -445, -445, -445,
	-445, -445, -445, -445, -445, -445, -445, -445, -445, -445,
	275, 222, 473, 50, 225, -445, 523, -445, -445, -445,
	-445, 312, 335, 341, 532, 170, 542, 139, 345, -648,
	502, 40, -452, -225, -379, 607, -466, 35, 484, 28,
	-459, 607, 2, -440, -445, -441, -325, -323, -268, 597,
	598, 599, 600, 601, 602, 587, 588, 589, 14, 15,
	16, 592, 596, 594, 595, 183, 95, 591, 290, 446,
	86, 173, 174, 175, 176, 257, 258, 17, 18, 19,
	34, 590, -376, -375, -375, 608, 559, 28, 139, 599,
	2, 608, 612, 38, 608, -445, -376, -458, -454, -375,
	-465, -464, 567, -412, -413, 575, 299, 123, 216, 297,
	-414, 458, -519, 8, -525, 599, -576, 178, 209, 607,
	608, 2, 608, 2, 608, -445, 2, 608, -445, 2,
	608, -445, 2, 608, -445, 2, 608, 2, 608, 2,
	-445, -445, -445, -445, -445, -445, -445, -375, 8, -519,
	-519, 519, 519, -519, -519, -519, -511, 380, 381, 382,
	383, 277, 278, 279, 280, 384, 385, 386, 387, 304,
	305, 306, 307, 300, 301, 302, 303, 308, 309, 310,
	311, 200, 201, 202, 203, 196, 197, 198, 199, -511,
	-406, 2, -513, -375, 4, 575, 299, 123, 216, 297,
	458, 5, -406, 2, -407, 2, -445, -375, -408, -446,
	-447, 597, 598, 590, -324, -459, -409, 2, -445, -376,
	-445, 57, 269, 525, -410, -445, 190, -375, -375, 2,
	-375, 2, -573, 38, -375, -367, 612, 190, 38, 4,
	-367, -367, 607, 608, 612, -405, 213, 293, 288, 247,
	-405, -476, -404, 254, -402, 361, -402, -402, -470, -283,
	605, 613, -525, -470, -469, -468, 38, -292, 358, -470,
	-470, 609, 608, -469, 606, -588, 607, 610, 610, 610,
	610, 610, -299, 607, -375, -525, 609, 491, 2, 608,
	248, 248, 248, 248, 248, 351, 445, 608, 523, -592,
	-308, -312, 509, 2, 570, -105, 353, 608, 612, -366,
	37, 605, 609, -519, 2, 2, -514, 561, 607, 607,
	-413, 607, 190, -592, -312, 509, 2, -597, -365, -365,
	523, -268, 2, -299, -373, -246, 155, -373, -373, -246,
	612, 155, -282, -303, -308, -310, -312, -268, -530, -532,
	-246, -304, -624, 608, 527, -432, -326, 403, 483, 425,
	462, 504, 8, 9, 8, 9, 612, -525, 612, -625,
	93, 523, 78, 607, 454, -261, 283, 523, -436, 218,
	78, -547, 93, -285, -548, -268, 72, 541, 393, 189,
	153, -625, 93, 393, -625, 93, 2, 236, 93, 467,
	489, 607, 28, 60, -481, 41, 41, 28, -605, -606,
	270, 190, 576, 508, 234, 454, 523, 523, -481, -399,
	-495, 118, 294, 295, 60, -520, -515, 597, 598, -520,
	60, -520, -520, -520, 570, -302, -481, 454, 523, 523,
	523, 413, 413, -254, -148, 523, 523, 28, -191, 432,
	127, -646, 589, 413, 270, -606, 523, 190, 612, 41,
	41, 28, -605, 190, 523, -321, -283, 555, 42, 555,
	42, 555, 523, 42, 454, 523, 612, 42, 523, 523,
	-13, 467, -599, -273, 105, 325, 287, 326, 97, 322,
	96, 321, 103, 323, 104, 324, 562, 338, 563, 339,
	63, 320, 298, 327, 487, 328, -274, -275, 146, 372,
	553, 120, -530, -13, -13, 467, 366, 424, 155, -622,
	225, 28, -611, 225, -489, 225, -489, -313, -268, 609,
	-135, -445, -445, -135, -445, -135, 46, 155, 155, 2,
	2, -642, 263, 607, -330, 335, 190, -364, -490, 245,
	612, -372, -590, 155, -530, -398, -397, 335, -304, 218,
	2, 155, -354, 335, 149, 607, 401, 2, 155, -284,
	218, -269, -268, -417, -248, 512, 155, -395, 551, -427,
	-135, 607, 127, 38, -427, -384, -385, -487, -386, -285,
	607, -292, -442, -106, -491, 608, 608, 608, -203, 355,
	-202, -268, 5, -216, -355, -286, -285, 119, 405, 405,
	-210, 570, -131, -132, 608, 612, -489, 225, 492, -204,
	-204, -489, -489, -299, 185, -534, -204, -204, -204, 2,
	2, 2, 2, -401, -299, -282, -321, -299, 28, 609,
	-532, -532, -312, -308, -401, -282, -401, -282, -401, -282,
	-401, -401, -135, -445, 489, 2, 464, 185, 185, 609,
	-401, -357, 434, 2, 401, 120, 508, 370, 234, -299,
	-321, -299, -321, -282, 120, -282, 121, -299, 4, -481,
	-392, -231, 352, 259, 471, -424, -425, -447, 444, 445,
	-425, 444, 445, 8, 9, 8, 9, -235, 475, 340,
	-373, 612, -240, 39, 135, 259, -299, 576, 151, -445,
	-445, 523, -648, 502, -452, 151, -445, 312, 341, 532,
	170, 542, 139, 345, 190, 607, -446, -446, 608, -377,
	-445, -445, 606, 615, 608, 609, 608, -360, 612, -358,
	-445, -375, -375, 608, 609, -375, -364, 606, 606, 612,
	608, -463, -464, 144, -445, 523, 523, 523, 523, 607,
	608, 609, -581, 362, 607, 607, -445, 608, 608, 608,
	608, 38, 612, 612, 612, 608, 612, 612, 612, 608,
	608, 608, 612, 608, 576, 576, 608, 608, 608, 608,
	612, 608, 612, 608, 190, 608, 608, -415, 377, 608,
	11, 12, 597, 598, 599, 600, 183, 601, 602, 595,
	596, 594, 587, 588, 589, 86, 290, 446, 14, 15,
	16, -324, 248, 225, -446, -446, -446, -446, 608, -450,
	-451, 190, 185, 38, -410, -410, -410, 608, 190, -375,
	608, 608, 607, -574, 292, 335, 608, -439, -438, 568,
	-486, -368, 2, -476, -294, -525, -439, -439, -375, -445,
	254, 254, -403, 551, 351, -405, -476, -469, -521, -444,
	-443, 187, 39, 135, 329, 330, 331, 221, 188, -469,
	-292, -354, -469, -469, -525, -470, -470, -468, 608, -589,
	-521, 608, -369, -479, -568, -360, 609, -525, -213, -569,
	-192, 5, 341, -192, -192, -192, -192, -299, -532, 523,
	523, 225, 25, 378, -495, 605, 606, 8, -525, 607,
	-519, -519, -519, -532, 190, 190, 225, 351, 190, -530,
	2, -246, -373, -246, -246, -321, -322, -246, -246, -246,
	-396, 570, -522, -431, 539, 83, 403, 519, -522, -242,
	424, 467, -285, -285, -299, -220, -219, -217, -268, 5,
	-309, 204, 414, -530, 335, -436, 218, -247, 335, 218,
	-293, -495, 607, -419, 572, 259, 259, 551, -285, -293,
	259, 218, -285, 218, -293, 2, -293, -600, 403, 346,
	-445, -218, -217, 60, -337, 281, 401, 336, -243, 424,
	467, 366, -135, -135, -135, 607, -624, 551, 138, -299,
	-321, -299, -309, -530, -304, 467, 366, 424, 332, -315,
	-520, -520, -397, 467, 366, 424, -309, -530, -302, -530,
	-253, 218, -268, -253, 218, 454, -282, 413, 576, 45,
	-646, 523, 190, -445, -445, -244, -135, -135, -135, 607,
	-283, -245, 424, 5, 218, -285, 5, -285, 218, 5,
	-268, -285, -309, -530, -628, 24, 143, -285, -309, -530,
	-273, 372, -534, 341, 547, -282, -598, -289, 454, 523,
	523, -481, -618, -619, 206, 437, 454, 440, -532, -131,
	-207, 570, -131, -201, 229, 599, -595, -534, -268, 560,
	-268, -328, -331, -329, -285, -437, -436, -551, -552, -547,
	275, 234, 541, 247, 171, 93, -221, -222, 572, 570,
	155, -319, -299, 605, -204, -534, -299, -490, -310, -311,
	155, -354, 335, -530, 38, 155, 607, 2, 2, -303,
	351, 335, -284, 218, -249, 145, -646, -282, -439, -368,
	-394, -429, 434, 351, -355, 556, -292, -394, -370, 612,
	190, 589, 609, -355, -485, 599, -106, -106, -204, 612,
	607, 589, 589, 607, -534, 608, 612, 609, 607, 589,
	589, -212, 355, -211, 147, 261, 246, 477, 478, 479,
	480, 137, 476, 124, 317, 230, -489, -534, -210, -132,
	190, 190, -65, 570, 508, -204, 611, 440, -268, -401,
	-401, -401, 464, 464, -268, -364, -295, -525, -282, -299,
	-296, -321, 185, 185, -282, 545, -425, 352, 286, -472,
	-241, 578, -299, 611, -445, -445, 151, 151, -445, -446,
	-446, -445, 151, 190, 607, -445, -456, 33, 33, 608,
	612, -441, -445, -323, 608, 559, -360, -360, 608, 599,
	-525, 611, 608, -454, 148, -445, 517, 299, 216, 297,
	-414, 297, -414, -414, -519, 5, -525, 599, -582, -288,
	607, -268, 568, -359, 357, 608, -497, -495, -445, -445,
	-445, -445, -445, -519, -500, -500, -515, -515, -445, -450,
	-445, -497, -495, -446, -446, -446, -446, -446, -446, -446,
	-446, -446, -446, -446, -446, -446, -446, -446, -446, -446,
	-446, -446, -446, 139, 335, 345, -446, -451, -450, -445,
	-445, -495, 608, 608, 608, -375, -105, 607, 292, -388,
	209, -445, -489, 612, -388, -388, 608, -476, -476, 607,
	-445, 254, 606, 612, 614, 589, 589, -354, 609, -468,
	-469, 606, 608, 612, 608, 612, -428, 38, 608, -525,
	-439, -215, -214, 136, 53, 107, 134, 341, 248, -620,
	570, -532, -532, 454, 354, 5, 8, 605, 606, 609,
	-519, 608, 608, 608, -532, -532, 454, -590, 535, 454,
	28, -532, -246, -246, 119, 319, -445, 523, 523, 608,
	612, 589, 60, 225, 155, 335, 553, 335, -548, 153,
	-553, -445, 607, 234, 607, 607, 2, -237, -238, -239,
	143, 467, 24, -626, 2, 551, 155, -246, 155, -246,
	574, 608, 612, -337, 607, 607, 523, 454, -261, 523,
	570, -375, -445, -205, 127, -524, -607, 611, -607, 611,
	454, 523, 523, 454, 523, 523, 335, 155, 570, 169,
	169, 576, -253, -445, -445, 185, 523, 570, -375, 523,
	-499, 48, 26, 335, -303, -246, 155, 523, 523, 535,
	467, -534, -534, 341, -13, -309, -530, -304, 467, 366,
	424, -597, -597, 206, -312, -622, -489, -209, 355, -208,
	147, 436, 137, 261, 230, -489, -207, 190, 245, 570,
	-304, 2, 608, 608, 612, 612, -554, -247, -299, -284,
	234, 234, -291, -269, 38, 349, 349, 607, -299, -86,
	570, -488, -521, -601, 570, 43, -302, 38, 155, -598,
	-135, -304, -493, -494, 5, 38, -299, 155, 351, 335,
	-250, 268, -646, -529, -569, -360, -394, -383, 336, 91,
	608, -439, -385, -368, -445, 2, 608, -202, -203, -534,
	-534, -534, -204, -216, -286, 2, -535, -534, -534, 612,
	607, 589, 589, 589, 589, 589, 589, -210, -489, -131,
	-135, 355, -299, 599, -401, -343, -342, 370, 345, -343,
	444, 444, 352, 179, 264, -240, -283, -445, -445, 151,
	33, 33, -445, -445, -456, 608, -445, -445, -375, 606,
	5, -445, 608, 608, 8, -445, 608, 609, -583, -268,
	-445, 608, 60, 608, 608, 612, 612, 608, 608, 608,
	608, 608, 608, 608, -451, 190, 139, 345, 607, 608,
	608, -105, -453, 212, 60, -476, -453, -453, -403, -364,
	-476, -443, -283, 605, -283, 605, -525, -521, -479, 607,
	609, -214, 589, -534, -534, -192, 206, -620, -620, 570,
	-312, 606, 2, 605, -525, 608, -312, 190, -592, -312,
	509, 119, -285, -285, -219, -522, 508, 444, -253, 393,
	-436, 155, 155, -555, 93, -557, 76, 171, 102, 335,
	341, 541, 393, 72, 127, 351, 410, -636, -637, -638,
	38, 581, 582, 608, -362, -473, -568, 607, -268, -362,
	-364, 335, 497, 127, 351, 335, 127, 351, 565, 119,
	2, 535, 79, -285, -293, -217, -364, -364, -299, -309,
	-530, 163, 608, 612, 589, 2, 599, 599, -309, -530,
	-304, -309, -530, -302, 155, -253, 368, 169, 523, -135,
	-445, 163, 608, -283, 5, 5, 155, -280, 76, -285,
	5, -285, -303, 119, 454, 523, 523, 351, 351, 354,
	-618, -619, -207, 612, 607, 589, 589, 589, -207, -535,
	-131, 2, -354, -344, 236, -285, -552, -549, -550, 393,
	-437, -556, -558, 171, 393, -332, 607, -284, -269, 607,
	-135, 2, -220, 607, -330, 355, 606, -603, 355, -602,
	117, 137, -530, -398, -135, -304, -352, 570, -354, 608,
	612, 149, -420, 551, -283, -299, 155, -251, 267, -646,
	-529, -248, -423, -421, 140, 607, 351, -135, -360, 589,
	608, 608, 119, 608, -211, -212, -534, -131, -534, -534,
	-534, -131, -210, -489, -66, -67, 234, 93, 375, -296,
	508, 234, 607, 607, -240, -445, -445, -445, 608, -360,
	-525, 599, -577, 370, 608, -472, -445, -445, -446, 190,
	607, -456, 608, -578, 569, -445, -389, -390, -445, 442,
	108, 210, -578, -578, 608, -521, -521, 2, -534, 354,
	2, 523, 605, 2, 190, -532, 190, 190, 225, 225,
	38, 413, -436, -293, -293, -297, -290, -268, 171, 218,
	341, 565, -419, 259, 607, -446, 545, -299, 607, 2,
	217, 217, 30, 60, -639, 131, 238, 608, 612, -474,
	-279, -268, -445, -474, 608, 608, 341, 545, 341, 565,
	-445, 545, -495, 607, -246, -246, 608, 608, -445, 523,
	-524, 100, -522, 2, -607, -253, -282, -445, 185, -445,
	523, 5, -246, -297, -246, -246, -280, 535, -309, -530,
	-304, -623, 509, 461, 536, 455, 193, 443, -623, 185,
	-208, -209, -534, -131, -131, -207, 38, -338, -339, 2,
	-554, 259, -290, 259, 227, 154, -362, 607, 607, -364,
	-635, 570, 608, -328, -221, -87, -88, 524, -488, 612,
	607, 589, -354, 319, 119, 38, 5, 607, 607, -268,
	351, 607, -283, -263, 92, -646, -529, -249, -394, 336,
	-364, 93, -423, -452, -204, 607, -204, 608, 612, 28,
	607, 28, 607, -299, -321, -375, -375, 608, -360, 60,
	612, 608, 608, -446, -456, 608, -579, -580, -288, 612,
	607, 607, 468, 606, 606, -532, 2, -532, -532, -532,
	454, -253, 393, -268, -548, -557, -290, 335, -222, 551,
	570, -445, -446, -270, 607, -445, 607, 607, 38, 127,
	238, 132, 223, -435, -640, 101, 498, 226, -473, -240,
	608, -434, 551, 410, -446, -280, -362, 607, 607, 607,
	589, 190, -135, 607, -499, -246, -303, 523, 2, 2,
	190, -597, 608, -613, 408, -135, -221, 607, -222, -333,
	81, 94, 128, 217, 194, 235, 489, 495, 28, -333,
	608, -362, -362, 608, -334, 351, 119, 319, 608, 38,
	-88, 9, -602, -603, -445, 38, 119, -135, -493, -362,
	-299, -362, 351, -255, -254, 276, -529, -250, 608, -293,
	-394, -535, -67, -364, -364, 608, 608, -584, 401, 445,
	211, -375, -361, 608, 612, 38, -390, 2, 2, 2,
	-620, -312, 413, -247, 155, 213, 608, -559, 291, -268,
	608, -398, -398, 38, 132, 223, -340, -336, 607, -241,
	-474, -222, 213, -299, -608, 551, 608, -346, -345, -342,
	-348, -347, -342, -375, -522, 100, 368, -375, -280, -532,
	-532, 351, -615, 191, -614, 5, 10, -334, -363, -475,
	-285, -434, 608, 608, 82, 119, -344, -135, 608, -135,
	2, -352, 608, 608, -420, 608, -299, -252, -536, 413,
	415, -646, -251, -439, 140, 608, 608, 608, 608, -585,
	-586, 50, 538, 109, -445, -585, -585, -580, -582, 190,
	171, -433, 579, -560, -563, -562, 586, 474, 191, 369,
	608, 497, 564, 608, 608, -639, -364, -433, -354, -445,
	-434, 608, 612, 556, 608, 612, 556, 608, 190, 608,
	-246, -620, -246, -623, -206, 570, 46, -262, -261, 608,
	612, -435, -434, -340, 392, 133, 143, -338, -635, -434,
	607, -435, 607, -260, -259, -646, -515, -263, 140, 336,
	545, -204, -587, 153, -586, 389, 184, 444, 389, 184,
	-587, -587, -532, -290, -222, 55, -562, 586, -563, 586,
	545, 133, -439, 608, -559, -222, -345, 225, -347, 190,
	368, 190, 452, -614, 30, -222, -475, -340, -435, -222,
	445, 445, 2, -221, -334, -435, -362, -340, -362, -256,
	-257, -258, -364, -255, 336, 545, 467, 109, 209, 518,
	319, 33, 589, -561, 319, 431, 64, 467, -561, -560,
	607, 607, -532, 355, -222, -340, -439, 2, -334, -340,
	608, -222, 608, -531, 366, -252, 467, -384, 444, 359,
	-586, -445, 23, 341, 127, -639, -375, -375, -246, -203,
	607, -439, -222, -262, -222, -434, -439, -435, -646, -260,
	-384, -439, 608, 608, -203, -439, -439, -435, -340, -530,
	-256, -439, -335, -336, 523, 608, -340, -222, 607, -222,
	-439, -375, -439, 608, -335,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 565, 566, 568, 569, 570, 572,
	573, 575, 577, 579, 580, 581, 583, 584, 586, 587,
	588, 589, 590, 592, 594, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	666, 668, 0, 1449, 1451, 1453, 1455, 0, 822, 0,
	36, 37, 39, 0, -2, 342, 344, 346, 348, 0,
	380, 382, 383, 385, 387, 388, 389, 391, -2, 0,
	498, 499, 501, 503, -2, 0, 1036, 1038, 1040, 0,
	654, 656, 0, 1043, 1045, 1047, 0, 0, 678, 679,
	0, 1563, -2, 670, 672, 674, 676, 747, 749, 751,
	753, 755, 757, 759, 761, 763, 765, 766, 768, 770,
	772, 774, 776, 777, 779, 781, 783, 784, 786, 787,
	789, 791, 793, 795, 797, 799, 801, 803, 805, 807,
	809, 811, 813, -2, 816, 817, 818, -2, -2, 0,
	-2, -2, -2, 1467, 41, 43, 45, 47, 49, 51,
	53, 55, 57, 59, 442, 444, 446, 448, 450, 453,
	455, 457, 1621, 505, 507, 509, 511, 513, 515, 517,
	0, 0, -2, 1635, 0, 0, 61, 62, 63, 64,
	65, 66, 67, 68, 69, 70, 109, 110, 111, 112,
	113, 114, 115, 74, 75, 76, 78, 79, 80, 81,
	85, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	106, 107, 72, 0, 0, 1594, 1596, 1598, 1600, -2,
	0, 0, 5, 9, 11, 13, 15, 17, 19, 21,
	23, 25, 27, 29, 567, 571, 574, 576, 578, 582,
	585, 591, 593, 595, 550, 551, 554, 2333, 2351, 2352,
	2353, 2356, 2357, 2358, 2359, 2360, 2361, 2823, 2904, 2905,
	2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2392,
	2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402,
	2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2411, 2412,
	2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422,
	2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432,
	2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442,
	2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452,
	2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462,
	2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472,
	2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482,
	2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491, 2492,
	2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502,
	2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512,
	2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521, 2522,
	2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531, 2532,
	2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542,
	2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551, 2552,
	2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561, 2562,
	2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572,
	2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582,
	2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592,
	2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600, 2601, 2602,
	2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611, 2612,
	2613, 2614, 2615, 2616, 2617, 2618, 2619, 2620, 2621, 2622,
	2623, 2624, 2625, 2626, 2627, 2628, 2629, 2630, 2631, 2632,
	2633, 2634, 2635, 2636, 2637, 2638, 2639, 2640, 2641, 2642,
	2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650, 2651, 2652,
	2653, 2654, 2655, 2656, 2657, 2658, 2659, 2660, 2661, 2662,
	2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671, 2672,
	2673, 2674, 2675, 2676, 2677, 2678, 2679, 2680, 2681, 2682,
	2683, 2684, 2685, 2686, 2687, 2688, 2689, 2690, 2691, 2692,
	2693, 2694, 2695, 2696, 2697, 2698, 2699, 2700, 2701, 2702,
	2703, 2704, 2705, 2706, 2707, 2708, 2709, 2710, 2711, 2712,
	2713, 2714, 2715, 2716, 2717, 2718, 2719, 2720, 2721, 2722,
	2723, 2724, 2725, 2726, 2727, 2728, 2729, 2730, 2731, 2732,
	2733, 2734, 2735, 2736, 2737, 2738, 2739, 2740, 2741, 2742,
	2743, 2744, 2745, 2746, 2747, 2748, 2749, 2750, 2751, 2752,
	2753, 2754, 2755, 2756, 2757, 2758, 2759, 2760, 2761, 2762,
	2763, 2764, 2765, 2766, 2767, 2768, 2769, 2770, 2771, 2772,
	2773, 2774, 2775, 2776, 2777, 2778, 2779, 2780, 2781, 2782,
	2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791, 2792,
	2793, 2794, 2795, 2796, 2797, 2798, 2799, 2800, 2801, 2802,
	552, 553, 1230, 0, 619, 617, 2318, 620, 2617, 622,
	624, 492, 493, 494, 495, 496, 497, 0, 647, 633,
	1633, 648, 650, 651, 652, 653, 614, 612, 0, 652,
	647, 2387, 645, 1447, 1448, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 504, 0, 0, 0, 0, -2, 0,
	0, 0, 0, 0, 0, 0, 421, 1289, 1290, 1291,
	1432, 1433, 2665, 1474, 0, 241, 667, -2, -2, 2788,
	-2, 701, 702, -2, -2, 716, 720, 711, 2792, 0,
	2668, 2652, -2, 723, 1450, 1452, 1454, 820, 821, 2337,
	0, 0, 0, 0, 0, 38, 40, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 251, -2, -2, -2,
	-2, 0, 0, 2714, 2439, 2286, 2353, 2289, 2284, 343,
	345, 347, 349, 350, 0, 0, 0, 0, 0, 0,
	0, 381, 384, 386, 390, -2, 392, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 420, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, -2,
	-2, 0, 0, 0, 0, 0, 0, 0, 0, 1110,
	1102, 1103, 1354, 0, 0, 0, -2, 500, 502, 555,
	556, 0, 1622, 1622, 563, 564, -2, 0, 0, 0,
	0, 313, 303, 1037, 1039, 1041, 1042, 0, 0, 0,
	0, 0, 655, 657, 0, 0, 281, 1044, 1046, 1048,
	1049, 0, 0, 0, 0, 0, 0, 315, 0, 0,
	671, 673, 675, 677, 748, 750, 752, 754, 756, 758,
	760, 762, 764, 767, 769, 771, 773, 775, 778, 780,
	782, 785, 788, 790, 792, 794, 796, 798, 800, 802,
	804, 806, 808, 810, 812, 814, 815, 828, 0, 0,
	0, 0, 0, -2, -2, 0, 0, 0, -2, 0,
	-2, -2, -2, 0, 0, 0, 0, 0, 0, 0,
	-2, 0, 0, 930, 0, 0, 0, -2, -2, -2,
	0, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	0, -2, 1017, 0, 0, 831, 834, 835, 836, 837,
	838, 839, 0, 903, 928, 929, 939, 819, 0, 1270,
	1623, 1476, 1457, 1471, 1476, 1459, 1460, 1461, 1462, 1463,
	1468, 1470, 1464, 1465, 1466, 42, 44, 46, 48, 50,
	52, 54, 56, 58, 60, 443, 445, 447, 449, 451,
	454, 456, 458, -2, 1592, 1593, 506, 508, 510, 512,
	514, 516, 518, 658, 0, 661, 0, 833, 660, -2,
	0, 1627, 1627, 1627, 0, 0, 1593, 1591, 0, 664,
	665, 727, 728, 1900, 0, 0, 0, 0, 0, 0,
	0, 0, 2160, 1988, 0, 729, -2, 2021, 2023, 2763,
	2590, 2788, 2159, 2025, 2026, 2027, 2028, 2029, 0, 2031,
	2032, 2033, 2034, 2035, 2036, 0, 2038, 0, 2043, 2044,
	2045, 0, 2770, 2263, 2347, -2, 0, 0, 2776, 2343,
	0, 2126, 2061, -2, -2, 2370, 2349, 1832, 1833, 1834,
	1835, 1836, -2, -2, 2806, 2065, 2066, 2067, 2068, 2069,
	2070, 2071, 2072, 2073, 2074, 2075, 0, 2751, 2771, 2772,
	2777, 2779, 2773, 2760, 2086, 2453, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, 1859,
	1868, -2, -2, -2, -2, -2, -2, -2, 2764, 2765,
	2782, 2785, 2791, 2796, 2797, 2769, 2778, 2805, 2807, 2808,
	2809, 2810, 2811, 2812, 2813, 2814, 2815, 2816, 2817, 2818,
	2819, 2820, 2821, 2822, 1860, -2, -2, -2, -2, 1610,
	2631, 1613, 1230, 1611, 1595, 1597, 0, 1599, 0, 0,
	0, 1604, 1630, 1628, 0, 1679, 1608, 1609, 1702, 1702,
	1726, 0, 1707, 0, 1726, 1622, 1753, 0, 1713, 2657,
	2062, 2063, 0, 2353, 2348, -2, -2, 2803, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 615,
	0, 621, 623, 0, 0, 0, 646, 1632, 0, 0,
	0, 0, 0, 0, 0, 0, 424, 425, 426, 427,
	428, 2771, 0, 0, 0, 433, 0, 435, 436, 437,
	438, 439, 440, 441, 211, 2771, 523, 548, 0, 211,
	2771, 526, 211, 2771, 529, 0, 532, 1352, 211, 2771,
	535, 2314, 211, 2771, 538, 540, 2322, 211, 2771, 544,
	2329, 2327, 545, 0, 547, 231, 227, 228, 229, 230,
	1443, 1444, 1445, 1446, 0, 1473, 1353, 669, 0, 695,
	0, 699, 700, 2759, -2, 0, 2677, 704, 705, -2,
	707, 1477, 1481, 1482, 1483, 1484, 1485, 0, 0, 0,
	0, 1490, 0, 0, 0, 0, 696, 697, 714, 715,
	721, 724, 0, 823, 824, 825, 826, 827, 71, 0,
	2771, 1753, 73, 0, 2308, 2378, 2379, 2380, 2381, 2382,
	2804, 2824, 2825, 2826, 2827, 2828, 2829, 2830, 2831, 2832,
	2833, 2834, 2835, 2836, 2837, 2838, 2839, 2840, 2841, 2842,
	2843, 2844, 2845, 2846, 2847, 2848, 2849, 2850, 2851, 2852,
	2853, 2854, 2855, 2856, 2857, 2858, 2859, 2860, 2861, 2862,
	2863, 2864, 2865, 2866, 2867, 2868, 2869, 2870, 2871, 2872,
	2873, 2874, 2875, 2876, 2877, 2878, 2879, 2880, 2881, 2882,
	2883, 2884, 2885, 2886, 2887, 2888, 2889, 2890, 2891, 2892,
	2893, 2894, 2895, 2896, 2897, 2898, 2899, 2900, 2901, 2902,
	2903, 2806, 77, 0, 2771, 82, 0, 2771, 0, -2,
	95, 0, 108, 0, 135, -2, -2, -2, 116, 0,
	2771, 0, 2283, -2, 0, 223, 304, 305, 306, 0,
	1074, -2, 0, 1283, 1285, 1285, 0, -2, 0, 0,
	0, 1027, 2280, 2285, 1028, 2304, 1029, 2290, 0, 351,
	352, 353, 354, 355, 0, 356, 2771, 358, 359, 0,
	361, 362, 2771, 364, 365, 0, 367, 0, 369, 0,
	263, 267, 2771, 316, 317, 2366, 2367, 2374, 2375, 2376,
	2377, 2771, 394, 397, 0, 399, 400, 0, 402, 0,
	0, 0, 406, -2, 422, 0, 419, 409, 410, 412,
	413, 414, 415, 416, 0, 462, 460, 2319, 0, 0,
	-2, 2771, 0, 1071, 0, 0, 1332, -2, 0, 1276,
	0, 1339, 2771, 1335, 0, -2, 0, 1620, 2771, 1494,
	1106, 1107, 1108, 1109, 1765, 489, 0, 1527, 0, 1529,
	0, 1549, 1759, 1702, 0, 0, 1764, 0, -2, 608,
	2336, -2, 558, 0, 559, 0, -2, 0, 330, 0,
	0, 1052, 1054, 1055, 1057, 1058, 1061, 1062, 1063, 1064,
	0, 1066, 1739, 282, 284, 0, 0, 0, 1051, 1434,
	1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 0, 0,
	680, 0, 0, 829, 830, 0, 0, 846, 847, 848,
	0, 330, 2669, 2626, 2475, 855, 0, 858, 861, -2,
	0, 0, 0, 0, 865, 0, 870, 871, 872, 0,
	-2, 0, 879, 881, 1035, 883, 0, 0, 885, 0,
	889, 0, 892, 0, 894, 0, 896, -2, -2, -2,
	904, 905, -2, 910, -2, 0, 914, -2, 0, 917,
	0, 920, -2, 0, 930, 926, 927, 0, 0, 0,
	0, 947, 948, 0, 957, 0, 960, 961, 962, 0,
	966, 967, 0, 969, 970, 971, 972, 0, 2741, 2674,
	2439, 0, 980, -2, 986, 988, 0, -2, 0, 1004,
	0, 1008, 0, 0, 1016, 0, 0, 832, 0, 840,
	841, 211, 1757, 1456, -2, 1458, 0, -2, 0, 659,
	0, 663, 1652, 1578, 1575, 0, 1649, 1650, 1579, 0,
	0, 0, 1586, 0, 1625, 1626, 0, 0, 0, 1565,
	1566, 0, 0, 0, 0, 2165, 2166, 2167, 2168, 2181,
	2169, 2170, 2180, 2178, 2179, 2171, 2172, 2177, 2191, 2192,
	2182, 2183, 2173, 2186, 2184, 2185, 2187, 2188, 2189, 2190,
	0, 0, 2196, 0, 2174, 2175, 2176, 2204, 0, 0,
	2205, 0, 2207, 0, 2197, 2193, 2194, 2195, 0, 1967,
	1969, 2271, 0, 0, 0, 2203, 2198, 2199, 1905, 1906,
	1907, 1908, 1909, 1942, 1946, 1947, 0, 0, 2022, 2268,
	2267, 2024, 0, 0, 2219, 0, 2037, -2, 0, 2160,
	2214, 0, 0, 2046, 2047, 2048, 0, 0, 2219, 0,
	0, 2262, 2058, 2059, 1897, 0, 0, 2128, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1846, 1845, 0, 1847,
	0, 1848, 1849, 1856, 1869, 0, 0, 0, 0, 1873,
	0, 0, 0, 0, 0, 0, 0, 2243, -2, 0,
	0, 0, 0, 1861, 0, 1612, 0, 0, 1683, 2272,
	2276, 2277, 1683, 1683, 0, 0, 2220, 1750, 1750, 0,
	0, 1745, 1745, 1745, 1743, 1726, 0, 1726, 1736, 0,
	1726, 1726, 0, -2, 1707, 0, 0, 1736, 0, 1720,
	596, 598, 600, 602, 603, 604, 606, 1754, 1755, 0,
	0, 0, 0, 2354, 0, 0, 0, 0, 2326, 0,
	0, 2339, 0, 0, 2313, 376, 377, 0, 0, 0,
	2724, 2668, 0, -2, 626, 649, 1622, 0, 2222, 1780,
	1784, 0, 1786, 1787, 1788, 1789, 1790, 0, 0, 1781,
	-2, 1857, 1859, 1880, 2371, 2372, 2373, 1840, 1841, 1842,
	1843, 1844, 1852, 1839, 1839, 1839, 1850, 1879, 1871, 1879,
	1875, 1825, 1826, 1827, 1862, 1863, 1864, 1865, 0, 2724,
	2668, 0, -2, 0, 636, 0, 0, 1560, 423, 0,
	430, 431, 432, 0, 519, 0, 209, 210, 0, 211,
	2771, 524, 0, 527, 0, 211, 2771, 2278, 533, 0,
	536, 0, 0, 542, 0, 0, 0, 0, 0, 211,
	1562, 0, 0, 0, 0, -2, 709, 717, 718, 719,
	0, 1479, 0, 1486, 738, 739, 740, 1488, 1489, 0,
	1491, 712, 741, 742, 743, 744, 745, 746, 0, 2292,
	2293, 2294, 2295, 2298, 2299, 0, 0, 710, 731, 713,
	0, 725, 117, 1429, 0, 0, 164, 0, 1429, 1429,
	0, 0, 0, 0, 192, 0, 0, 1140, 0, 0,
	0, 0, 135, 149, 160, 129, 130, 131, 0, 0,
	0, 0, 0, 0, 83, 1252, 0, 1255, 0, 0,
	0, 0, 0, 0, 0, 1268, 0, 0, 0, 0,
	0, 97, 98, 0, 0, 103, 104, 0, 148, 0,
	0, 0, 0, 0, 1524, 0, 139, 135, 0, 0,
	134, 136, 119, 0, 0, 135, 150, 162, 0, 198,
	200, 1137, 0, 0, 0, 0, 0, 0, 0, 0,
	222, 233, 0, 0, 0, 1277, 0, 0, 0, 1619,
	0, 0, 0, 0, 2771, 1427, 0, 1412, 0, 1739,
	2524, -2, -2, 282, 1739, 1026, 0, 0, 2354, 2288,
	0, 0, 0, 0, 0, 0, 368, 0, 0, 0,
	0, 398, 401, 403, 404, 405, 0, 1331, 0, 411,
	452, 1199, 2771, 0, 0, 479, 474, 0, 476, 0,
	0, 0, 1251, 2771, 1249, 2323, 0, 1274, 0, 1230,
	2771, 2321, 0, 0, 0, 1340, 2363, 1349, 1353, 1512,
	0, 491, 0, 1530, 1532, 0, 0, 1760, 0, 1762,
	1702, 1622, 0, 0, 0, 0, 308, 0, 0, 0,
	0, 0, 0, 1065, 288, 0, 1738, 0, 0, 318,
	1739, 282, 2643, 1050, 330, 330, 1739, 682, 1739, 684,
	0, 0, 849, 850, 0, 330, 330, 330, 856, 857,
	859, 860, -2, -2, -2, -2, 862, 863, 954, 0,
	0, 0, 953, 873, 0, 875, 878, 882, 0, 1020,
	2652, 2668, 2724, 1033, 954, 2439, 954, 2439, 954, 2439,
	954, 954, 898, 942, 950, 909, 916, 0, 911, 915,
	918, 921, 0, 923, 931, 0, -2, 0, 934, 0,
	936, 0, 938, 954, 955, 958, 965, 968, 973, 974,
	975, 976, 2334, 977, 978, 979, -2, 983, 984, 0,
	995, 1000, 1001, 997, 0, 0, 0, 0, 0, 0,
	1011, 1012, 0, 0, 1019, 0, 842, 1269, 0, 1469,
	1652, 1578, 662, 1569, 1651, 1570, 1577, 1580, 0, 0,
	1582, 0, 1584, 0, 1647, 1648, 1655, 1656, 0, 1666,
	1667, 1659, 0, -2, 0, 0, 1662, 1663, 1588, 0,
	1605, 1606, 1607, 1636, 1639, 1368, 0, 2904, 1901, 1775,
	1902, 1903, 2307, 0, 1910, 1911, 1912, 1913, 1914, 1915,
	1916, 1917, 1918, 1919, -2, -2, -2, -2, -2, -2,
	-2, -2, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935,
	1936, 1937, 1938, -2, -2, -2, 1943, 1944, 1945, -2,
	2206, 2208, 0, 2271, 0, -2, 0, -2, -2, -2,
	-2, 1964, 0, 1966, 1971, 1973, 1975, 0, 0, 0,
	0, 2270, 1985, 2254, 2255, 0, 0, 2162, 2163, 2164,
	1970, 0, 1989, 2269, 2266, 0, 0, 2200, 0, 2165,
	2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175,
	2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185,
	2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195,
	2196, 2197, 0, 2218, 1635, 2050, 0, 0, 0, 0,
	2057, 2042, 2216, 0, 2215, 0, 0, 0, 2226, 0,
	2261, 2257, 0, 2305, 1896, 1883, 1884, 1885, 1886, 1887,
	1888, 1898, 0, 2302, 2340, 2346, 2136, 0, 0, 0,
	2087, 2088, 2089, 2090, 2091, 0, 2093, 2094, 0, 2096,
	2097, 0, 2099, 2100, 0, 2102, 2103, 2104, 2105, 2106,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1793, 1794, 1795,
	1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805,
	1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815,
	1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 0,
	0, 2108, 0, 2229, -2, -2, -2, -2, -2, -2,
	-2, -2, 0, 2110, 0, 2112, 2220, 2240, 0, 0,
	1990, 0, 0, 0, 0, 2160, 0, 2115, 2220, 2248,
	0, 0, 0, 0, 0, 2220, 0, 2253, 0, 2122,
	0, 2124, 1614, 0, 0, 1770, 0, 0, 0, 2275,
	1770, 1770, 0, 1678, 0, 0, 1746, 1747, 1748, 1749,
	0, 0, 1750, 0, 1740, 1744, 1741, 1742, 1736, 1699,
	0, 0, 2309, 1736, 1705, 1735, 0, 1230, 1725, 1736,
	1736, 0, -2, 1709, 1726, 0, 0, 597, 599, 601,
	605, 607, 0, 0, 1635, -2, 0, -2, 332, 1229,
	0, 0, 0, 0, 0, 0, 616, 618, 0, 0,
	539, 0, 0, 632, 0, 610, 0, 613, 0, 1771,
	1774, 0, 0, 1785, 1791, 1792, 0, -2, 0, 0,
	1881, 0, 0, 0, 0, 0, 644, 0, 647, 0,
	0, 0, 434, 549, 211, 521, 0, 211, 211, 530,
	0, 0, 211, 541, 211, 2330, 211, 2328, 232, 546,
	1561, 244, 0, 698, 0, 1478, 1487, 0, 735, 0,
	737, 0, 2296, 2300, 2297, 2301, 0, 726, 0, 0,
	0, 0, 1428, 0, 0, 1375, 0, 0, 168, 2771,
	0, 213, 0, 0, 1192, 2315, 0, 1182, 0, 0,
	2461, 0, 0, 0, 0, 0, 185, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 0, 132,
	133, 0, 0, 0, 0, 0, 0, 0, 0, 1253,
	1254, 1256, 1263, 1265, 0, 1259, 2303, 0, 0, 1260,
	0, 1262, 1264, 1266, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 105, 1286, 0, 0, 1287, 1288, 1500,
	1501, 0, 1523, 1524, 0, 0, 0, 0, 0, 0,
	0, 128, 0, 0, 0, 0, 2282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1279, 0, 1327, 1325, 1301, 1302, 1303, 1304, 1305, 1306,
	1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316,
	1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 0, 0,
	0, 0, -2, 1281, 1282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 0, 321, 2281, 2291, 0,
	1059, 1060, 357, 360, 363, 366, 250, 0, 0, 396,
	407, 0, 0, 1112, 1084, 0, 0, 461, 330, 0,
	0, 475, 479, 2332, 1069, 1247, 1250, 0, 1230, 2771,
	1297, 0, 0, 0, 0, 0, 0, 1338, 0, 0,
	2771, 2310, 2362, 2363, 1514, 1524, 0, 1770, 0, 1547,
	1533, 0, 0, 0, 1547, 1551, 1552, 1554, 1555, 0,
	0, 1761, 1767, 557, 609, 1622, 1622, 330, 328, 2593,
	326, 323, 325, 0, 0, 1536, 1538, 0, 0, 0,
	276, 0, 285, 1739, 283, 0, 288, 0, 0, 0,
	473, 681, 686, 844, 0, 330, 852, 853, 854, 900,
	944, 952, 999, 864, 866, 867, 868, 0, 0, 0,
	1034, 1030, 1031, 1032, 884, 954, 887, 954, 890, 954,
	893, 895, 913, 919, 932, 925, 933, 0, 0, 0,
	946, 963, 0, 982, 0, 0, 0, 0, 0, 0,
	0, 1005, 1006, 1007, 1009, 1014, 1013, 1018, 843, 1758,
	1573, 1574, 1576, 0, 1585, 0, 0, 1661, -2, -2,
	1660, 1664, 1665, -2, -2, -2, -2, 1581, 0, 1590,
	1587, 0, 1646, 1366, 1367, 0, 0, 0, 0, -2,
	-2, 0, 0, 0, 1986, 0, -2, 1965, 1968, 1972,
	1974, 1976, 0, 0, 0, 0, 0, 0, 2209, 0,
	2211, 1987, 2264, 2267, 2202, 0, 2158, 0, 0, 1634,
	1635, 1635, 0, 2056, 0, 2217, 0, 2224, 2225, 0,
	2049, 0, 2258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2060, 0, 0, 0, 0, 2092, 2095, 2098,
	2101, 0, 0, 0, 0, 2081, 0, 0, 0, 2085,
	1851, 1837, 0, 1879, 1877, 1878, 1872, 1879, 1876, 1829,
	0, 1828, 0, 2107, 0, 2109, 2111, 0, 0, 2113,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1993, 1994, 1995, 2015, 2114, 2246,
	2247, 0, 0, 0, 0, 0, 0, 2120, 0, 2252,
	2121, 2123, 1622, 0, 1615, 0, 1680, 1669, 1769, 0,
	2273, 1739, 1682, 1684, 2274, 2312, 1669, 1669, 0, 2221,
	0, 0, 1730, 0, 0, 0, 1732, 1703, 0, 0,
	1697, 0, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1704,
	1230, 1734, 1706, 1710, 2340, 0, 1736, 0, 1721, 0,
	1723, 1756, 0, 1715, 1718, 0, 0, 2355, 1770, 0,
	370, 378, 379, 371, 372, 373, 374, 0, 1415, 0,
	0, 0, 0, 0, 2223, 0, 1776, 0, 1782, 0,
	0, 0, 0, 634, 0, 0, 0, 0, 0, 1559,
	429, 520, 211, 525, 528, 2279, 211, 534, 537, 543,
	240, 0, 694, -2, 733, 734, 736, 0, 732, 165,
	1429, 0, 0, 0, 1371, 0, 1095, 0, 1090, 1091,
	1373, 1377, 1383, 1386, 0, 170, 2771, 182, 0, 2771,
	0, 1156, 0, 0, 0, 0, 0, 0, 1431, 0,
	0, 2771, 211, 2771, 211, 186, 188, 191, 0, 197,
	193, 0, 1092, 0, 1144, 0, 0, 1147, 118, 1429,
	0, 0, 121, 125, 137, 0, 0, 0, 147, 0,
	0, 0, 1388, 1392, 1400, 0, 0, 0, 1257, 1258,
	1261, 1267, 84, 0, 0, 0, 1396, 1398, 1404, 96,
	99, 2771, 2324, 101, 2771, 0, 1370, 0, 0, 0,
	0, 0, 0, 0, 0, 199, 123, 127, 138, 0,
	1406, 120, 0, 226, 0, 0, 216, 211, 2771, 0,
	218, 0, 219, 220, 234, 0, 0, 0, 1072, 1073,
	1326, 0, 1272, 1273, 0, 1284, 1278, 0, 0, 0,
	0, 0, 1408, 1409, 0, 0, 0, 1427, 1424, 1739,
	246, 0, 1739, 254, 0, 2287, 0, 268, 393, 0,
	0, 0, 0, 1111, 1210, 1113, 1115, 1116, 1117, 213,
	0, 2363, 1182, 2513, 2363, 0, 0, 1079, 0, 0,
	0, 467, 463, 0, 472, 478, 477, 483, -2, 0,
	0, 0, 0, -2, 0, 0, 1342, 1336, 1337, 0,
	0, 0, 0, 2771, 1516, 1524, 0, 1620, 1635, 490,
	1525, 1547, 0, 0, 0, 1535, 1531, 1528, 1770, 0,
	0, 0, 0, 0, 1763, 1766, 560, 561, 307, 0,
	0, 0, 0, 0, 330, 0, 0, 0, 0, 0,
	0, 286, 0, 289, 0, 0, 0, 294, 295, 296,
	297, 298, 299, 0, 0, 0, 288, 319, 278, 1739,
	0, 0, 683, 0, 0, 851, 0, 874, 877, 886,
	888, 891, 935, 937, 954, 964, 989, 2311, 990, 1134,
	0, 1134, 0, 0, 1010, 1583, 0, 1658, 1589, 1640,
	1641, 0, 1368, 0, 1904, 1949, 0, 0, -2, 0,
	0, 1953, 0, 0, 0, -2, 0, 0, 0, 2210,
	2212, 0, 2266, 2201, 2051, 0, 0, 0, 2055, 2039,
	2040, 0, 2161, 2227, 2256, 2260, 0, 1889, 1890, 1891,
	1892, 1893, 1894, 1895, 0, 2306, 2341, 2345, 2134, 2135,
	2139, 2320, 0, 0, 0, 2064, 0, 0, 0, 0,
	0, 0, 0, 0, 1870, 1874, 0, 0, 2228, 2239,
	2241, 1991, 1992, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
	2003, 2004, 2005, -2, -2, -2, 2009, 2010, 2011, -2,
	-2, -2, 2016, 0, 0, 0, 2242, 2244, 2245, 2249,
	2250, 0, 2117, 2118, 2119, 2251, 0, 1622, 1616, 1677,
	0, 1768, 1681, 0, 1677, 1677, 1629, 1728, 0, 0,
	1752, 0, 1700, 0, 1701, 0, 0, 1733, 0, 1708,
	1711, 1712, 1722, 0, 1714, 0, 1717, 0, 2051, -2,
	331, 333, 335, 0, 338, 339, 0, 0, 0, 625,
	0, 1415, 1415, 0, 627, 611, 0, 0, 1778, 0,
	0, 1854, 1858, 1882, 638, 640, 0, 0, 2724, 2668,
	0, 637, 522, 531, 242, 0, 1737, 0, 0, 194,
	0, 0, 0, 0, 0, 0, 212, 0, 1191, 0,
	1154, 0, 0, 1181, 0, 0, 1197, 172, 173, 174,
	0, 0, 0, 0, 184, 0, 0, 180, 0, 190,
	196, 195, 0, 1141, 0, 0, 0, 0, 1376, 0,
	0, 0, 144, 145, 146, 0, 151, 0, 152, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1506,
	1507, 0, 1497, 141, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 1365, 236, 0, 0, 0, 0,
	0, 1271, 1329, 1330, 1280, 1389, 1393, 1401, 0, 0,
	0, 0, 0, 652, 1426, 0, 254, 252, 0, 255,
	0, 258, 259, 0, 0, 254, 248, 0, 0, 0,
	1230, 408, 1082, 1198, 0, 0, 1200, 1118, 1122, 0,
	2363, 2363, 0, 2317, 0, 1080, 0, 0, 1199, 459,
	0, 466, 0, 480, 0, 0, 1251, 0, 0, 1275,
	1300, 1230, 0, 1341, 1343, 0, 1351, 0, 0, 0,
	1518, 1524, 0, 1511, 1512, 1654, 1526, 1545, -2, 0,
	0, 1635, 1553, 1550, 1556, 1557, 0, 327, 0, 322,
	324, 0, 310, 0, 1537, 1539, 0, 1053, 1056, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 288, 1739,
	314, 0, 845, 869, 945, 991, 1133, 0, 0, 993,
	0, 0, 1657, 1644, 1645, 1642, 1368, 1951, 1955, 0,
	0, 0, 1957, -2, 0, 1979, -2, -2, 2213, 2265,
	2030, 1635, 2052, 2054, 2041, 2259, 1899, 0, 2141, 2138,
	0, 2125, 0, 2076, 2077, 0, 0, 2080, 2082, 2083,
	2084, 1838, 1831, 1830, 2238, 0, 0, 0, 0, 2116,
	1617, 0, 2130, 0, 0, 1685, 2130, 2130, 1729, 0,
	1731, 1698, 1686, 0, 1695, 0, 2341, 1724, 1716, 0,
	0, 336, 0, 340, 341, 375, 0, 628, 629, 0,
	0, 1772, 1777, 0, 1783, 1853, 0, 0, 0, 0,
	0, 243, 166, 167, 1096, 1094, 1380, 1384, 1381, 0,
	169, 0, 0, 1155, 0, 1158, 0, 0, 0, 0,
	1165, 1182, 0, 0, 0, 0, 0, 0, 1184, 0,
	1183, 0, 0, 1214, 0, 1356, 1363, 0, -2, 0,
	0, 0, 176, 202, 0, 0, 0, 0, 205, 1430,
	178, 0, 0, 211, 211, 1093, 0, 0, 1372, 1374,
	1387, 0, 0, 0, 0, 154, 0, 0, 1390, 1394,
	1402, 1397, 1399, 1405, 0, 102, 0, 1508, 0, 140,
	0, 0, 0, 1407, 224, 225, 0, 211, 0, 211,
	217, 211, 1365, 0, 0, 0, 0, 0, 0, 0,
	1410, 1411, 245, 0, 0, 0, 0, 0, 247, 320,
	254, 395, 0, 1143, 0, 1210, 1202, 1203, 1204, 0,
	1114, 1209, 1211, 0, 0, 1119, 0, 0, 0, 0,
	1099, 1081, 0, 1112, 1084, 0, 464, 481, 0, 484,
	0, 487, 1070, 1248, 1292, 1230, 1295, 0, 0, 1333,
	0, 0, 0, 0, 0, 0, 0, 1520, 1524, 0,
	1513, 1514, 1547, 1653, 0, 0, 0, 1534, 1654, 0,
	329, 330, 0, 330, 290, 0, 291, 292, 293, 300,
	301, 302, 279, 280, 685, 687, 0, 0, 693, 1132,
	0, 0, 0, 0, 1643, 1959, -2, -2, 1980, 0,
	2342, 2344, 1635, 0, 2127, 1637, 0, 0, -2, 0,
	0, 0, 1618, 1601, 0, 1676, 1668, 1670, 1672, 2655,
	2434, 2770, 1602, 1603, 1751, 0, 0, 1719, 337, 1414,
	630, 0, 0, 1779, 0, 635, 0, 0, 0, 0,
	0, 1382, 171, 0, 0, 1159, 1160, 2316, 1162, 0,
	1164, 1166, 1167, 1084, 0, 1171, 0, 2365, 0, 1176,
	1179, 1180, 0, 0, 1193, 1215, 0, 1224, 0, 1358,
	1368, 1362, 0, 1360, 1226, 0, 175, 204, 177, 206,
	201, 0, 1365, 0, 179, 189, 0, 0, 122, 0,
	0, 2428, 157, 155, 153, 100, 1369, 143, 0, 124,
	0, 226, 235, 1364, 237, 221, 211, 0, 1391, 1395,
	1403, 0, 1418, 1419, 1420, 1421, 0, 0, 0, 0,
	256, 0, 257, 260, 261, 0, 0, 1084, 1142, 1083,
	1201, 0, 1212, 1084, 0, 0, 0, 0, 0, 0,
	1086, 0, 1085, 0, 0, 465, 468, 0, 471, 0,
	0, 0, 0, 0, 1299, 0, 1344, 1342, 0, 1350,
	0, 0, 0, 1496, 0, 0, 1515, 1516, 488, 1540,
	0, 0, 1547, 1558, 309, 0, 312, 287, 0, 689,
	0, 691, 0, 992, 994, 0, 0, 2053, 2145, 0,
	0, 2078, 2079, -2, 0, 2019, 2129, 2131, 0, 0,
	0, 0, 0, 1687, 1696, 1415, 1773, 642, 639, 641,
	0, 1378, 0, 1385, 213, 1157, 1161, 0, 1168, 0,
	0, 0, 1172, 1234, 0, 0, 1251, 1251, 1185, 0,
	0, 1218, 1219, 1139, 0, 1220, 1221, 1222, 1357, 1646,
	1363, 1084, 0, 0, 203, 208, 0, 0, 0, 0,
	0, 0, 142, 0, 215, 238, 1365, 0, 1422, 1423,
	0, 0, 253, 272, 0, 1293, 1086, 0, 1213, 1120,
	1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1121,
	1226, 0, 0, 1190, 1097, 0, 1100, 0, 1082, 0,
	469, 470, 485, 0, 486, 0, 0, 1300, 0, 0,
	1351, 0, 0, 1503, 1495, 1524, 1517, 1518, 1770, 0,
	1548, 0, 688, 0, 0, 1002, 1003, 0, 0, 0,
	0, 2140, 1638, 2020, 0, 0, 1671, 1673, 1674, 1675,
	631, 0, 1379, 183, 0, 1228, 1170, 1239, 0, 0,
	0, 0, 0, 1186, 1216, 1217, 1214, 1138, 0, 1361,
	1359, 1195, 1228, 1230, 181, 0, 1226, 0, 1148, 0,
	0, 1151, 0, 0, 158, 2428, 156, 0, 211, 1415,
	211, 0, 275, 0, 266, 264, 265, 1078, 0, 1206,
	1208, 1224, 1226, 1139, 0, 1101, 1143, 1099, 482, 1294,
	1298, 1296, 1334, 1226, 0, 1224, 0, 1510, 1524, 1504,
	1505, 0, 1520, 0, 0, 330, 690, 692, 2137, 2157,
	2146, -2, 2727, 2435, 0, 2157, 2157, 2132, 2133, 0,
	0, 1084, 0, 1173, 1235, 1236, 0, 1231, 1232, 1233,
	2364, 1174, 1175, 1177, 1178, 1770, 0, 1225, 1234, 207,
	1084, 1145, 0, 0, 1146, 0, 0, 161, 0, 163,
	239, 1413, 1416, 0, 262, 0, 0, 1075, 1077, 1084,
	0, 1139, 1224, 1084, 0, 0, 0, 1084, 1086, 1224,
	0, 1139, 0, 1499, 1509, 0, 1519, 1496, 0, 1543,
	0, 311, 2142, 0, 0, 2148, 2149, 2150, 2151, 2152,
	2143, 2144, 643, 1163, 1169, 0, 1237, 0, 1238, 0,
	0, 0, 1194, 1223, 1239, 187, 1149, 0, 1152, 0,
	159, 0, 0, 270, 271, 1205, 1207, 1084, 1139, 1770,
	1087, 0, 1089, 1086, 1098, 1139, 0, 1084, 0, 1522,
	1498, 1502, 2325, 1503, 1541, 0, 0, 0, 2154, 2155,
	0, 0, 0, 1240, 0, 1243, 1244, 0, 1241, 1214,
	0, 0, 211, 0, 1770, 1084, 1189, 1088, 1078, 1084,
	1226, 1770, 1224, 1492, 1524, 1510, 0, 1770, 2153, 2156,
	2147, 1227, 1242, 1245, 1246, 1196, 0, 0, 1417, 273,
	0, 1187, 1770, 1076, 1770, 1224, 1347, 1139, 0, 1499,
	1770, 1544, 1136, 0, 0, 1188, 1345, 1139, 1084, 1521,
	1493, 1542, 1150, 1135, 0, 274, 1084, 1770, 0, 1770,
	1348, 0, 1346, 1136, 1153,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 595, 3, 601, 596, 3,
	607, 608, 599, 597, 612, 598, 609, 600, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 615, 3,
	587, 589, 588, 592, 611, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 605, 3, 606, 602, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 613, 594, 614, 590,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 583, 57926, 584, 57927, 585, 57928, 586, 57929, 591,
	57930, 593, 57931, 603, 57932, 604, 57933, 610, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1493
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1498
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1500
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1503
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1504
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1505
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1506
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1507
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1508
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1509
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1510
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1511
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1512
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1513
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1520
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1529
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1531
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1534
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1535
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1536
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1537
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1538
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1539
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1540
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1541
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1542
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1543
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 71:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1604
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 73:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1630
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 77:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1644
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 82:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1663
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1667
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 84:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1671
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1703
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 96:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1707
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1714
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1726
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1736
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1743
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1753
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1760
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1770
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1779
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1786
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1815
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1847
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1851
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1855
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1861
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1865
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1871
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1880
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1891
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1895
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1901
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1909
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1919
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1923
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1935
		{
			sqlVAL.union.val = tree.RelocateLease
		}
	case 134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1941
		{
			sqlVAL.union.val = tree.RelocateVoters
		}
	case 135:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1945
		{

			sqlVAL.union.val = tree.RelocateVoters
		}
	case 136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1950
		{
			sqlVAL.union.val = tree.RelocateNonVoters
		}
	case 137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1956
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    tree.TableIndexName{Table: name},
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1968
		{

			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    sqlDollar[3].union.tableIndexName(),
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1989
		{
			var zoneName string
			switch e := sqlDollar[3].union.expr().(type) {
			case *tree.UnresolvedName:
				if e.NumParts != 1 {
					return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
				}
				zoneName = e.Parts[0]
			case tree.DefaultVal:
				zoneName = "default"
			default:
				return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
			}
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(zoneName)}
			sqlVAL.union.val = s
		}
	case 140:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2009
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[8].union.slct(),
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[6].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2018
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[7].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2029
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[10].union.slct(),
				FromStoreID:     sqlDollar[6].union.expr(),
				ToStoreID:       sqlDollar[8].union.expr(),
				SubjectReplicas: sqlDollar[4].union.relocateSubject(),
			}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2038
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     sqlDollar[7].union.expr(),
				ToStoreID:       sqlDollar[9].union.expr(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2051
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2056
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2060
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2065
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2071
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 149:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2079
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 150:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2090
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 151:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2100
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 152:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2110
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 153:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2119
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 154:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2130
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 155:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2136
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 156:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2144
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2148
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2152
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 159:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2156
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 160:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2162
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2167
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2178
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2182
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2188
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2192
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2199
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2204
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2209
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2214
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2219
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2224
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2229
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2234
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2239
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2244
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2249
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2254
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2258
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 179:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2263
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2272
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2284
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2294
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2302
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2312
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2315
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2321
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 187:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2328
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:       sqlDollar[7].union.idxElems(),
				Sharded:       sqlDollar[9].union.shardedIndexDef(),
				StorageParams: sqlDollar[10].union.storageParams(),
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2336
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2343
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2352
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2361
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2366
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2373
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2380
		{
			sqlVAL.union.val = &tree.AlterTableSetStorageParams{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2386
		{
			sqlVAL.union.val = &tree.AlterTableResetStorageParams{
				Params: sqlDollar[3].union.storageParamKeys(),
			}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2393
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2394
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2398
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2402
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2408
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2416
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 202:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2420
		{
			sqlVAL.union.val = nil
		}
	case 203:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2426
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2430
		{
			sqlVAL.union.val = nil
		}
	case 205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2436
		{
			sqlVAL.union.val = true
		}
	case 206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2440
		{
			sqlVAL.union.val = false
		}
	case 207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2446
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 208:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2450
		{
			sqlVAL.union.val = nil
		}
	case 209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2457
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2461
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 211:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2465
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2471
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 213:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2475
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 214:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2500
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2511
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2522
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2531
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2541
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2550
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2559
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 221:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2568
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 222:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2572
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2575
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2579
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2586
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2593
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2599
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2606
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2613
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2619
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2627
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2631
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 240:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2652
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2659
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2663
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2667
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 244:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2671
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 245:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2714
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2726
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2736
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2747
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2756
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 250:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2760
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2764
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2772
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 253:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2776
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 254:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2780
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2787
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2791
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2800
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2804
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2808
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2812
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2816
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2898
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.targetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2909
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2914
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2918
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2928
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2934
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2938
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2942
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{IfNotExists: false}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2951
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2955
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2959
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 273:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2965
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 274:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2969
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 275:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2973
		{
			sqlVAL.union.val = nil
		}
	case 276:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3007
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3016
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3026
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3035
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3045
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3052
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3056
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3060
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3066
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3070
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3077
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 287:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3081
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 288:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3085
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3092
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3096
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3105
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3109
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3113
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3117
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3121
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3125
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3129
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3133
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3137
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3141
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3145
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3149
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3154
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3160
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "alter function")
		}
	case 305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3164
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3168
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "alter aggregate")
		}
	case 307:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3205
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3210
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3214
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3220
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3225
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3230
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3234
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 314:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3251
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3254
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3258
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3262
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3270
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3274
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3280
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 321:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3284
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3290
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3294
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3298
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3302
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3308
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3312
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3318
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 329:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3322
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 330:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3326
		{
			sqlVAL.union.val = nil
		}
	case 331:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3338
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3352
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3358
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 334:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3362
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3368
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3372
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3380
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3384
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3388
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3392
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3396
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3404
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3405
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3406
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3407
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3408
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3418
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3426
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3428
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3432
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3435
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3445
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 357:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3454
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3462
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3464
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3468
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3471
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3481
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3490
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3498
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3500
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3504
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3507
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3515
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3518
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3522
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3526
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 372:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3530
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 373:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3534
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 374:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3547
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 375:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3552
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 376:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3555
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "comment on extension")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3556
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "comment on function")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3560
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3565
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3577
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3579
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3580
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3583
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3584
		{
		}
	case 392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3585
		{
			return helpWith(sqllex, "CREATE")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3592
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3595
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 395:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3599
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension if not exists with")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3602
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension with")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3605
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3608
		{
			return unimplemented(sqllex, "create access method")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3609
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "create aggregate")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3610
		{
			return unimplemented(sqllex, "create cast")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3611
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3612
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3613
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3614
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3615
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3616
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3617
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3618
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3619
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3620
		{
			return unimplemented(sqllex, "create publication")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3621
		{
			return unimplemented(sqllex, "create rule")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3622
		{
			return unimplemented(sqllex, "create server")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3623
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3624
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3625
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3626
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3629
		{
		}
	case 418:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3630
		{
		}
	case 419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3633
		{
		}
	case 420:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3634
		{
		}
	case 421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3637
		{
		}
	case 422:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3638
		{
		}
	case 423:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3641
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3642
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "drop aggregate")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3643
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3644
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3645
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3646
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3647
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension if exists")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3648
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3649
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3650
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3651
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3652
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3653
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3654
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3655
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3656
		{
			return unimplemented(sqllex, "drop server")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3657
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3658
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3659
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3662
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3663
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3664
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3665
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3666
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 452:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3668
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3669
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3670
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3671
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3681
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3689
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3693
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 462:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3697
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3703
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3707
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3716
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3723
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3729
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3735
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3739
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3750
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3762
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3777
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3785
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3795
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3799
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3805
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3809
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3816
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 479:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3820
		{

			sqlVAL.union.val = nil
		}
	case 480:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3837
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3848
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 482:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3852
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 483:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3856
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3863
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3867
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3876
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3880
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 488:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3893
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 489:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3903
		{
			return helpWith(sqllex, "DELETE")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3906
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3907
		{
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3915
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3918
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3919
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3920
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3921
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3922
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3931
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3932
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3933
		{
		}
	case 504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3934
		{
			return helpWith(sqllex, "DROP")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3937
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3938
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3939
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3940
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3941
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3942
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3943
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3951
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 520:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3955
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3959
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 522:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3968
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3976
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 524:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3984
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3988
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3991
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3999
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4003
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4006
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 530:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4014
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4023
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4031
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4039
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4047
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4054
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 536:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4061
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4069
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4076
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 539:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4080
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4086
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4090
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 542:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4099
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4107
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4114
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4122
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4126
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4129
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 548:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4133
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4138
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4151
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4156
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4158
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4163
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 554:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4167
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4190
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4197
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 557:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4199
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4207
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4215
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 560:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4223
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 561:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4231
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4242
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4250
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4253
		{
			return helpWith(sqllex, "DELETE")
		}
	case 574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4255
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4256
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4257
		{
			return helpWith(sqllex, "INSERT")
		}
	case 582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4260
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4262
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4265
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4270
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4271
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4272
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4277
		{
			return helpWith(sqllex, "DELETE")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4278
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4279
		{
			return helpWith(sqllex, "INSERT")
		}
	case 602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4281
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4285
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4286
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4290
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4294
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 610:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4304
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4312
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4320
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4324
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 614:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4328
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4338
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4345
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4353
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4357
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 619:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4361
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4371
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4375
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4379
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4383
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4386
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4409
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), WithGrantOption: sqlDollar[7].union.bool()}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4413
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 627:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4417
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4421
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), WithGrantOption: sqlDollar[8].union.bool()}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4425
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:        sqlDollar[7].union.roleSpecList(),
				WithGrantOption: sqlDollar[8].union.bool(),
			}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4436
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 631:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4440
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4452
		{
			return unimplementedWithIssueDetail(sqllex, 74780, "grant privileges on sequence")
		}
	case 633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4455
		{
			return helpWith(sqllex, "GRANT")
		}
	case 634:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4478
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), GrantOptionFor: false}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4482
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Grantees: sqlDollar[9].union.roleSpecList(), Targets: sqlDollar[7].union.targetList(), GrantOptionFor: true}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4486
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4490
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4494
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), GrantOptionFor: false}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4498
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Targets: sqlDollar[8].union.targetList(), Grantees: sqlDollar[10].union.roleSpecList(), GrantOptionFor: true}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4502
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[7].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4513
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[8].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 642:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4524
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:4536
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[11].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4548
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4551
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4557
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4561
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4571
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4575
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4589
		{
			return helpWith(sqllex, "RESET")
		}
	case 657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4590
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4598
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4602
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4606
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true, Reset: true}
		}
	case 661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4609
		{
			return helpWith(sqllex, "RESET")
		}
	case 662:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4617
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4620
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4631
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4634
		{
			return helpWith(sqllex, "USE")
		}
	case 667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4638
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4639
		{
		}
	case 669:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4640
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4644
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4645
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4646
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4647
		{
			return helpWith(sqllex, "USE")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4663
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4678
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4681
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 683:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4699
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4707
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4711
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 686:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4715
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4721
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4725
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4731
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4735
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4739
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 692:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4743
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4747
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 694:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4758
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4761
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 698:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4771
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4787
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4790
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4792
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4795
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4798
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4812
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4817
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4834
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4837
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 708:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4839
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 709:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4842
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 710:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4846
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4865
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4869
		{
			return unimplemented(sqllex, "set from current")
		}
	case 714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4873
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4878
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4887
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4892
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4896
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4908
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4913
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4920
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4924
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4930
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4934
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4941
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4962
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4966
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4972
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4976
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4980
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4984
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4988
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4994
		{
			sqlVAL.union.val = tree.Low
		}
	case 739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4998
		{
			sqlVAL.union.val = tree.Normal
		}
	case 740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5002
		{
			sqlVAL.union.val = tree.High
		}
	case 741:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5013
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 742:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5017
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 743:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5021
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 745:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5026
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 746:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5030
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5045
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5046
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5047
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5048
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5049
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5050
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5051
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5052
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5053
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5055
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5056
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5057
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5058
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5059
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5061
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5062
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5063
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5065
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5067
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5068
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5069
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5070
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5071
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 798:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5072
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5073
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5074
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5075
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 806:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5076
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 808:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5077
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 810:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5078
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 812:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5079
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 814:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5080
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 815:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5081
		{
			return helpWith(sqllex, "SHOW")
		}
	case 819:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5084
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5089
		{
		}
	case 821:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5090
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 822:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5093
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5097
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5102
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5107
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5112
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5117
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5127
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5128
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5129
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 832:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5134
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5144
		{
			sqlVAL.str = "client_encoding"
		}
	case 840:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5150
		{
			sqlVAL.str = "timezone"
		}
	case 841:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5151
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 842:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5155
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5159
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 844:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5175
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5179
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5183
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5194
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5202
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 849:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5210
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5216
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5224
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5233
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5242
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5251
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5259
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 856:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5269
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5273
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5276
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5278
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5281
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5283
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5287
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5290
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 864:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5298
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5301
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 866:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5309
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5313
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5317
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5321
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5324
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5332
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5335
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 873:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5341
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles: sqlDollar[4].union.roleSpecList(),
			}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5346
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
			}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5351
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5358
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5362
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5372
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5381
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5388
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5391
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 882:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5404
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5412
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 884:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5420
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5423
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 886:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5425
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5429
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5433
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5436
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5438
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5442
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5445
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 893:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5453
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5456
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 895:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5458
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5461
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5469
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5472
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 899:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5474
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5477
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 901:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5481
		{
			sqlVAL.union.val = true
		}
	case 902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5483
		{
			sqlVAL.union.val = true
		}
	case 903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5485
		{
			sqlVAL.union.val = false
		}
	case 906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5502
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5506
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5510
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5513
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5514
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 911:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5515
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5517
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5521
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5525
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5529
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5532
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5534
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5542
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5550
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5558
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 921:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5559
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5569
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5575
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 924:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5577
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5583
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5585
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5591
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5595
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 929:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5599
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 930:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5605
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 931:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5609
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5613
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 933:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5624
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5627
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 935:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5629
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5632
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 937:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5634
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5638
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 939:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5641
		{
			sqlVAL.union.val = true
		}
	case 940:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5642
		{
			sqlVAL.union.val = false
		}
	case 941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5650
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5653
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 943:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5655
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5658
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 945:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5666
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5676
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5686
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5689
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5696
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5699
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 951:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5701
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5704
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 953:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5707
		{
			sqlVAL.union.val = true
		}
	case 954:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5708
		{
			sqlVAL.union.val = false
		}
	case 955:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5715
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5719
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5722
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 958:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5729
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5733
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5736
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5743
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5747
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 963:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5751
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5758
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 965:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5762
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5773
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5776
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 968:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5784
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5789
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5794
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5798
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5810
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5814
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5819
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5824
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5829
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5834
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5838
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5842
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5845
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 981:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5855
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5858
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 983:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5860
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5863
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 985:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5871
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5874
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 987:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5882
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5885
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 989:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5895
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5899
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5903
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5911
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5919
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5926
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5932
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5934
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5937
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 998:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5939
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5942
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5946
		{
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5955
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5963
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5969
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5978
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5983
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5987
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5990
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5999
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6003
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6019
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6025
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6031
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6037
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6044
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6049
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6053
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6059
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6066
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6072
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6077
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6197
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6201
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6205
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6244
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6248
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6253
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6257
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6265
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6274
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6278
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6282
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6289
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6293
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6306
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6307
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6308
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6309
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6319
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6320
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6321
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6322
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6330
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6333
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6343
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6352
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6361
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6363
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6367
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6371
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6374
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6379
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6383
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6398
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6406
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6408
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6414
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6422
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6425
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6434
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6440
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6447
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6454
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6461
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6472
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6481
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6489
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6525
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:6540
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6557
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6561
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6568
		{

			sqlVAL.union.val = nil
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6574
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6580
		{
			sqlVAL.str = ""
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6584
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6590
		{
			sqlVAL.union.val = nil
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6594
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6599
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6603
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6607
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6611
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6621
		{
			sqlVAL.union.val = []tree.Name{tree.Name(sqlDollar[1].str)}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6625
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParamKeys(), tree.Name(sqlDollar[3].str))
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6631
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6637
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6641
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6647
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6660
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6674
		{
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6675
		{
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6676
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6694
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6695
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6696
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6700
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6701
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6702
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6703
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6704
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6709
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6715
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6719
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6725
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6731
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6744
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6753
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6757
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6763
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6768
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6769
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6770
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6771
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6772
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6773
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6774
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6775
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6776
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6781
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6788
		{
			sqlVAL.str = ""
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6795
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6801
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6809
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6815
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6821
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6827
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6837
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6843
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6849
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6856
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6863
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6869
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6873
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6879
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6889
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6893
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6899
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6913
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6924
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6928
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6934
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6938
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6942
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6946
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6950
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6954
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6958
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6976
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6980
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6984
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6988
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6994
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7000
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:       true,
				ShardBuckets:  sqlDollar[5].union.expr(),
				StorageParams: sqlDollar[6].union.storageParams(),
			}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7008
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7012
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7016
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7020
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7030
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7034
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7038
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7043
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7049
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7055
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7059
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7065
		{

			sqlVAL.union.val = true
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7070
		{
			sqlVAL.union.val = false
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7075
		{
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7079
		{
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7082
		{
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7086
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
			}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7098
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
				},
			}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7112
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7125
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7137
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7142
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7148
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7155
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7167
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					Sharded:       sqlDollar[6].union.shardedIndexDef(),
					StorageParams: sqlDollar[7].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7179
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7190
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7197
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7201
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7207
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7217
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7228
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7232
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7239
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7245
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					StorageParams: sqlDollar[6].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7257
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7261
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7267
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7273
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7277
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7283
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7287
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7293
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7300
		{
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7301
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7302
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7303
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7304
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7305
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7323
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7327
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7333
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[3].union.expr(),
			}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7339
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7345
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7349
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7355
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7359
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7379
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7383
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7387
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7391
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7400
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7404
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7408
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7412
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7416
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7422
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7428
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7436
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7440
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7444
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7448
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7452
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7472
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7481
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7489
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7493
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7496
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7497
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7500
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7509
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7511
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7512
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7513
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7523
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7525
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7527
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7529
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7531
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7532
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7534
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7535
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7537
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7539
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7547
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7550
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7554
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7560
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7564
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7574
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7578
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7581
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7592
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7596
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7600
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7604
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7608
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7612
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7615
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7619
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7623
		{
			sqlVAL.str = ""
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7629
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7633
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7637
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7645
		{
			sqlVAL.union.val = true
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7649
		{

			sqlVAL.union.val = true
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7654
		{
			sqlVAL.union.val = false
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7664
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7678
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7690
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7702
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7712
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7722
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7726
		{
			return unimplementedWithIssue(sqllex, 74083)
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7730
		{
			sqlVAL.union.val = true
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7734
		{
			sqlVAL.union.val = true
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7740
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7744
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7748
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7752
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7756
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7760
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7764
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7768
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7772
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7776
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7780
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7784
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7788
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7792
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7796
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7800
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7804
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7808
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7812
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7816
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7820
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7824
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7832
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7836
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7842
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7846
		{
			sqlVAL.union.val = nil
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7852
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7856
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7861
		{
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7862
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7871
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7879
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7887
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7889
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7891
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7893
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7895
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7897
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7901
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7905
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7911
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7915
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7932
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7949
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:7967
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:7983
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7999
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8003
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8018
		{
			sqlVAL.union.val = false
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8024
		{
			sqlVAL.union.val = true
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8028
		{
			sqlVAL.union.val = false
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8034
		{
			sqlVAL.union.val = true
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8038
		{
			sqlVAL.union.val = false
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8044
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8048
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8057
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8063
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8069
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8077
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8101
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8102
		{
			sqlVAL.str = ""
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8105
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8106
		{
			sqlVAL.str = ""
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8110
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8114
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8118
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8124
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8130
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8136
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8142
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8150
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8156
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8164
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8172
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8182
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8188
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8195
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8201
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8207
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8214
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8220
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8226
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8232
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8241
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8249
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8259
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8265
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8275
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8281
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8293
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8302
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8312
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8321
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8333
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8339
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8347
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8356
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8367
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8373
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8385
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8391
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8405
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8411
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8419
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8423
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8435
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8444
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8453
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8462
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8470
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8474
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8485
		{
			sqlVAL.union.val = true
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8489
		{
			sqlVAL.union.val = false
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8495
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8503
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8514
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8518
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8522
		{
			sqlVAL.union.val = tree.Types
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8526
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8530
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8534
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8540
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8543
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8549
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8553
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8558
		{
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8559
		{
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8562
		{
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8563
		{
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8571
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8574
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8584
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8592
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8594
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8598
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8601
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8614
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8622
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8624
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8630
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8643
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8651
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8653
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8659
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8667
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8670
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8674
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8675
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8676
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8692
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8695
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8697
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8700
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8710
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8713
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8715
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8718
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8722
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8727
		{
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8728
		{
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8729
		{
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8739
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8743
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8746
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8749
		{
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8750
		{
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8754
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8758
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8764
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8768
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8774
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8778
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8791
		{
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8793
		{
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8797
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8802
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8806
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8810
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8814
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8820
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8826
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8832
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8836
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8842
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8846
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:8856
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
				Owner:           sqlDollar[14].union.roleSpec(),
			}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8872
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8887
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8892
		{
			sqlVAL.str = ""
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8897
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8904
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8910
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8915
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8922
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8926
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8932
		{

		}
	case 1506:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8939
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8943
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8947
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8956
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8962
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8966
		{
			sqlVAL.str = ""
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8972
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8976
		{
			sqlVAL.str = ""
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8982
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8986
		{
			sqlVAL.str = ""
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8992
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8996
		{
			sqlVAL.str = ""
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9002
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9010
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9016
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9020
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9027
		{
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9028
		{
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9043
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9050
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9057
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9068
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9075
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9079
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9088
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9093
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9099
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9103
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9107
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9113
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9117
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9137
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9141
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9148
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9156
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9165
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				DoNothing:  true,
			}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9172
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				Exprs:      sqlDollar[9].union.updateExprs(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
			}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9182
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9187
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9191
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9208
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9220
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9223
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9226
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9232
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9236
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9249
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9252
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9256
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9267
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9273
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9282
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9288
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9329
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9335
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9339
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9354
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9358
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9362
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9366
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9370
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9374
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9378
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9382
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9387
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9388
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9391
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9392
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9396
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9400
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9406
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9415
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9416
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9417
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9418
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9421
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9422
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9425
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9426
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9427
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9432
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9467
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9468
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9469
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9491
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9504
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9518
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9530
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9534
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9543
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9552
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9567
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9574
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9586
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9590
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9595
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9601
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9605
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9611
		{
			sqlVAL.union.val = true
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9615
		{
			sqlVAL.union.val = false
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9621
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9631
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9643
		{
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9644
		{
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9648
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9652
		{
			sqlVAL.union.val = nil
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9657
		{
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9658
		{
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9662
		{
			sqlVAL.union.val = true
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9666
		{
			sqlVAL.union.val = false
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9670
		{
			sqlVAL.union.val = false
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9676
		{
			sqlVAL.union.val = true
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9682
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9687
		{
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9688
		{
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9691
		{
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9692
		{
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9696
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9700
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9706
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9712
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9716
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9723
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9727
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9733
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9745
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9750
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9762
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9766
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9770
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9776
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9785
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9796
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9797
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9801
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9805
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9809
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9823
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9827
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9835
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9842
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9864
		{
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9865
		{
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9868
		{
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9869
		{
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9886
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9890
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9895
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9896
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9902
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9903
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9904
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9905
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9909
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9913
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9932
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9935
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9937
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9949
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9952
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9954
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9960
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9964
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9970
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9974
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9979
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9984
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9990
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9995
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10000
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10005
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10011
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10016
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10021
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10028
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10033
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10044
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10048
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10052
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10060
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10094
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10104
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10114
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10122
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10131
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10135
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10139
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10150
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10174
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10180
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10191
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10195
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10201
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10203
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10207
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10213
		{
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10215
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10218
		{
			sqlVAL.union.val = nil
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10219
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10220
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10224
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10228
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10234
		{
			sqlVAL.union.val = true
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10238
		{
			sqlVAL.union.val = false
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10258
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10262
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10266
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10270
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10274
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10278
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10284
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10288
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10295
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10301
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10308
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10314
		{
			sqlVAL.str = tree.AstFull
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10318
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10322
		{
			sqlVAL.str = tree.AstRight
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10326
		{
			sqlVAL.str = tree.AstInner
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10332
		{
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10333
		{
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10357
		{
			sqlVAL.str = tree.AstHash
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10361
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10365
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10369
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10373
		{
			sqlVAL.str = ""
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10386
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10390
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10395
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10396
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10397
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10398
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10402
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10407
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10421
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10425
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10431
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10437
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10447
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10457
		{
			sqlVAL.union.val = true
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10461
		{
			sqlVAL.union.val = false
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10467
		{
			sqlVAL.union.val = true
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10471
		{
			sqlVAL.union.val = false
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10477
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10484
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10496
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10509
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10517
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10518
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10528
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10535
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10536
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10538
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10546
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10547
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10559
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10566
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10575
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10615
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10620
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10627
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10628
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10631
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10632
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10633
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10634
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10635
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10636
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10637
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10638
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10639
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10640
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10641
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10642
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10643
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10644
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10645
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10646
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10647
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10648
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10649
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10650
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10651
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10652
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10653
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10654
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10655
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10656
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10657
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10658
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10659
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10660
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10661
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10662
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10665
		{
			sqlVAL.union.val = types.Geography
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10666
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10667
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10669
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10673
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10677
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10685
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10711
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10719
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10727
		{
			sqlVAL.union.val = nil
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10734
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10738
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10742
		{
			sqlVAL.union.val = types.Int2
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10746
		{
			sqlVAL.union.val = types.Int
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10750
		{
			sqlVAL.union.val = types.Float4
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10754
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10758
		{
			sqlVAL.union.val = types.Float
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10762
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10770
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10778
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10786
		{
			sqlVAL.union.val = types.Bool
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10792
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10805
		{
			sqlVAL.union.val = types.Float
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10811
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10817
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10825
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10829
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10833
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10839
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10851
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10857
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10861
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10865
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10869
		{
			sqlVAL.union.val = types.String
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10878
		{
			sqlVAL.union.val = true
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10879
		{
			sqlVAL.union.val = false
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10884
		{
			sqlVAL.union.val = types.Date
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10888
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10896
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10908
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10910
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10919
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10927
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10940
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10944
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10954
		{
			sqlVAL.union.val = true
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10955
		{
			sqlVAL.union.val = false
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10956
		{
			sqlVAL.union.val = false
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10960
		{
			sqlVAL.union.val = types.Interval
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10964
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10968
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10979
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10987
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10995
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11003
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11011
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11019
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11025
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11034
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11043
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11052
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11058
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11067
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11073
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11083
		{
			sqlVAL.union.val = nil
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11089
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11097
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11134
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11138
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11142
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11146
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11157
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11162
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11166
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11170
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11174
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11178
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11182
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11186
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11190
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11194
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11198
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11202
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11206
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11210
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11214
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11218
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11222
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11226
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11230
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11234
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11238
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11242
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11246
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11250
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11254
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11258
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11262
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11266
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11270
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11274
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11278
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11282
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11286
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11290
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11294
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11298
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11302
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11306
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11314
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11324
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11328
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11332
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11336
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11340
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11344
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11348
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11352
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11356
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11360
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11364
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11368
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11372
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11376
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11380
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11384
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11388
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11392
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11396
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11400
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11404
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: tree.MakeComparisonOperator(tree.EQ),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11412
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: tree.MakeComparisonOperator(tree.NE),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11420
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11424
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11428
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11432
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11435
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11437
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11441
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11445
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11449
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11453
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11457
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11461
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11465
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11469
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11473
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11477
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11481
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11485
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11489
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11493
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11497
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11501
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11518
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11523
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11535
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11539
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11543
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11547
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11551
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11555
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11559
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11563
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11567
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11571
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11575
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11579
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11583
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11587
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11591
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11595
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11599
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11603
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11607
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11611
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11615
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11619
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11623
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11627
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11631
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11639
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11649
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11653
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11657
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11661
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11675
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11683
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11719
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11723
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11727
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11731
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11735
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11740
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11742
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11746
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11750
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11754
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11758
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11762
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11766
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11775
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11782
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11786
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11790
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11800
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11805
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11809
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11813
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11817
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11821
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11824
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11828
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11832
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11835
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11836
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11838
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11844
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11848
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11851
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11860
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11913
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11926
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11938
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11947
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11948
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11953
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11957
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11961
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11967
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11971
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11975
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11979
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11983
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11987
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11993
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11997
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12001
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12005
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12009
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12013
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12017
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12021
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12025
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12029
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12033
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12037
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12041
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12048
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12051
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12053
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12056
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12058
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12062
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12065
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12067
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12071
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12074
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12076
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12080
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12083
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12085
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12089
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12092
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12094
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12097
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12099
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12102
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12104
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12107
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12109
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12112
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12114
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12117
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12119
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12123
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12126
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12127
		{
			return unimplemented(sqllex, "treat")
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12129
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12133
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12137
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12141
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12145
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12148
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12150
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12153
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12159
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12163
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12169
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12173
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12180
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12184
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12190
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12194
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12200
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12208
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12212
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12216
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12223
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12243
		{
			sqlVAL.str = ""
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12249
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12253
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12259
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12267
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12275
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12283
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12289
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12302
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12330
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12334
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12338
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12342
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12349
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12358
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12362
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12366
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12370
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12375
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12388
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12392
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12399
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12411
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Any)
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12415
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Some)
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12419
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.All)
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12435
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Plus)
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12436
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Minus)
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12437
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mult)
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12438
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Div)
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12439
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mod)
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12440
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Pow)
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12441
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LT)
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12442
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GT)
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12443
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.EQ)
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12444
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LE)
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12445
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GE)
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12446
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NE)
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12448
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONExists)
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12449
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitand)
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12450
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitor)
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12451
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitxor)
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12452
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.FloorDiv)
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12453
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Contains)
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12454
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ContainedBy)
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12455
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.LShift)
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12456
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.RShift)
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12457
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Concat)
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12458
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchVal)
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12459
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchText)
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12460
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchValPath)
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12461
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchTextPath)
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12462
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONSomeExists)
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12463
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONAllExists)
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12464
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegMatch)
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12465
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.RegIMatch)
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12466
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegIMatch)
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12467
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Overlaps)
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12468
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12469
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12470
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12475
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12491
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12498
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Like)
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12499
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotLike)
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12500
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ILike)
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12501
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotILike)
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12524
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12528
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12534
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12538
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12542
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12553
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12557
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12563
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12567
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12574
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12580
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12584
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12590
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12594
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12600
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12604
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12610
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12614
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12620
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12624
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12647
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12651
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12655
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12661
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12668
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12672
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12689
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12693
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12697
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12701
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12705
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12711
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12717
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12723
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12727
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12731
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12737
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12749
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12756
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12760
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12766
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12772
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12776
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12783
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12789
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12793
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12800
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12806
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12810
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12815
		{
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12816
		{
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12820
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12824
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12830
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12839
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12843
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12847
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12855
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12859
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12865
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12869
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12888
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12896
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12919
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12928
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2287:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12932
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12936
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12940
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12946
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12950
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12965
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2297:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12969
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2300:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12981
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12985
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12994
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13005
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13014
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13022
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2306:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13039
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13124
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13132
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13136
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13142
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13146
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2332:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13154
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13181
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13188
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2341:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13192
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2342:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13196
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2344:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13210
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2345:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13214
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13218
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13231
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13240
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2353:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13258
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13271
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2355:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13278
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2363:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13303
		{
			sqlVAL.str = ""
		}
	case 2364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13309
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2365:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13313
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
